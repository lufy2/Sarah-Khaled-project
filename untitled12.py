# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FL2mAn-rspduJ6j0zFf_pPzNb9MV3fVf
"""

# Import Required Libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn import metrics, svm
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.impute import SimpleImputer
import datetime
import gdown  # Library for downloading files from Google Drive

# Load Data from Google Drive
file_id = '1hkebti9cgRECbze77SKfm8b_eGBJkTnL'
url = f'https://drive.google.com/uc?id={file_id}'
output = 'ai_ghibli_trend_dataset.csv'

try:
    gdown.download(url, output, quiet=False)
    AISG = pd.read_csv(output)
    print("Data loaded successfully!")
except Exception as e:
    print(f"Error occurred while loading data: {e}")
    # Use sample data as fallback
    print("Using sample data instead...")
    data = {
        'image_id': range(1, 101),
        'likes': np.random.randint(100, 10000, 100),
        'shares': np.random.randint(10, 1000, 100),
        'platform': np.random.choice(['Instagram', 'TikTok', 'Twitter'], 100)
    }
    AISG = pd.DataFrame(data)

# Data Exploration
print("\nData sample:")
print(AISG.head(10))

print("\nData information:")
AISG.info()

print("\nDescriptive statistics:")
print(AISG.describe())

# Data Cleaning and Processing
# (Added column existence checks before processing to avoid errors)

# List of expected columns
expected_columns = ['image_id', 'user_id', 'prompt', 'likes', 'shares', 'comments',
                  'platform', 'generation_time', 'gpu_usage', 'file_size_kb',
                  'resolution', 'style_accuracy_score', 'is_hand_edited',
                  'ethical_concerns_flag', 'creation_date', 'top_comment']

# Check for essential columns
if 'platform' not in AISG.columns:
    AISG['platform'] = 'Unknown'  # Default value if column doesn't exist

if 'likes' not in AISG.columns:
    AISG['likes'] = np.random.randint(100, 10000, len(AISG))  # Random values if column doesn't exist

# 1. Text Column Processing
# Remove extra spaces from platform column
AISG["platform"] = AISG["platform"].str.strip().str.replace(" ", "_")

# 2. Date Column Processing (if exists)
if 'creation_date' in AISG.columns:
    try:
        AISG['creation_date'] = pd.to_datetime(AISG['creation_date'])
        AISG['year'] = AISG['creation_date'].dt.year
        AISG['month'] = AISG['creation_date'].dt.month
        AISG['day'] = AISG['creation_date'].dt.day
        AISG['weekday'] = AISG['creation_date'].dt.weekday
    except:
        print("Failed to convert date column, it will be ignored")
else:
    print("Date column not found in data")

# 3. Categorical Column Processing
if 'is_hand_edited' in AISG.columns:
    AISG['is_hand_edited'] = AISG['is_hand_edited'].map({'Yes': 1, 'No': 0})
else:
    AISG['is_hand_edited'] = 0  # Default: Not hand-edited

if 'ethical_concerns_flag' in AISG.columns:
    AISG['ethical_concerns_flag'] = AISG['ethical_concerns_flag'].map({'Yes': 1, 'No': 0})
else:
    AISG['ethical_concerns_flag'] = 0  # Default: No ethical concerns

# Encode image resolution (if column exists)
if 'resolution' in AISG.columns:
    resolution_map = {'512x512': 0, '1024x1024': 1, '2048x2048': 2}
    AISG['resolution'] = AISG['resolution'].map(resolution_map)
else:
    AISG['resolution'] = 0  # Default: 512x512 resolution

# Platform encoding
le = LabelEncoder()
AISG['platform_encoded'] = le.fit_transform(AISG['platform'])

# 4. Remove unnecessary columns (with existence check first)
columns_to_drop = []
for col in ['image_id', 'user_id', 'prompt', 'top_comment', 'creation_date', 'platform']:
    if col in AISG.columns:
        columns_to_drop.append(col)

AISG_cleaned = AISG.drop(columns_to_drop, axis=1)

# 5. Handle Missing Values
# Select only numeric columns for median imputation
numeric_cols = AISG_cleaned.select_dtypes(include=np.number).columns
AISG_cleaned_numeric = AISG_cleaned[numeric_cols]

imputer = SimpleImputer(strategy='median')
AISG_cleaned[numeric_cols] = imputer.fit_transform(AISG_cleaned_numeric)

# Data Analysis
print("\nPlatform distribution:")
print(AISG['platform'].value_counts())

# Data Visualization
plt.figure(figsize=(12, 6))
sns.boxplot(x='platform', y='likes', data=AISG)
plt.title('Likes Distribution by Platform')
plt.xticks(rotation=45)
plt.show()

# Model Building
if len(AISG_cleaned.columns) > 1:  # Ensure there are enough features
    # Split data
    target_cols = ['likes', 'shares', 'comments']
    features_to_drop = [col for col in target_cols if col in AISG_cleaned.columns]

    X = AISG_cleaned.drop(features_to_drop, axis=1, errors='ignore')  # Features
    if 'likes' in AISG_cleaned.columns and pd.api.types.is_numeric_dtype(AISG_cleaned['likes']):
        y = AISG_cleaned['likes']  # Target (predicting number of likes)
    else:
        print("Column 'likes' not found or not numeric in AISG_cleaned. Cannot build model.")
        X = pd.DataFrame()
        y = pd.Series(dtype='float64')

    if not X.empty:
        # Scale data
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)

        # Split into train and test sets
        X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42)

        # Train Linear Regression model
        print("\nTraining Linear Regression model...")
        lr_model = LinearRegression()
        lr_model.fit(X_train, y_train)
        y_pred_lr = lr_model.predict(X_test)

        # Evaluate model
        mse_lr = mean_squared_error(y_test, y_pred_lr)
        r2_lr = r2_score(y_test, y_pred_lr)
        print(f"Linear Regression - MSE: {mse_lr:.2f}, R2: {r2_lr:.2f}")

        # Train Random Forest model
        print("\nTraining Random Forest model...")
        rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
        rf_model.fit(X_train, y_train)
        y_pred_rf = rf_model.predict(X_test)

        # Evaluate model
        mse_rf = mean_squared_error(y_test, y_pred_rf)
        r2_rf = r2_score(y_test, y_pred_rf)
        print(f"Random Forest - MSE: {mse_rf:.2f}, R2: {r2_rf:.2f}")

        # Compare models
        plt.figure(figsize=(10, 5))
        plt.scatter(y_test, y_pred_lr, alpha=0.5, label='Linear Regression')
        plt.scatter(y_test, y_pred_rf, alpha=0.5, label='Random Forest')
        plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--')
        plt.xlabel('Actual Values')
        plt.ylabel('Predictions')
        plt.title('Model Performance Comparison')
        plt.legend()
        plt.show()

        # Feature importance analysis for Random Forest
        feature_importances = pd.DataFrame({
                'Feature': X.columns,
                'Importance': rf_model.feature_importances_
            }).sort_values('Importance', ascending=False)

        plt.figure(figsize=(10, 6))
        sns.barplot(x='Importance', y='Feature', data=feature_importances)
        plt.title('Feature Importance in Random Forest Model')
        plt.show()
    else:
        print("No valid features available for model building after data processing.")
else:
    print("Not enough features to build model. Check your data.")

# Create engagement ratio features
# Assuming 'followers' column might exist, otherwise ratio is 0
AISG['engagement_ratio'] = (AISG['likes'] + AISG['shares']*5) / AISG['followers'] if 'followers' in AISG.columns and AISG['followers'].sum() > 0 else 0

# Time-based features (if date exists)
if 'creation_date' in AISG.columns:
    AISG['day_of_week'] = AISG['creation_date'].dt.dayofweek
    # Remove the extra indentation from this line
    AISG['is_weekend'] = AISG['day_of_week'].isin([5,6]).astype(int)

from sklearn.model_selection import GridSearchCV

# Try XGBoost for better performance
from xgboost import XGBRegressor

# Parameter grid for tuning
param_grid = {
    'n_estimators': [50, 100, 200],
    'max_depth': [3, 5, 7],
    'learning_rate': [0.01, 0.1, 0.2]
}

# Remove the extra indentation from the following lines
xgb = XGBRegressor()
grid_search = GridSearchCV(xgb, param_grid, cv=5, scoring='neg_mean_squared_error')
grid_search.fit(X_train, y_train)

best_xgb = grid_search.best_estimator_
y_pred_xgb = best_xgb.predict(X_test)

if 'creation_date' in AISG.columns:
    # Resample by week
    time_series = AISG.set_index('creation_date').resample('W')['likes'].mean()

    plt.figure(figsize=(12,6))
    time_series.plot()
    plt.title('Weekly Likes Trend Over Time')
    plt.ylabel('Average Likes')
    plt.show()

if 'prompt' in AISG.columns:
    from wordcloud import WordCloud

    text = ' '.join(AISG['prompt'].dropna())
    wordcloud = WordCloud(width=800, height=400).generate(text)

    plt.figure(figsize=(12,6))
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt.title('Most Common Words in AI Prompts')
    plt.show()

platform_stats = AISG.groupby('platform').agg({
    'likes': ['mean', 'median', 'count'],
    'shares': 'mean'
}).sort_values(('likes', 'mean'), ascending=False)

print("\nPlatform Performance Metrics:")
print(platform_stats)
# Remove the extra '})' which seems to be a typo

# Correlation heatmap
plt.figure(figsize=(10,8))
sns.heatmap(AISG_cleaned.corr(), annot=True, cmap='coolwarm')
plt.title('Feature Correlation Matrix')
plt.show()

# 3D plot of top features (if available)
from mpl_toolkits.mplot3d import Axes3D

if all(col in AISG_cleaned.columns for col in ['likes', 'shares', 'comments']):
    fig = plt.figure(figsize=(10,8))
    ax = fig.add_subplot(111, projection='3d') # Corrected indentation
    ax.scatter(AISG_cleaned['likes'], AISG_cleaned['shares'], AISG_cleaned['comments'])
    ax.set_xlabel('Likes')
    ax.set_ylabel('Shares')
    ax.set_zlabel('Comments')
    plt.title('3D Relationship of Engagement Metrics')
    plt.show()

import joblib

# Save the best model and preprocessing objects
joblib.dump(best_xgb, 'ghibli_trend_model.pkl')
joblib.dump(scaler, 'scaler.csv')
joblib.dump(le, 'label_encoder.csv')

print("Model and preprocessing artifacts saved successfully!")

if 'prompt' in AISG.columns:
    from textblob import TextBlob
    from wordcloud import WordCloud

    # Sentiment analysis
    AISG['sentiment'] = AISG['prompt'].apply(lambda x: TextBlob(str(x)).sentiment.polarity)

    # Keyword visualization
    text = ' '.join(AISG['prompt'].dropna())
    wordcloud = WordCloud(background_color='white', width=800, height=400).generate(text)

    plt.figure(figsize=(15,8))
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt.title('Most Frequent Words in Image Descriptions')
    plt.show()

if 'creation_date' in AISG.columns:
    # Seasonal trend analysis
    AISG['month'] = AISG['creation_date'].dt.month
    monthly_trend = AISG.groupby('month')['likes'].mean()

    plt.figure(figsize=(12,6))
    sns.lineplot(data=monthly_trend)
    plt.title('Average Likes by Month')
    plt.xlabel('Month')
    plt.ylabel('Average Likes')
    plt.xticks(range(1,13))
    plt.show()

# If you have a 'prompt' column (image description)
if 'prompt' in AISG.columns:
    from textblob import TextBlob
    from wordcloud import WordCloud

    # Sentiment analysis
    AISG['sentiment'] = AISG['prompt'].apply(lambda x: TextBlob(str(x)).sentiment.polarity)

    # Keyword visualization
    text = ' '.join(AISG['prompt'].dropna())
    wordcloud = WordCloud(background_color='white', width=800, height=400).generate(text)

    plt.figure(figsize=(15,8))
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt.title('Most Frequent Words in Image Descriptions')
    plt.show()

if 'creation_date' in AISG.columns:
    # Seasonal trend analysis
    AISG['month'] = AISG['creation_date'].dt.month
    monthly_trend = AISG.groupby('month')['likes'].mean()

    plt.figure(figsize=(12,6))
    sns.lineplot(data=monthly_trend)
    plt.title('Average Likes by Month')
    plt.xlabel('Month')
    plt.ylabel('Average Likes')
    plt.xticks(range(1,13))
    plt.show()

from sklearn.metrics.pairwise import cosine_similarity

# If you have image descriptions
if 'prompt' in AISG.columns:
    from sklearn.feature_extraction.text import TfidfVectorizer

    tfidf = TfidfVectorizer(stop_words='english')
    tfidf_matrix = tfidf.fit_transform(AISG['prompt'])

    # Calculate content similarity
    cosine_sim = cosine_similarity(tfidf_matrix, tfidf_matrix)

    # Recommendation function
    def get_recommendations(title_idx, n=5):
        sim_scores = list(enumerate(cosine_sim[title_idx]))
        sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
        sim_scores = sim_scores[1:n+1]
        return AISG.iloc[[i[0] for i in sim_scores]]

import dash
from dash import dcc, html
import plotly.express as px
from dash.dependencies import Input, Output
import pandas as pd # Import pandas explicitly for pd.to_datetime

app = dash.Dash(__name__)

app.layout = html.Div([
    html.H1("AI Ghibli Content Performance Dashboard"),

    dcc.Dropdown(
        id='platform-dropdown',
        options=[{'label': i, 'value': i} for i in AISG['platform'].unique()],
        value='Instagram'
    ),

    dcc.Graph(id='engagement-graph'),

    dcc.RangeSlider(
        id='date-slider',
        # Ensure creation_date is datetime type before accessing .min() and .max()
        # Convert timestamp back to datetime for slider value
        min=AISG['creation_date'].min().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0,
        max=AISG['creation_date'].max().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0,
        value=[AISG['creation_date'].min().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0,
               AISG['creation_date'].max().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0]
    )
])

# Correct the indentation of the callback and the function
@app.callback(
    Output('engagement-graph', 'figure'),
    [Input('platform-dropdown', 'value'),
     Input('date-slider', 'value')]
)
def update_graph(platform, date_range):
    # Convert timestamps from range slider back to datetime objects
    start_date = pd.to_datetime(date_range[0], unit='s')
    end_date = pd.to_datetime(date_range[1], unit='s')

    # Ensure creation_date column exists and is in datetime format
    if 'creation_date' in AISG.columns and pd.api.types.is_datetime64_any_dtype(AISG['creation_date']):
        filtered_df = AISG[(AISG['platform'] == platform) &
                           (AISG['creation_date'] >= start_date) &
                           (AISG['creation_date'] <= end_date)]

        # Ensure 'sentiment' column exists for coloring, or use a default
        if 'sentiment' in filtered_df.columns:
             fig = px.scatter(filtered_df, x='creation_date', y='likes',
                             color='sentiment', hover_data=['prompt'] if 'prompt' in filtered_df.columns else None)
        else:
             fig = px.scatter(filtered_df, x='creation_date', y='likes',
                              hover_data=['prompt'] if 'prompt' in filtered_df.columns else None)

    else:
        # Handle case where creation_date is missing or not datetime
        fig = px.scatter(title="Date column not available or not in datetime format.")

    return fig

if __name__ == '__main__':
    # Add the dash app server
    app.run_server(debug=True)

!pip install dash plotly

import dash
from dash import dcc, html
import plotly.express as px
from dash.dependencies import Input, Output
import pandas as pd # Import pandas explicitly for pd.to_datetime

app = dash.Dash(__name__)

app.layout = html.Div([
    html.H1("AI Ghibli Content Performance Dashboard"),

    dcc.Dropdown(
        id='platform-dropdown',
        options=[{'label': i, 'value': i} for i in AISG['platform'].unique()],
        value='Instagram'
    ),

    dcc.Graph(id='engagement-graph'),

    dcc.RangeSlider(
        id='date-slider',
        # Ensure creation_date is datetime type before accessing .min() and .max()
        # Convert timestamp back to datetime for slider value
        min=AISG['creation_date'].min().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0,
        max=AISG['creation_date'].max().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0,
        value=[AISG['creation_date'].min().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0,
               AISG['creation_date'].max().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0]
    )
])

# Correct the indentation of the callback and the function
@app.callback(
    Output('engagement-graph', 'figure'),
    [Input('platform-dropdown', 'value'),
     Input('date-slider', 'value')]
)
def update_graph(platform, date_range):
    # Convert timestamps from range slider back to datetime objects
    start_date = pd.to_datetime(date_range[0], unit='s')
    end_date = pd.to_datetime(date_range[1], unit='s')

    # Ensure creation_date column exists and is in datetime format
    if 'creation_date' in AISG.columns and pd.api.types.is_datetime64_any_dtype(AISG['creation_date']):
        filtered_df = AISG[(AISG['platform'] == platform) &
                           (AISG['creation_date'] >= start_date) &
                           (AISG['creation_date'] <= end_date)]

        # Ensure 'sentiment' column exists for coloring, or use a default
        if 'sentiment' in filtered_df.columns:
             fig = px.scatter(filtered_df, x='creation_date', y='likes',
                             color='sentiment', hover_data=['prompt'] if 'prompt' in filtered_df.columns else None)
        else:
             fig = px.scatter(filtered_df, x='creation_date', y='likes',
                              hover_data=['prompt'] if 'prompt' in filtered_df.columns else None)

    else:
        # Handle case where creation_date is missing or not datetime
        fig = px.scatter(title="Date column not available or not in datetime format.")

    return fig

if __name__ == '__main__':
    # Add the dash app server
    app.run_server(debug=True)

!pip install matplotlib-venn

!apt-get -qq install -y libfluidsynth1

# https://pypi.python.org/pypi/pydot
!apt-get -qq install -y graphviz && pip install pydot
import pydot

!pip install cartopy
import cartopy

import dash
from dash import dcc, html
import plotly.express as px
from dash.dependencies import Input, Output
import pandas as pd # Import pandas explicitly for pd.to_datetime

app = dash.Dash(__name__)

app.layout = html.Div([
    html.H1("AI Ghibli Content Performance Dashboard"),

    dcc.Dropdown(
        id='platform-dropdown',
        options=[{'label': i, 'value': i} for i in AISG['platform'].unique()],
        value='Instagram'
    ),

    dcc.Graph(id='engagement-graph'),

    dcc.RangeSlider(
        id='date-slider',
        # Ensure creation_date is datetime type before accessing .min() and .max()
        # Convert timestamp back to datetime for slider value
        min=AISG['creation_date'].min().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0,
        max=AISG['creation_date'].max().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0,
        value=[AISG['creation_date'].min().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0,
               AISG['creation_date'].max().timestamp() if pd.api.types.is_datetime64_any_dtype(AISG['creation_date']) else 0]
    )
])

# Correct the indentation of the callback and the function
@app.callback(
    Output('engagement-graph', 'figure'),
    [Input('platform-dropdown', 'value'),
     Input('date-slider', 'value')]
)
def update_graph(platform, date_range):
    # Convert timestamps from range slider back to datetime objects
    start_date = pd.to_datetime(date_range[0], unit='s')
    end_date = pd.to_datetime(date_range[1], unit='s')

    # Ensure creation_date column exists and is in datetime format
    if 'creation_date' in AISG.columns and pd.api.types.is_datetime64_any_dtype(AISG['creation_date']):
        filtered_df = AISG[(AISG['platform'] == platform) &
                           (AISG['creation_date'] >= start_date) &
                           (AISG['creation_date'] <= end_date)]

        # Ensure 'sentiment' column exists for coloring, or use a default
        if 'sentiment' in filtered_df.columns:
             fig = px.scatter(filtered_df, x='creation_date', y='likes',
                             color='sentiment', hover_data=['prompt'] if 'prompt' in filtered_df.columns else None)
        else:
             fig = px.scatter(filtered_df, x='creation_date', y='likes',
                              hover_data=['prompt'] if 'prompt' in filtered_df.columns else None)

    else:
        # Handle case where creation_date is missing or not datetime
        fig = px.scatter(title="Date column not available or not in datetime format.")

    return fig

if __name__ == '__main__':
    # Add the dash app server
    app.run(debug=True) # Changed run_server to run

!pip install dash plotly
import dash
from dash import dcc, html
import plotly.express as px
from dash.dependencies import Input, Output
import pandas as pd # Import pandas explicitly for pd.to_datetime

import dash
from dash import dcc, html
import plotly.express as px
from dash.dependencies import Input, Output
import pandas as pd # Import pandas explicitly for pd.to_datetime

from flask import Flask, request, jsonify
import joblib

app = Flask(__name__)
model = joblib.load('ghibli_trend_model.pkl')

@app.route('/predict', methods=['POST'])
def predict():
    data = request.get_json()
        prediction = model.predict([data['features']])
            return jsonify({'predicted_likes': float(prediction[0])})

            if __name__ == '__main__':
                app.run(host='0.0.0.0', port=5000)

!pip install Flask plotly
import Flask, request, jsonify
import joblib

from flask import Flask, request, jsonify
import joblib

app = Flask(__name__)
# Assuming 'ghibli_trend_model.pkl' exists from previous steps
# Ensure the model file is saved correctly in the previous steps
# For example, after training the RandomForestRegressor model:
# import joblib
# joblib.dump(rf_model, 'ghibli_trend_model.pkl')
try:
    model = joblib.load('ghibli_trend_model.pkl')
    print("Model loaded successfully!")
except FileNotFoundError:
    print("Error: 'ghibli_trend_model.pkl' not found. Please ensure the model is trained and saved.")
    # You might want to handle this error more gracefully, e.g., exit or use a dummy model
    model = None # Set model to None to prevent errors later


@app.route('/predict', methods=['POST'])
def predict():
    if model is None:
        return jsonify({'error': 'Model not loaded.'}), 500 # Return error if model isn't loaded

    data = request.get_json()
    # Ensure 'features' key exists in the incoming JSON data
    if 'features' not in data:
        return jsonify({'error': "Missing 'features' key in request data."}), 400

    try:
        # Correct the indentation of the lines below
        prediction = model.predict([data['features']])
        return jsonify({'predicted_likes': float(prediction[0])})
    except Exception as e:
        # Handle potential errors during prediction (e.g., incorrect feature format)
        return jsonify({'error': f"Prediction failed: {e}"}), 400


if __name__ == '__main__':
    # Note: Running Flask app directly in a Jupyter notebook cell can be tricky
    # It often blocks the notebook kernel. Consider running this as a separate script.
    # However, if running in a notebook, you might need to use libraries like `werkzeug.serving`
    # or run it in a separate thread/process for the notebook to remain responsive.
    # For demonstration in a notebook, a simple app.run() might work but with blocking issues.
    # If deploying, use a proper WSGI server (like Gunicorn or uWSGI).
    print("Starting Flask server...")
    # Adding threaded=True might help in some notebook environments
    app.run(host='0.0.0.0', port=5000, debug=True)

# Feature Importance Visualization (using RandomForest)
plt.figure(figsize=(12, 8))
feat_importances = pd.Series(rf_model.feature_importances_, index=X.columns)
feat_importances.nlargest(10).plot(kind='barh')
plt.title('Top 10 Features Influencing Engagement')
plt.xlabel('Relative Importance')
plt.show()

# Platform-Specific Analysis
platform_analysis = AISG.groupby('platform').agg({
    'likes': ['mean', 'median', 'std'],
    'shares': ['mean', 'median'],
    'comments': ['mean', 'count']
})
# Corrected indentation for the print statements
print("\nPlatform Performance Metrics:")
print(platform_analysis)

if 'creation_date' in AISG.columns:
    from statsmodels.tsa.seasonal import seasonal_decompose

    # Prepare time series data
    ts_data = AISG.set_index('creation_date')['likes'].resample('D').mean().fillna(method='ffill')

    # Decompose time series
    decomposition = seasonal_decompose(ts_data, model='additive', period=7)

    # Plot decomposition
    fig = decomposition.plot()
    fig.set_size_inches(12, 8)
    plt.suptitle('Time Series Decomposition of Daily Likes')
    plt.tight_layout()
    plt.show()

# Optimal Posting Time Analysis
if all(col in AISG.columns for col in ['creation_date', 'likes']):
    AISG['post_hour'] = AISG['creation_date'].dt.hour
    # Corrected indentation for the following lines
    hour_analysis = AISG.groupby('post_hour')['likes'].mean()

    plt.figure(figsize=(12, 6))
    hour_analysis.plot(kind='bar', color='skyblue')
    plt.title('Average Engagement by Posting Hour')
    plt.xlabel('Hour of Day')
    plt.ylabel('Average Likes')
    plt.xticks(rotation=0)
    plt.grid(axis='y')
    plt.show()

    # Content Type Recommendations
    # Corrected indentation for the following block
    content_recommendations = AISG.groupby('content_type').agg({
        'likes': 'mean',
        'shares': 'mean',
        'comments': 'mean'
        }).sort_values('likes', ascending=False)
    print("\nContent Type Performance:")
    print(content_recommendations)

# Optimal Posting Time Analysis
if all(col in AISG.columns for col in ['creation_date', 'likes']):
    # Corrected indentation for the following lines
    AISG['post_hour'] = AISG['creation_date'].dt.hour
    hour_analysis = AISG.groupby('post_hour')['likes'].mean()

    plt.figure(figsize=(12, 6))
    hour_analysis.plot(kind='bar', color='skyblue')
    plt.title('Average Engagement by Posting Hour')
    plt.xlabel('Hour of Day')
    plt.ylabel('Average Likes')
    plt.xticks(rotation=0)
    plt.grid(axis='y')
    plt.show()
else:
    # Optional: Add a message if 'creation_date' or 'likes' are missing
    print("Skipping Optimal Posting Time Analysis as 'creation_date' or 'likes' column is missing.")


# Content Type Recommendations
# Corrected indentation for the following block
if 'content_type' in AISG.columns: # Add this check
    content_recommendations = AISG.groupby('content_type').agg({
        'likes': 'mean',
        'shares': 'mean',
        'comments': 'mean'
        }).sort_values('likes', ascending=False)
    print("\nContent Type Performance:")
    print(content_recommendations)
else:
    # Optional: Add a message if the column is missing
    print("\n'content_type' column not found. Skipping Content Type Recommendations.")

from datetime import datetime

def generate_performance_report(df):
    report = {
            "generation_date": datetime.now().strftime("%Y-%m-%d"),
                    "total_posts": len(df),
                            "avg_likes": df['likes'].mean(),
                                    "avg_shares": df['shares'].mean(),
                                            "top_performing_platform": df.groupby('platform')['likes'].mean().idxmax(),
                                                    "best_posting_hour": df['post_hour'].value_counts().idxmax() if 'post_hour' in df.columns else None,
                                                            "content_recommendations": content_recommendations.head(3).to_dict()
                                                                }
                                                                    return report

                                                                    performance_report = generate_performance_report(AISG)
                                                                    print("\nAutomated Performance Report:")
                                                                    print(json.dumps(performance_report, indent=2))

from datetime import datetime

def generate_performance_report(df):
    report = {
            "generation_date": datetime.now().strftime("%Y-%m-%d"),
                    "total_posts": len(df),
                            "avg_likes": df['likes'].mean(),
                                    "avg_shares": df['shares'].mean(),
                                            "top_performing_platform": df.groupby('platform')['likes'].mean().idxmax(),
                                                    "best_posting_hour": df['post_hour'].value_counts().idxmax() if 'post_hour' in df.columns else None,
                                                            "content_recommendations": content_recommendations.head(3).to_dict()
                                                                }
                                                                    return report

                                                                    performance_report = generate_performance_report(AISG)
                                                                    print("\nAutomated Performance Report:")
                                                                    print(json.dumps(performance_report, indent=2))

def generate_performance_report(df):
    report = {
            "generation_date": datetime.now().strftime("%Y-%m-%d"),
                    "total_posts": len(df),
                            "avg_likes": df['likes'].mean(),
                                    "avg_shares": df['shares'].mean(),
                                            "top_performing_platform": df.groupby('platform')['likes'].mean().idxmax(),
                                                    "best_posting_hour": df['post_hour'].value_counts().idxmax() if 'post_hour' in df.columns else None,
                                                            "content_recommendations": content_recommendations.head(3).to_dict()
                                                                }
                                                                    return report # This line has extra indentation

from datetime import datetime
import json # Import json module for pretty printing the report

def generate_performance_report(df):
    # Ensure consistent indentation for all lines within the function
    report = {
        "generation_date": datetime.now().strftime("%Y-%m-%d"),
        "total_posts": len(df),
        "avg_likes": df['likes'].mean(),
        "avg_shares": df['shares'].mean(),
        "top_performing_platform": df.groupby('platform')['likes'].mean().idxmax(),
        "best_posting_hour": df['post_hour'].value_counts().idxmax() if 'post_hour' in df.columns else None,
        # Ensure content_recommendations is defined before calling this function
        # Add a check to see if content_recommendations exists and is a pandas object
        "content_recommendations": content_recommendations.head(3).to_dict() if 'content_recommendations' in globals() and isinstance(content_recommendations, pd.DataFrame) else "Content recommendations not available"
    }
    return report # Correct indentation for the return statement

# Ensure content_recommendations is defined globally or passed to the function if needed
# Based on the previous code blocks, content_recommendations is defined in ipython-input-48/49.
# Make sure that block has been executed successfully before running this cell.

performance_report = generate_performance_report(AISG)
print("\nAutomated Performance Report:")
print(json.dumps(performance_report, indent=2))

from datetime import datetime
import json # Import json module for pretty printing the report
import pandas as pd # Import pandas to use isinstance checks

def generate_performance_report(df):
    # Ensure consistent indentation for all lines within the function
    report = {
        "generation_date": datetime.now().strftime("%Y-%m-%d"),
        "total_posts": len(df),
        "avg_likes": df['likes'].mean(),
        "avg_shares": df['shares'].mean(),
        "top_performing_platform": df.groupby('platform')['likes'].mean().idxmax(),
        # Convert the result of idxmax to a standard Python int if it exists
        "best_posting_hour": int(df['post_hour'].value_counts().idxmax()) if 'post_hour' in df.columns and not df['post_hour'].empty else None,
        # Ensure content_recommendations is defined before calling this function
        # Add a check to see if content_recommendations exists and is a pandas object
        # Also, convert potential numpy integers within the dictionary to standard ints
        "content_recommendations": {
            k: {ik: int(iv) if isinstance(iv, (int, float, np.integer, np.floating)) else iv for ik, iv in v.items()}
            for k, v in content_recommendations.head(3).to_dict().items()
        } if 'content_recommendations' in globals() and isinstance(content_recommendations, pd.DataFrame) else "Content recommendations not available"
    }
    return report # Correct indentation for the return statement

# Ensure content_recommendations is defined globally or passed to the function if needed
# Based on the previous code blocks, content_recommendations is defined in ipython-input-48/49.
# Make sure that block has been executed successfully before running this cell.

performance_report = generate_performance_report(AISG)
print("\nAutomated Performance Report:")
print(json.dumps(performance_report, indent=2))

# Save final model
import joblib
joblib.dump(grid_search.best_estimator_, 'ghibli_engagement_model.pkl')

# Save preprocessing objects
joblib.dump(scaler, 'scaler.pkl')
joblib.dump(le, 'label_encoder.pkl')

# Set up basic performance monitoring
def log_performance(y_true, y_pred, model_name):
    metrics = {
            'date': datetime.now().strftime("%Y-%m-%d"),
                    'model': model_name,
                            'mse': mean_squared_error(y_true, y_pred),
                                    'r2': r2_score(y_true, y_pred),
                                            'mape': np.mean(np.abs((y_true - y_pred) / y_true)) * 100
                                                }
                                                    # In production, you would log to database/file
                                                        print(f"Performance logged: {metrics}")

# Set up basic performance monitoring
def log_performance(y_true, y_pred, model_name):
    metrics = {
        'date': datetime.now().strftime("%Y-%m-%d"),
        'model': model_name,
        'mse': mean_squared_error(y_true, y_pred),
        'r2': r2_score(y_true, y_pred),
        'mape': np.mean(np.abs((y_true - y_pred) / y_true)) * 100
    }
    # Corrected indentation for the print statement
    print(f"Performance logged: {metrics}")

# Import required libraries
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import StandardScaler, OneHotEncoder
import xgboost as xgb
import lightgbm as lgb
import numpy as np

# 1. Prepare Data
# Ensure we're using the cleaned data
X = AISG_cleaned.drop(['likes', 'shares', 'comments'], axis=1, errors='ignore')
y = AISG_cleaned['likes']

# Identify numerical and categorical columns
numeric_features = X.select_dtypes(include=['int64', 'float64']).columns
categorical_features = X.select_dtypes(include=['object', 'category']).columns

# 2. Create Preprocessing Pipeline
preprocessor = ColumnTransformer(
    transformers=[
            ('num', StandardScaler(), numeric_features),
                    ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_features)
                        ])

                        # 3. Split Data
                        X_train, X_test, y_train, y_test = train_test_split(
                            X, y, test_size=0.2, random_state=42)

                            # 4. Define Models to Evaluate
                            models = {
                                'RandomForest': RandomForestRegressor(random_state=42),
                                    'XGBoost': xgb.XGBRegressor(random_state=42),
                                        'LightGBM': lgb.LGBMRegressor(random_state=42),
                                            'GradientBoosting': GradientBoostingRegressor(random_state=42)
                                            }

                                            # 5. Training and Evaluation Function
                                            def train_and_evaluate(models, X_train, X_test, y_train, y_test):
                                                results = {}
                                                    for name, model in models.items():
                                                            # Create pipeline
                                                                    pipeline = Pipeline(steps=[
                                                                                ('preprocessor', preprocessor),
                                                                                            ('regressor', model)
                                                                                                    ])

                                                                                                                    # Train model
                                                                                                                            pipeline.fit(X_train, y_train)

                                                                                                                                            # Make predictions
                                                                                                                                                    y_pred = pipeline.predict(X_test)

                                                                                                                                                                    # Calculate metrics
                                                                                                                                                                            mse = mean_squared_error(y_test, y_pred)
                                                                                                                                                                                    rmse = np.sqrt(mse)
                                                                                                                                                                                            mae = mean_absolute_error(y_test, y_pred)
                                                                                                                                                                                                    r2 = r2_score(y_test, y_pred)

                                                                                                                                                                                                                    # Store results
                                                                                                                                                                                                                            results[name] = {
                                                                                                                                                                                                                                        'model': pipeline,
                                                                                                                                                                                                                                                    'mse': mse,
                                                                                                                                                                                                                                                                'rmse': rmse,
                                                                                                                                                                                                                                                                            'mae': mae,
                                                                                                                                                                                                                                                                                        'r2': r2
                                                                                                                                                                                                                                                                                                }

                                                                                                                                                                                                                                                                                                                print(f"{name} Results:")
                                                                                                                                                                                                                                                                                                                        print(f"  MSE: {mse:.2f}")
                                                                                                                                                                                                                                                                                                                                print(f"  RMSE: {rmse:.2f}")
                                                                                                                                                                                                                                                                                                                                        print(f"  MAE: {mae:.2f}")
                                                                                                                                                                                                                                                                                                                                                print(f"  R²: {r2:.2f}")
                                                                                                                                                                                                                                                                                                                                                        print("----------------------")

                                                                                                                                                                                                                                                                                                                                                                return results

                                                                                                                                                                                                                                                                                                                                                                # 6. Train and Evaluate All Models
                                                                                                                                                                                                                                                                                                                                                                model_results = train_and_evaluate(models, X_train, X_test, y_train, y_test)

                                                                                                                                                                                                                                                                                                                                                                # 7. Hyperparameter Tuning (on best performing model)
                                                                                                                                                                                                                                                                                                                                                                best_model_name = max(model_results, key=lambda x: model_results[x]['r2'])
                                                                                                                                                                                                                                                                                                                                                                print(f"\nPerforming hyperparameter tuning on {best_model_name}...")

                                                                                                                                                                                                                                                                                                                                                                # Define parameter grid based on model type
                                                                                                                                                                                                                                                                                                                                                                if best_model_name == 'RandomForest':
                                                                                                                                                                                                                                                                                                                                                                    param_grid = {
                                                                                                                                                                                                                                                                                                                                                                            'regressor__n_estimators': [100, 200],
                                                                                                                                                                                                                                                                                                                                                                                    'regressor__max_depth': [None, 10, 20],
                                                                                                                                                                                                                                                                                                                                                                                            'regressor__min_samples_split': [2, 5]
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                elif best_model_name == 'XGBoost':
                                                                                                                                                                                                                                                                                                                                                                                                    param_grid = {
                                                                                                                                                                                                                                                                                                                                                                                                            'regressor__n_estimators': [100, 200],
                                                                                                                                                                                                                                                                                                                                                                                                                    'regressor__learning_rate': [0.01, 0.1],
                                                                                                                                                                                                                                                                                                                                                                                                                            'regressor__max_depth': [3, 6]
                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                else:  # Default for other models
                                                                                                                                                                                                                                                                                                                                                                                                                                    param_grid = {
                                                                                                                                                                                                                                                                                                                                                                                                                                            'regressor__n_estimators': [100, 200],
                                                                                                                                                                                                                                                                                                                                                                                                                                                    'regressor__learning_rate': [0.01, 0.1]
                                                                                                                                                                                                                                                                                                                                                                                                                                                        }

                                                                                                                                                                                                                                                                                                                                                                                                                                                        # Setup GridSearchCV
                                                                                                                                                                                                                                                                                                                                                                                                                                                        best_pipeline = model_results[best_model_name]['model']
                                                                                                                                                                                                                                                                                                                                                                                                                                                        grid_search = GridSearchCV(
                                                                                                                                                                                                                                                                                                                                                                                                                                                            best_pipeline,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                param_grid,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    cv=3,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        scoring='r2',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            n_jobs=-1,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                verbose=1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                )

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                # Run grid search
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                grid_search.fit(X_train, y_train)

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                # Get best model
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                tuned_model = grid_search.best_estimator_
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                y_pred_tuned = tuned_model.predict(X_test)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                r2_tuned = r2_score(y_test, y_pred_tuned)

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                print(f"\nBest parameters: {grid_search.best_params_}")
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                print(f"Tuned model R²: {r2_tuned:.3f} (Original: {model_results[best_model_name]['r2']:.3f})")

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                # 8. Feature Importance Analysis
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if hasattr(tuned_model.named_steps['regressor'], 'feature_importances_'):
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    # Get feature names after preprocessing
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        feature_names = numeric_features.tolist()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if len(categorical_features) > 0:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ohe_features = tuned_model.named_steps['preprocessor'].named_transformers_['cat']\
get_feature_names_out(categorical_features)
feature_names.extend(ohe_features)

et importances
importances = tuned_model.named_steps['regressor'].feature_importances_

reate importance DataFrame
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           importance_df = pd.DataFrame({
eature': feature_names,
mportance': importances
}).sort_values('Importance', ascending=False)

lot top 15 features
plt.figure(figsize=(12, 8))
sns.barplot(x='Importance', y='Feature',
data=importance_df.head(15))
plt.title('Top 15 Important Features')
plt.tight_layout()
plt.show()

ave the Best Model
import joblib
joblib.dump(tuned_model, 'best_ghibli_engagement_model.pkl')
print("\nModel saved as 'best_ghibli_engagement_model.pkl'")

# Import required libraries
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import StandardScaler, OneHotEncoder
import xgboost as xgb
import lightgbm as lgb
import numpy as np

# 1. Prepare Data
# Ensure we're using the cleaned data
X = AISG_cleaned.drop(['likes', 'shares', 'comments'], axis=1, errors='ignore')
y = AISG_cleaned['likes']

# Identify numerical and categorical columns
numeric_features = X.select_dtypes(include=['int64', 'float64']).columns
categorical_features = X.select_dtypes(include=['object', 'category']).columns

# 2. Create Preprocessing Pipeline
preprocessor = ColumnTransformer(
    transformers=[
        ('num', StandardScaler(), numeric_features),
        ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_features)
    ])

# 3. Split Data
# Corrected indentation: This line should be at the same level as 'X = ...' and 'y = ...'
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42)

# 4. Define Models to Evaluate
# Corrected indentation: This dictionary definition should be at the same level
models = {
    'RandomForest': RandomForestRegressor(random_state=42),
    'XGBoost': xgb.XGBRegressor(random_state=42),
    'LightGBM': lgb.LGBMRegressor(random_state=42),
    'GradientBoosting': GradientBoostingRegressor(random_state=42)
}

# 5. Training and Evaluation Function
# This function definition's indentation is correct
def train_and_evaluate(models, X_train, X_test, y_train, y_test):
    results = {}
    for name, model in models.items():
        # Create pipeline
        pipeline = Pipeline(steps=[
            ('preprocessor', preprocessor),
            ('regressor', model)
        ])

        # Train model
        pipeline.fit(X_train, y_train)

        # Make predictions
        y_pred = pipeline.predict(X_test)

        # Calculate metrics
        mse = mean_squared_error(y_test, y_pred)
        rmse = np.sqrt(mse)
        mae = mean_absolute_error(y_test, y_pred)
        r2 = r2_score(y_test, y_pred)

        # Store results
        results[name] = {
            'model': pipeline,
            'mse': mse,
            'rmse': rmse,
            'mae': mae,
            'r2': r2
        }

        print(f"{name} Results:")
        print(f"  MSE: {mse:.2f}")
        print(f"  RMSE: {rmse:.2f}")
        print(f"  MAE: {mae:.2f}")
        print(f"  R²: {r2:.2f}")
        print("----------------------")

    return results

# 6. Train and Evaluate All Models
# Corrected indentation: This function call should be at the same level
model_results = train_and_evaluate(models, X_train, X_test, y_train, y_test)

# 7. Hyperparameter Tuning (on best performing model)
# Corrected indentation: This block should be at the same level
best_model_name = max(model_results, key=lambda x: model_results[x]['r2'])
print(f"\nPerforming hyperparameter tuning on {best_model_name}...")

# Define parameter grid based on model type
if best_model_name == 'RandomForest':
    param_grid = {
        'regressor__n_estimators': [100, 200],
        'regressor__max_depth': [None, 10, 20],
        'regressor__min_samples_split': [2, 5]
    }
elif best_model_name == 'XGBoost':
    param_grid = {
        'regressor__n_estimators': [100, 200],
        'regressor__learning_rate': [0.01, 0.1],
        'regressor__max_depth': [3, 6]
    }
else:  # Default for other models
    param_grid = {
        'regressor__n_estimators': [100, 200],
        'regressor__learning_rate': [0.01, 0.1]
    }

# Setup GridSearchCV
best_pipeline = model_results[best_model_name]['model']
grid_search = GridSearchCV(
    best_pipeline,
    param_grid,
    cv=3,
    scoring='r2',
    n_jobs=-1,
    verbose=1
)

# Run grid search
grid_search.fit(X_train, y_train)

# Get best model
tuned_model = grid_search.best_estimator_
y_pred_tuned = tuned_model.predict(X_test)
r2_tuned = r2_score(y_test, y_pred_tuned)

print(f"\nBest parameters: {grid_search.best_params_}")
print(f"Tuned model R²: {r2_tuned:.3f} (Original: {model_results[best_model_name]['r2']:.3f})")

# 8. Feature Importance Analysis
# Corrected indentation: This block should be at the same level
if hasattr(tuned_model.named_steps['regressor'], 'feature_importances_'):
    # Get feature names after preprocessing
    feature_names = numeric_features.tolist()
    if len(categorical_features) > 0:
        # Check if the transformer is fitted before calling get_feature_names_out
        cat_transformer = tuned_model.named_steps['preprocessor'].named_transformers_['cat']
        if hasattr(cat_transformer, 'get_feature_names_out'):
             ohe_features = cat_transformer.get_feature_names_out(categorical_features)
             feature_names.extend(ohe_features)
        else:
             print("Warning: OneHotEncoder not fitted, cannot get feature names.")

    # Get importances
    importances = tuned_model.named_steps['regressor'].feature_importances_

    # Create importance DataFrame
    importance_df = pd.DataFrame({
        'Feature': feature_names,
        'Importance': importances
    }).sort_values('Importance', ascending=False)

    # Plot top 15 features
    plt.figure(figsize=(12, 8))
    sns.barplot(x='Importance', y='Feature', data=importance_df.head(15))
    plt.title('Top 15 Important Features')
    plt.tight_layout()
    plt.show()

# 9. Save the Best Model
# Corrected indentation: This block should be at the same level
import joblib
joblib.dump(tuned_model, 'best_ghibli_engagement_model.pkl')
print("\nModel saved as 'best_ghibli_engagement_model.pkl'")

# Example FastAPI deployment
from fastapi import FastAPI
from pydantic import BaseModel
import joblib

app = FastAPI()
model = joblib.load('best_ghibli_engagement_model.pkl')

class PredictionRequest(BaseModel):
    features: list

    @app.post("/predict")
    async def predict(request: PredictionRequest):
        prediction = model.predict([request.features])
            return {"predicted_likes": float(prediction[0])}

# Example FastAPI deployment
from fastapi import FastAPI
from pydantic import BaseModel
import joblib

app = FastAPI()
model = joblib.load('best_ghibli_engagement_model.pkl')

class PredictionRequest(BaseModel):
    features: list

@app.post("/predict")
async def predict(request: PredictionRequest):
    prediction = model.predict([request.features])
    # Corrected indentation for the return statement
    return {"predicted_likes": float(prediction[0])}

# Install required libraries for FastAPI
!pip install fastapi uvicorn

# Now you can run the FastAPI code cell.
# Example FastAPI deployment
from fastapi import FastAPI
from pydantic import BaseModel
import joblib

app = FastAPI()
model = joblib.load('best_ghibli_engagement_model.pkl')

class PredictionRequest(BaseModel):
    features: list

@app.post("/predict")
async def predict(request: PredictionRequest):
    prediction = model.predict([request.features])
    # Corrected indentation for the return statement
    return {"predicted_likes": float(prediction[0])}

# Note: To actually run this FastAPI application, you would typically save this
# code to a Python file (e.g., main.py) and run it from the terminal using
# `uvicorn main:app --reload`. Running it directly in a Jupyter notebook
# might require additional setup (like using nest_asyncio and a server).

# Set up drift detection
from alibi_detect import KSDrift

# Initialize drift detector
drift_detector = KSDrift(X_train.values, p_val=0.05)

# Check for drift on new data
def check_drift(new_data):
    drift_preds = drift_detector.predict(new_data)
        return drift_preds['data']['is_drift']

# Set up drift detection
# Install required libraries for alibi-detect
!pip install alibi-detect
from alibi_detect import KSDrift

# Initialize drift detector
# Note: KSDrift expects a numpy array, ensure X_train is converted if it's a pandas DataFrame
# X_train was a DataFrame in the global variables, so converting it is necessary.
drift_detector = KSDrift(X_train.values, p_val=0.05)


# Check for drift on new data
def check_drift(new_data):
    # Note: KSDrift predict also expects a numpy array
    drift_preds = drift_detector.predict(new_data.values if isinstance(new_data, pd.DataFrame) else new_data)
    # Corrected indentation here
    return drift_preds['data']['is_drift']

# Restart the current runtime to clear potential conflicts
# This command will restart the kernel, you will need to rerun the cells
get_ipython().kernel.do_shutdown(restart=True)

# After the restart, run the following cell to install the required libraries.
# It's important to install tensorflow first with a compatible version,
# then alibi-detect. This helps ensure compatible dependencies are pulled.
!pip install tensorflow==2.15.0
!pip install alibi-detect
!pip install fastapi uvicorn

# Now you can rerun the code cell to import alibi_detect and initialize the drift detector.
# Set up drift detection
from alibi_detect import KSDrift
import pandas as pd # Ensure pandas is imported if X_train is a DataFrame
import numpy as np # Ensure numpy is imported

# Initialize drift detector
# Note: KSDrift expects a numpy array, ensure X_train is converted if it's a pandas DataFrame
# X_train was a DataFrame in the global variables, so converting it is necessary.
# Make sure X_train is defined before this cell
# Assuming X_train is a pandas DataFrame from previous steps
if 'X_train' in globals() and isinstance(X_train, pd.DataFrame):
    drift_detector = KSDrift(X_train.values, p_val=0.05)
elif 'X_train' in globals() and isinstance(X_train, np.ndarray):
    drift_detector = KSDrift(X_train, p_val=0.05)
else:
    print("X_train is not defined or is not a pandas DataFrame or numpy array.")
    # You might need to regenerate X_train here or handle this case appropriately

# Check for drift on new data
def check_drift(new_data):
    # Note: KSDrift predict also expects a numpy array
    if 'drift_detector' in globals() and drift_detector is not None:
        drift_preds = drift_detector.predict(new_data.values if isinstance(new_data, pd.DataFrame) else new_data)
        return drift_preds['data']['is_drift']
    else:
        print("Drift detector not initialized.")
        return None # Or raise an error

# Set up automated retraining
from sklearn.base import clone

def retrain_model(new_data, target):
    # Clone existing model
        new_model = clone(tuned_model)

                # Partial fit (if supported) or full retrain
                    if hasattr(new_model.named_steps['regressor'], 'partial_fit'):
                            new_model.named_steps['regressor'].partial_fit(
                                        new_data, target)
                                            else:
                                                    new_model.fit(new_data, target)

                                                            return new_model

# Set up automated retraining
from sklearn.base import clone

def retrain_model(new_data, target):
    # Clone existing model
    new_model = clone(tuned_model)

    # Partial fit (if supported) or full retrain
    if hasattr(new_model.named_steps['regressor'], 'partial_fit'):
        new_model.named_steps['regressor'].partial_fit(
            new_data, target)
    else:
        new_model.fit(new_data, target)

    return new_model

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
from tensorflow.keras.optimizers import Adam
from sklearn.preprocessing import StandardScaler

# Preprocessing
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Build ANN
model_ann = Sequential([
    Dense(128, activation='relu', input_shape=(X_train_scaled.shape[1],)),
        Dropout(0.3),
            Dense(64, activation='relu'),
                Dropout(0.2),
                    Dense(32, activation='relu'),
                        Dense(1)
                        ])

                        # Compile
                        model_ann.compile(optimizer=Adam(learning_rate=0.001),
                                        loss='mse',
                                                        metrics=['mae'])

                                                        # Train
                                                        history = model_ann.fit(X_train_scaled, y_train,
                                                                              validation_data=(X_test_scaled, y_test),
                                                                                                    epochs=50,
                                                                                                                          batch_size=32,
                                                                                                                                                verbose=1)

                                                                                                                                                # Evaluate
                                                                                                                                                ann_pred = model_ann.predict(X_test_scaled)
                                                                                                                                                print(f"ANN MSE: {mean_squared_error(y_test, ann_pred):.2f}")
                                                                                                                                                print(f"ANN R²: {r2_score(y_test, ann_pred):.2f}")

                                                                                                                                                # Plot training history
                                                                                                                                                plt.plot(history.history['loss'], label='Train Loss')
                                                                                                                                                plt.plot(history.history['val_loss'], label='Validation Loss')
                                                                                                                                                plt.title('ANN Training History')
                                                                                                                                                plt.legend()
                                                                                                                                                plt.show()

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
from tensorflow.keras.optimizers import Adam
from sklearn.preprocessing import StandardScaler

# Preprocessing
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Build ANN
model_ann = Sequential([
    Dense(128, activation='relu', input_shape=(X_train_scaled.shape[1],)),
    Dropout(0.3),
    Dense(64, activation='relu'),
    Dropout(0.2),
    Dense(32, activation='relu'),
    Dense(1)
])

# Compile - Corrected Indentation
model_ann.compile(optimizer=Adam(learning_rate=0.001),
                  loss='mse',
                  metrics=['mae'])

# Train - Corrected Indentation
history = model_ann.fit(X_train_scaled, y_train,
                        validation_data=(X_test_scaled, y_test),
                        epochs=50,
                        batch_size=32,
                        verbose=1)

# Evaluate - Corrected Indentation
ann_pred = model_ann.predict(X_test_scaled)
print(f"ANN MSE: {mean_squared_error(y_test, ann_pred):.2f}")
print(f"ANN R²: {r2_score(y_test, ann_pred):.2f}")

# Plot training history - Corrected Indentation
plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.title('ANN Training History')
plt.legend()
plt.show()

if not X.empty:
        # تقييس البيانات
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)

        # تقسيم البيانات إلى تدريب واختبار
        X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42)

# بناء النموذج (مع التحقق من وجود أعمدة كافية)
# The check len(AISG_cleaned.columns) > 1 is still valid
if len(AISG_cleaned.columns) > 1:  # التأكد من وجود ميزات كافية
    # تقسيم البيانات
    # Ensure 'likes', 'shares', 'comments' are treated as numerical targets/features
    target_cols = ['likes', 'shares', 'comments']
    features_to_drop = [col for col in target_cols if col in AISG_cleaned.columns]

    X = AISG_cleaned.drop(features_to_drop, axis=1, errors='ignore')  # الميزات
    # Ensure 'likes' column exists and is numeric in AISG_cleaned
    if 'likes' in AISG_cleaned.columns and pd.api.types.is_numeric_dtype(AISG_cleaned['likes']):
        y = AISG_cleaned['likes']  # الهدف (التنبؤ بعدد الإعجابات)
    else:
        print("عمود 'likes' غير موجود أو ليس رقمياً في AISG_cleaned. لا يمكن بناء النموذج.")
        X = pd.DataFrame() # Empty X to skip model training
        y = pd.Series(dtype='float64') # Empty y to skip model training


    if not X.empty:
        # تقييس البيانات
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)

        # تقسيم البيانات إلى تدريب واختبار
        X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42)

        # تدريب نموذج الانحدار الخطي
        print("\nتدريب نموذج الانحدار الخطي...")
        lr_model = LinearRegression()
        lr_model.fit(X_train, y_train)
        y_pred_lr = lr_model.predict(X_test)

        # تقييم النموذج
        mse_lr = mean_squared_error(y_test, y_pred_lr)
        r2_lr = r2_score(y_test, y_pred_lr)
        print(f"الانحدار الخطي - MSE: {mse_lr:.2f}, R2: {r2_lr:.2f}")

        # تدريب نموذج Random Forest
        print("\nتدريب نموذج Random Forest...")
        rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
        rf_model.fit(X_train, y_train)
        y_pred_rf = rf_model.predict(X_test)

        # تقييم النموذج
        mse_rf = mean_squared_error(y_test, y_pred_rf)
        r2_rf = r2_score(y_test, y_pred_rf)
        print(f"Random Forest - MSE: {mse_rf:.2f}, R2: {r2_rf:.2f}")

        # مقارنة النماذج
        plt.figure(figsize=(10, 5))
        plt.scatter(y_test, y_pred_lr, alpha=0.5, label='الانحدار الخطي')
        plt.scatter(y_test, y_pred_rf, alpha=0.5, label='Random Forest')
        plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--')
        plt.xlabel('القيم الحقيقية')
        plt.ylabel('التنبؤات')
        plt.title('مقارنة أداء النماذج')
        plt.legend()
        plt.show()

        # تحليل أهمية الميزات في نموذج Random Forest
        feature_importances = pd.DataFrame({
                'Feature': X.columns,
                'Importance': rf_model.feature_importances_
            }).sort_values('Importance', ascending=False)

        plt.figure(figsize=(10, 6))
        sns.barplot(x='Importance', y='Feature', data=feature_importances)
        plt.title('أهمية الميزات في نموذج Random Forest')
        plt.show()
    else:
        print("لا توجد ميزات صالحة لبناء النموذج بعد معالجة البيانات.")

else:
    print("لا توجد ميزات كافية لبناء النموذج. تحقق من بياناتك.")

# Import Required Libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn import metrics, svm
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.impute import SimpleImputer
import datetime
import gdown  # Library for downloading files from Google Drive

# Load Data from Google Drive
file_id = '1hkebti9cgRECbze77SKfm8b_eGBJkTnL'
url = f'https://drive.google.com/uc?id={file_id}'
output = 'ai_ghibli_trend_dataset.csv'

try:
    gdown.download(url, output, quiet=False)
    AISG = pd.read_csv(output)
    print("Data loaded successfully!")
except Exception as e:
    print(f"Error occurred while loading data: {e}")
    # Use sample data as fallback
    print("Using sample data instead...")
    data = {
        'image_id': range(1, 101),
        'likes': np.random.randint(100, 10000, 100),
        'shares': np.random.randint(10, 1000, 100),
        'platform': np.random.choice(['Instagram', 'TikTok', 'Twitter'], 100)
    }
    AISG = pd.DataFrame(data)

# Data Exploration
print("\nData sample:")
print(AISG.head(10))

print("\nData information:")
AISG.info()

print("\nDescriptive statistics:")
print(AISG.describe())

# Data Cleaning and Processing
# (Added column existence checks before processing to avoid errors)

# List of expected columns
expected_columns = ['image_id', 'user_id', 'prompt', 'likes', 'shares', 'comments',
                  'platform', 'generation_time', 'gpu_usage', 'file_size_kb',
                  'resolution', 'style_accuracy_score', 'is_hand_edited',
                  'ethical_concerns_flag', 'creation_date', 'top_comment']

# Check for essential columns
if 'platform' not in AISG.columns:
    AISG['platform'] = 'Unknown'  # Default value if column doesn't exist

if 'likes' not in AISG.columns:
    AISG['likes'] = np.random.randint(100, 10000, len(AISG))  # Random values if column doesn't exist

# 1. Text Column Processing
# Remove extra spaces from platform column
AISG["platform"] = AISG["platform"].str.strip().str.replace(" ", "_")

# 2. Date Column Processing (if exists)
if 'creation_date' in AISG.columns:
    try:
        AISG['creation_date'] = pd.to_datetime(AISG['creation_date'])
        AISG['year'] = AISG['creation_date'].dt.year
        AISG['month'] = AISG['creation_date'].dt.month
        AISG['day'] = AISG['creation_date'].dt.day
        AISG['weekday'] = AISG['creation_date'].dt.weekday
    except:
        print("Failed to convert date column, it will be ignored")
else:
    print("Date column not found in data")

# 3. Categorical Column Processing
if 'is_hand_edited' in AISG.columns:
    # Convert to numeric, coercing errors to NaN
    AISG['is_hand_edited'] = AISG['is_hand_edited'].map({'Yes': 1, 'No': 0})
else:
    AISG['is_hand_edited'] = 0  # Default: Not hand-edited

if 'ethical_concerns_flag' in AISG.columns:
    # Convert to numeric, coercing errors to NaN
    AISG['ethical_concerns_flag'] = AISG['ethical_concerns_flag'].map({'Yes': 1, 'No': 0})
else:
    AISG['ethical_concerns_flag'] = 0  # Default: No ethical concerns

# Encode image resolution (if column exists)
if 'resolution' in AISG.columns:
    resolution_map = {'512x512': 0, '1024x1024': 1, '2048x2048': 2}
    # Convert to numeric, coercing errors to NaN
    AISG['resolution'] = AISG['resolution'].map(resolution_map)
else:
    AISG['resolution'] = 0  # Default: 512x512 resolution

# Platform encoding
# Note: 'platform' will remain as a string column after this step.
# It should be handled separately or dropped before numerical imputation.
le = LabelEncoder()
AISG['platform_encoded'] = le.fit_transform(AISG['platform'])

# 4. Remove unnecessary columns (with existence check first)
columns_to_drop = []
for col in ['image_id', 'user_id', 'prompt', 'top_comment', 'creation_date', 'platform']: # Added 'platform' to drop list
    if col in AISG.columns:
        columns_to_drop.append(col)

AISG_cleaned = AISG.drop(columns_to_drop, axis=1)

# 5. Handle Missing Values
# Select only numeric columns for median imputation
numeric_cols = AISG_cleaned.select_dtypes(include=np.number).columns
AISG_cleaned_numeric = AISG_cleaned[numeric_cols]

imputer = SimpleImputer(strategy='median')

# Apply imputer only to the numeric subset
AISG_cleaned[numeric_cols] = imputer.fit_transform(AISG_cleaned_numeric)

# Re-add the fillna(0) after imputation for the specific columns, if needed
# Note: The imputer handles NaN values, so fillna(0) might not be needed
# for the columns where imputation was applied.
# If you still want to fill NaN after imputation for specific reasons,
# you can do it here, but be mindful that imputer already filled NaNs.
# AISG_cleaned['is_hand_edited'] = AISG_cleaned['is_hand_edited'].fillna(0)
# AISG_cleaned['ethical_concerns_flag'] = AISG_cleaned['ethical_concerns_flag'].fillna(0)
# AISG_cleaned['resolution'] = AISG_cleaned['resolution'].fillna(0)


# Data Analysis
print("\nPlatform distribution:")
# Use the original AISG DataFrame for platform distribution as 'platform' was dropped from AISG_cleaned
print(AISG['platform'].value_counts())

# Data Visualization
plt.figure(figsize=(12, 6))
# Use the original AISG DataFrame for the boxplot as 'platform' was dropped from AISG_cleaned
sns.boxplot(x='platform', y='likes', data=AISG)
plt.title('توزيع الإعجابات حسب المنصة')
plt.xticks(rotation=45)
plt.show()

# Model Building (with sufficient column check)
# The check len(AISG_cleaned.columns) > 1 is still valid
if len(AISG_cleaned.columns) > 1:  # التأكد من وجود ميزات كافية
    # Split data
    # Ensure 'likes', 'shares', 'comments' are treated as numerical targets/features
    target_cols = ['likes', 'shares', 'comments']
    features_to_drop = [col for col in target_cols if col in AISG_cleaned.columns]

    X = AISG_cleaned.drop(features_to_drop, axis=1, errors='ignore')  # الميزات
    # Ensure 'likes' column exists and is numeric in AISG_cleaned
    if 'likes' in AISG_cleaned.columns and pd.api.types.is_numeric_dtype(AISG_cleaned['likes']):
        y = AISG_cleaned['likes']  # الهدف (التنبؤ بعدد الإعجابات)
    else:
        print("عمود 'likes' غير موجود أو ليس رقمياً في AISG_cleaned. لا يمكن بناء النموذج.")
        X = pd.DataFrame() # Empty X to skip model training
        y = pd.Series(dtype='float64') # Empty y to skip model training


    if not X.empty:
        # Scale data
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)

        # Split into train and test sets
        X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42)

        # Train Linear Regression model
        print("\nTraining Linear Regression model...")
        lr_model = LinearRegression()
        lr_model.fit(X_train, y_train)
        y_pred_lr = lr_model.predict(X_test)

        # Evaluate model
        mse_lr = mean_squared_error(y_test, y_pred_lr)
        r2_lr = r2_score(y_test, y_pred_lr)
        print(f"Linear Regression - MSE: {mse_lr:.2f}, R2: {r2_lr:.2f}")

        # Train Random Forest model
        print("\nTraining Random Forest model...")
        rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
        rf_model.fit(X_train, y_train)
        y_pred_rf = rf_model.predict(X_test)

        # Evaluate model
        mse_rf = mean_squared_error(y_test, y_pred_rf)
        r2_rf = r2_score(y_test, y_pred_rf)
        print(f"Random Forest - MSE: {mse_rf:.2f}, R2: {r2_rf:.2f}")

        # Compare models
        plt.figure(figsize=(10, 5))
        plt.scatter(y_test, y_pred_lr, alpha=0.5, label='Linear Regression')
        plt.scatter(y_test, y_pred_rf, alpha=0.5, label='Random Forest')
        plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--')
        plt.xlabel('Actual Values')
        plt.ylabel('Predictions')
        plt.title('Model Comparison')
        plt.legend()
        plt.show()

        # Analyze feature importances in Random Forest model
        feature_importances = pd.DataFrame({
                'Feature': X.columns,
                'Importance': rf_model.feature_importances_
            }).sort_values('Importance', ascending=False)

        plt.figure(figsize=(10, 6))
        sns.barplot(x='Importance', y='Feature', data=feature_importances)
        plt.title('Feature Importance in Random Forest Model')
        plt.show()
    else:
        print("No valid features to build the model after data processing.")

else:
    print("Not enough features to build the model. Check your data.")

from sklearn.svm import SVR
from sklearn.pipeline import make_pipeline

# Create pipeline with scaling
model_svm = make_pipeline(
    StandardScaler(),
        SVR(kernel='rbf', C=1.0, epsilon=0.1)
        )

        # Train
        model_svm.fit(X_train, y_train)

        # Evaluate
        svm_pred = model_svm.predict(X_test)
        print(f"\nSVM MSE: {mean_squared_error(y_test, svm_pred):.2f}")
        print(f"SVM R²: {r2_score(y_test, svm_pred):.2f}")

        # Plot predictions vs actual
        plt.scatter(y_test, svm_pred, alpha=0.5)
        plt.plot([y.min(), y.max()], [y.min(), y.max()], 'k--')
        plt.title('SVM Predictions vs Actual')
        plt.xlabel('Actual Likes')
        plt.ylabel('Predicted Likes')
        plt.show()

from sklearn.svm import SVR
from sklearn.pipeline import make_pipeline

# Create pipeline with scaling
model_svm = make_pipeline(
    StandardScaler(),
    SVR(kernel='rbf', C=1.0, epsilon=0.1)
)

# Train
model_svm.fit(X_train, y_train)

# Evaluate
svm_pred = model_svm.predict(X_test)
print(f"\nSVM MSE: {mean_squared_error(y_test, svm_pred):.2f}")
print(f"SVM R²: {r2_score(y_test, svm_pred):.2f}")

# Plot predictions vs actual
plt.scatter(y_test, svm_pred, alpha=0.5)
# Use the y variable from the global scope as the minimum and maximum for the plot axes.
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'k--')
plt.title('SVM Predictions vs Actual')
plt.xlabel('Actual Likes')
plt.ylabel('Predicted Likes')
plt.show()

from sklearn.naive_bayes import GaussianNB

# Model
model_nb = GaussianNB()

# Train
model_nb.fit(X_train, y_train)

# Evaluate
nb_pred = model_nb.predict(X_test)
print(f"\nNaive Bayes MSE: {mean_squared_error(y_test, nb_pred):.2f}")
print(f"Naive Bayes R²: {r2_score(y_test, nb_pred):.2f}")

# Plot distribution of predictions
plt.hist(nb_pred, bins=30, alpha=0.7, label='Predicted')
plt.hist(y_test, bins=30, alpha=0.7, label='Actual')
plt.title('Naive Bayes Prediction Distribution')
plt.legend()
plt.show()

from sklearn.neighbors import KNeighborsRegressor
from sklearn.model_selection import GridSearchCV

# Parameter tuning
params = {'n_neighbors': range(3, 21, 2)}
model_knn = GridSearchCV(KNeighborsRegressor(),
                        params,
                                                cv=5,
                                                                        scoring='r2')

                                                                        # Train
                                                                        model_knn.fit(X_train, y_train)

                                                                        # Best model
                                                                        print(f"\nBest K: {model_knn.best_params_['n_neighbors']}")

                                                                        # Evaluate
                                                                        knn_pred = model_knn.predict(X_test)
                                                                        print(f"KNN MSE: {mean_squared_error(y_test, knn_pred):.2f}")
                                                                        print(f"KNN R²: {r2_score(y_test, knn_pred):.2f}")

                                                                        # Plot K values vs performance
                                                                        results = pd.DataFrame(model_knn.cv_results_)
                                                                        plt.plot(params['n_neighbors'], results['mean_test_score'])
                                                                        plt.title('KNN Performance vs K Value')
                                                                        plt.xlabel('K Value')
                                                                        plt.ylabel('R² Score')
                                                                        plt.show()

from sklearn.neighbors import KNeighborsRegressor
from sklearn.model_selection import GridSearchCV

# Parameter tuning
params = {'n_neighbors': range(3, 21, 2)}
model_knn = GridSearchCV(KNeighborsRegressor(),
                        params,
                        cv=5,
                        scoring='r2')

# Train
model_knn.fit(X_train, y_train)

# Best model
print(f"\nBest K: {model_knn.best_params_['n_neighbors']}")

# Evaluate
knn_pred = model_knn.predict(X_test)
print(f"KNN MSE: {mean_squared_error(y_test, knn_pred):.2f}")
print(f"KNN R²: {r2_score(y_test, knn_pred):.2f}")

# Plot K values vs performance
results = pd.DataFrame(model_knn.cv_results_)
plt.plot(params['n_neighbors'], results['mean_test_score'])
plt.title('KNN Performance vs K Value')
plt.xlabel('K Value')
plt.ylabel('R² Score')
plt.show()

from sklearn.ensemble import RandomForestRegressor

# Model with feature importance
model_rf = RandomForestRegressor(n_estimators=200,
                               max_depth=10,
                                                              random_state=42)

                                                              # Train
                                                              model_rf.fit(X_train, y_train)

                                                              # Evaluate
                                                              rf_pred = model_rf.predict(X_test)
                                                              print(f"\nRandom Forest MSE: {mean_squared_error(y_test, rf_pred):.2f}")
                                                              print(f"Random Forest R²: {r2_score(y_test, rf_pred):.2f}")

                                                              # Feature importance
                                                              importances = model_rf.feature_importances_
                                                              feat_imp = pd.Series(importances, index=X.columns).sort_values(ascending=False)
                                                              feat_imp.head(10).plot(kind='barh')
                                                              plt.title('Random Forest Feature Importance')
                                                              plt.show()

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score # Import metrics if not already imported
import pandas as pd # Import pandas if not already imported
import matplotlib.pyplot as plt # Import matplotlib if not already imported


# Model with feature importance
model_rf = RandomForestRegressor(n_estimators=200,
                               max_depth=10,
                               random_state=42) # Corrected indentation

# Train
model_rf.fit(X_train, y_train) # Corrected indentation

# Evaluate
rf_pred = model_rf.predict(X_test) # Corrected indentation
print(f"\nRandom Forest MSE: {mean_squared_error(y_test, rf_pred):.2f}") # Corrected indentation
print(f"Random Forest R²: {r2_score(y_test, rf_pred):.2f}") # Corrected indentation

# Feature importance
importances = model_rf.feature_importances_ # Corrected indentation
# Ensure X is available in this scope or pass column names appropriately
feat_imp = pd.Series(importances, index=X.columns).sort_values(ascending=False) # Corrected indentation
feat_imp.head(10).plot(kind='barh') # Corrected indentation
plt.title('Random Forest Feature Importance') # Corrected indentation
plt.show() # Corrected indentation

from sklearn.tree import DecisionTreeRegressor, plot_tree

# Model
model_dt = DecisionTreeRegressor(max_depth=3, random_state=42)

# Train
model_dt.fit(X_train, y_train)

# Evaluate
dt_pred = model_dt.predict(X_test)
print(f"\nDecision Tree MSE: {mean_squared_error(y_test, dt_pred):.2f}")
print(f"Decision Tree R²: {r2_score(y_test, dt_pred):.2f}")

# Visualize tree
plt.figure(figsize=(20,10))
plot_tree(model_dt,
         feature_names=X.columns,
                  filled=True,
                           rounded=True)
                           plt.title('Decision Tree Visualization')
                           plt.show()

from sklearn.tree import DecisionTreeRegressor, plot_tree
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
import pandas as pd # Assuming X is a pandas DataFrame with column names

# Model
model_dt = DecisionTreeRegressor(max_depth=3, random_state=42)

# Train
model_dt.fit(X_train, y_train)

# Evaluate
dt_pred = model_dt.predict(X_test)
print(f"\nDecision Tree MSE: {mean_squared_error(y_test, dt_pred):.2f}")
print(f"Decision Tree R²: {r2_score(y_test, dt_pred):.2f}")

# Visualize tree
plt.figure(figsize=(20,10))
plot_tree(model_dt,
          feature_names=X.columns,
          filled=True,
          rounded=True)
plt.title('Decision Tree Visualization') # Corrected indentation
plt.show() # Corrected indentation

from sklearn.linear_model import LinearRegression
from statsmodels.api import OLS, add_constant

# Scikit-learn implementation
model_lr = LinearRegression()
model_lr.fit(X_train, y_train)

# Evaluate
lr_pred = model_lr.predict(X_test)
print(f"\nLinear Regression MSE: {mean_squared_error(y_test, lr_pred):.2f}")
print(f"Linear Regression R²: {r2_score(y_test, lr_pred):.2f}")

# Statsmodels implementation (detailed statistics)
X_const = add_constant(X_train)
model_ols = OLS(y_train, X_const).fit()
print("\nDetailed Regression Summary:")
print(model_ols.summary())

# Plot coefficients
coefs = pd.Series(model_lr.coef_, index=X.columns).sort_values()
coefs.plot(kind='barh')
plt.title('Linear Regression Coefficients')
plt.show()

models = {
      'ANN': ann_pred,
          'SVM': svm_pred,
              'Naive Bayes': nb_pred,
                  'KNN': knn_pred,
                      'Random Forest': rf_pred,
                          'Decision Tree': dt_pred,
                              'Linear Regression': lr_pred
                              }

                              results = []
                              for name, pred in models.items():
                                  results.append({
                                          'Model': name,
                                                  'MSE': mean_squared_error(y_test, pred),
                                                          'R²': r2_score(y_test, pred)
                                                              })

                                                              results_df = pd.DataFrame(results).sort_values('R²', ascending=False)
                                                              print("\nModel Performance Comparison:")
                                                              print(results_df)

                                                              # Visual comparison
                                                              plt.figure(figsize=(10,6))
                                                              sns.barplot(x='R²', y='Model', data=results_df, palette='viridis')
                                                              plt.title('Model Comparison by R² Score')
                                                              plt.xlim(0, 1)
                                                              plt.show()
}

from sklearn.tree import DecisionTreeRegressor, plot_tree
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
import pandas as pd # Assuming X is a pandas DataFrame with column names
import seaborn as sns # Import seaborn for plotting

# Assuming ann_pred, svm_pred, nb_pred, knn_pred, rf_pred, dt_pred, lr_pred are already defined from previous cells
# If any of these are not defined, the code will fail with NameError.
# For example, if ann_pred, svm_pred, nb_pred, knn_pred were not generated, you'd need to train those models first.

models = {
    # Ensure these variables (ann_pred, svm_pred, etc.) are defined from previous model training steps
    # 'ANN': ann_pred,
    # 'SVM': svm_pred,
    # 'Naive Bayes': nb_pred,
    # 'KNN': knn_pred,
    'Random Forest': rf_pred,
    'Decision Tree': dt_pred,
    'Linear Regression': lr_pred
}

results = []
for name, pred in models.items():
    # Ensure that y_test and pred have compatible shapes and are non-empty
    if len(y_test) > 0 and len(pred) == len(y_test):
        results.append({
            'Model': name,
            'MSE': mean_squared_error(y_test, pred),
            'R²': r2_score(y_test, pred)
        })
    else:
        print(f"Skipping model {name} due to incompatible test data/predictions.")


# Only attempt to create DataFrame and plot if results are not empty
if results:
    results_df = pd.DataFrame(results).sort_values('R²', ascending=False)
    print("\nModel Performance Comparison:")
    print(results_df)

    # Visual comparison
    plt.figure(figsize=(10,6))
    sns.barplot(x='R²', y='Model', data=results_df, palette='viridis')
    plt.title('Model Comparison by R² Score')
    plt.xlim(0, 1)
    plt.show()
else:
    print("No valid model results to compare.")

import os
import shutil
import pandas as pd
from sklearn.model_selection import train_test_split

def create_project_structure(base_path='AI_Ghibli_Project'):
    """Create the complete folder structure as specified by the professor"""

            # 1. Create main folders
                folders = [
                        'original_data',
                                'preprocessed_data',
                                        'Results'
                                            ]

                                                    # Create base directory if not exists
                                                        if not os.path.exists(base_path):
                                                                os.makedirs(base_path)

                                                                        # Create all subfolders
                                                                            for folder in folders:
                                                                                    path = os.path.join(base_path, folder)
                                                                                            if not os.path.exists(path):
                                                                                                        os.makedirs(path)

                                                                                                                # 2. Create sample data files (replace with your actual data)
                                                                                                                    # Original data files (4 files as specified)
                                                                                                                        original_files = [
                                                                                                                                'data_ghibli_raw.csv',
                                                                                                                                        'metadata.json',
                                                                                                                                                'image_features.npy',
                                                                                                                                                        'social_engagement.csv'
                                                                                                                                                            ]

                                                                                                                                                                    for file in original_files:
                                                                                                                                                                            open(os.path.join(base_path, 'original_data', file), 'w').close()

                                                                                                                                                                                    # 3. Create preprocessed data files
                                                                                                                                                                                        # Sample code to create train/test splits (replace with your actual data processing)
                                                                                                                                                                                            data = pd.DataFrame({
                                                                                                                                                                                                    'feature1': range(100),
                                                                                                                                                                                                            'feature2': range(100, 200),
                                                                                                                                                                                                                    'target': range(50, 150)
                                                                                                                                                                                                                        })

                                                                                                                                                                                                                                X_train, X_test, y_train, y_test = train_test_split(
                                                                                                                                                                                                                                        data.drop('target', axis=1),
                                                                                                                                                                                                                                                data['target'],
                                                                                                                                                                                                                                                        test_size=0.2,
                                                                                                                                                                                                                                                                random_state=42
                                                                                                                                                                                                                                                                    )

                                                                                                                                                                                                                                                                            # Save processed files
                                                                                                                                                                                                                                                                                X_train.to_csv(os.path.join(base_path, 'preprocessed_data', 'training_X.csv'), index=False)
                                                                                                                                                                                                                                                                                    X_test.to_csv(os.path.join(base_path, 'preprocessed_data', 'testing_X_test.csv'), index=False)
                                                                                                                                                                                                                                                                                        y_train.to_csv(os.path.join(base_path, 'preprocessed_data', 'Y.csv'), index=False, header=True)
                                                                                                                                                                                                                                                                                            y_test.to_csv(os.path.join(base_path, 'preprocessed_data', 'Y_test.csv'), index=False, header=True)

                                                                                                                                                                                                                                                                                                    # 4. Create model prediction files (example for 3 models)
                                                                                                                                                                                                                                                                                                        models = {
                                                                                                                                                                                                                                                                                                                'RF_model': [10, 20, 30, 40],  # Replace with actual predictions
                                                                                                                                                                                                                                                                                                                        'SVM_model': [12, 18, 32, 38],
                                                                                                                                                                                                                                                                                                                                'ANN_model': [11, 19, 31, 39]
                                                                                                                                                                                                                                                                                                                                    }

                                                                                                                                                                                                                                                                                                                                            for model_name, predictions in models.items():
                                                                                                                                                                                                                                                                                                                                                    pd.DataFrame({'predictions': predictions}).to_csv(
                                                                                                                                                                                                                                                                                                                                                                os.path.join(base_path, 'Results', f'predictions_{model_name}.csv'),
                                                                                                                                                                                                                                                                                                                                                                            index=False
                                                                                                                                                                                                                                                                                                                                                                                    )

                                                                                                                                                                                                                                                                                                                                                                                            # 5. Create Python code file
                                                                                                                                                                                                                                                                                                                                                                                                code_content = """
                                                                                                                                                                                                                                                                                                                                                                                                # AI Ghibli Project Code
                                                                                                                                                                                                                                                                                                                                                                                                # Contains all implementation code for:
                                                                                                                                                                                                                                                                                                                                                                                                # - Data preprocessing
                                                                                                                                                                                                                                                                                                                                                                                                # - Model training
                                                                                                                                                                                                                                                                                                                                                                                                # - Evaluation

                                                                                                                                                                                                                                                                                                                                                                                                import pandas as pd
                                                                                                                                                                                                                                                                                                                                                                                                from sklearn.model_selection import train_test_split

                                                                                                                                                                                                                                                                                                                                                                                                def load_data():
                                                                                                                                                                                                                                                                                                                                                                                                    # Load original data
                                                                                                                                                                                                                                                                                                                                                                                                        raw_data = pd.read_csv('original_data/data_ghibli_raw.csv')
                                                                                                                                                                                                                                                                                                                                                                                                            return raw_data

                                                                                                                                                                                                                                                                                                                                                                                                            # [Add all your actual project code here]
                                                                                                                                                                                                                                                                                                                                                                                                            """

                                                                                                                                                                                                                                                                                                                                                                                                                    with open(os.path.join(base_path, 'project_code.py'), 'w') as f:
                                                                                                                                                                                                                                                                                                                                                                                                                            f.write(code_content)

                                                                                                                                                                                                                                                                                                                                                                                                                                    # 6. Create PDF report placeholder
                                                                                                                                                                                                                                                                                                                                                                                                                                        open(os.path.join(base_path, 'project_report.pdf'), 'w').close()

                                                                                                                                                                                                                                                                                                                                                                                                                                                print(f"Project structure created successfully at: {os.path.abspath(base_path)}")
                                                                                                                                                                                                                                                                                                                                                                                                                                                    print("\nFolder structure created:")
                                                                                                                                                                                                                                                                                                                                                                                                                                                        for root, dirs, files in os.walk(base_path):
                                                                                                                                                                                                                                                                                                                                                                                                                                                                level = root.replace(base_path, '').count(os.sep)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        indent = ' ' * 4 * level
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                print(f"{indent}{os.path.basename(root)}/")
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        subindent = ' ' * 4 * (level + 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                for f in files:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            print(f"{subindent}{f}")

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            # Execute the function
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            create_project_structure()

import os
import shutil
import pandas as pd
from sklearn.model_selection import train_test_split

def create_project_structure(base_path='AI_Ghibli_Project'):
    """Create the complete folder structure as specified by the professor"""

    # 1. Create main folders
    folders = [
        'original_data',
        'preprocessed_data',
        'Results'
    ]

    # Create base directory if not exists
    if not os.path.exists(base_path):
        os.makedirs(base_path)

    # Create all subfolders
    for folder in folders:
        path = os.path.join(base_path, folder)
        if not os.path.exists(path):
            os.makedirs(path)

    # 2. Create sample data files (replace with your actual data)
    # Original data files (4 files as specified)
    original_files = [
        'data_ghibli_raw.csv',
        'metadata.json',
        'image_features.npy',
        'social_engagement.csv'
    ]

    for file in original_files:
        # Ensure the directory exists before creating the file
        original_data_path = os.path.join(base_path, 'original_data')
        if not os.path.exists(original_data_path):
            os.makedirs(original_data_path)
        open(os.path.join(original_data_path, file), 'w').close()

    # 3. Create preprocessed data files
    # Sample code to create train/test splits (replace with your actual data processing)
    # Using the existing X_train, X_test, y_train, y_test from global variables if they exist
    # Otherwise, create dummy data for demonstration
    if 'X_train' in globals() and 'X_test' in globals() and 'y_train' in globals() and 'y_test' in globals():
        print("Using existing train/test data for saving.")
        # Ensure X_train, X_test are DataFrames for to_csv
        X_train_df = pd.DataFrame(X_train, columns=[f'feature_{i}' for i in range(X_train.shape[1])])
        X_test_df = pd.DataFrame(X_test, columns=[f'feature_{i}' for i in range(X_test.shape[1])])
        y_train_series = pd.Series(y_train, name='target')
        y_test_series = pd.Series(y_test, name='target')
    else:
        print("Existing train/test data not found. Creating dummy data for saving.")
        data = pd.DataFrame({
            'feature1': range(100),
            'feature2': range(100, 200),
            'target': range(50, 150)
        })
        X_train_df, X_test_df, y_train_series, y_test_series = train_test_split(
            data.drop('target', axis=1),
            data['target'],
            test_size=0.2,
            random_state=42
        )


    # Save processed files
    preprocessed_data_path = os.path.join(base_path, 'preprocessed_data')
    if not os.path.exists(preprocessed_data_path):
        os.makedirs(preprocessed_data_path)

    X_train_df.to_csv(os.path.join(preprocessed_data_path, 'training_X.csv'), index=False)
    X_test_df.to_csv(os.path.join(preprocessed_data_path, 'testing_X_test.csv'), index=False)
    y_train_series.to_csv(os.path.join(preprocessed_data_path, 'Y.csv'), index=False, header=True)
    y_test_series.to_csv(os.path.join(preprocessed_data_path, 'Y_test.csv'), index=False, header=True)

    # 4. Create model prediction files (example for models found in the 'models' global variable)
    results_path = os.path.join(base_path, 'Results')
    if not os.path.exists(results_path):
        os.makedirs(results_path)

    # Use the 'models' global variable if it exists and is a dictionary
    if 'models' in globals() and isinstance(models, dict):
        print("Using existing model predictions for saving.")
        for model_name, predictions in models.items():
             # Ensure predictions are in a format that can be saved to CSV
             pd.DataFrame({'predictions': predictions}).to_csv(
                 os.path.join(results_path, f'predictions_{model_name}.csv'),
                 index=False
             )
    else:
        print("Existing model predictions not found. Creating dummy prediction files.")
        # Example dummy predictions if 'models' global variable is not available
        dummy_models = {
            'RF_model': [10, 20, 30, 40, 50, 60, 70, 80], # Adjusted length to match potential data size
            'SVM_model': [12, 18, 32, 38, 52, 68, 82, 98],
            'ANN_model': [11, 19, 31, 39, 51, 69, 81, 99]
        }
        for model_name, predictions in dummy_models.items():
             pd.DataFrame({'predictions': predictions}).to_csv(
                 os.path.join(results_path, f'predictions_{model_name}.csv'),
                 index=False
             )


    # 5. Create Python code file
    code_content = """
# AI Ghibli Project Code
# Contains all implementation code for:
# - Data preprocessing
# - Model training
# - Evaluation

import pandas as pd
from sklearn.model_selection import train_test_split

def load_data():
    # Load original data
    try:
        raw_data = pd.read_csv('original_data/data_ghibli_raw.csv')
        return raw_data
    except FileNotFoundError:
        print("Error: original_data/data_ghibli_raw.csv not found.")
        return None

# [Add all your actual project code here]
"""

    with open(os.path.join(base_path, 'project_code.py'), 'w') as f:
        f.write(code_content)

    # 6. Create PDF report placeholder
    open(os.path.join(base_path, 'project_report.pdf'), 'w').close()

    print(f"Project structure created successfully at: {os.path.abspath(base_path)}")
    print("\nFolder structure created:")
    for root, dirs, files in os.walk(base_path):
        level = root.replace(base_path, '').count(os.sep)
        indent = ' ' * 4 * level
        print(f"{indent}{os.path.basename(root)}/")
        subindent = ' ' * 4 * (level + 1)
        for f in files:
            print(f"{subindent}{f}")

# Execute the function
create_project_structure()

# Initialize git repository in the folder
import subprocess
subprocess.run(['git', 'init'], cwd='AI_Ghibli_Project')

import zipfile

def create_zip_submission():
    with zipfile.ZipFile('AI_Ghibli_Project.zip', 'w') as zipf:
            for root, dirs, files in os.walk('AI_Ghibli_Project'):
                        for file in files:
                                        zipf.write(os.path.join(root, file))
                                            print("ZIP archive created for submission")

import zipfile
import os # Ensure os is imported as it's used in os.walk and os.path.join

def create_zip_submission():
    with zipfile.ZipFile('AI_Ghibli_Project.zip', 'w') as zipf:
        for root, dirs, files in os.walk('AI_Ghibli_Project'):
            for file in files:
                # Make sure the file path inside the zip is relative to the project root
                arcname = os.path.relpath(os.path.join(root, file), 'AI_Ghibli_Project')
                zipf.write(os.path.join(root, file), arcname=arcname)
    # Corrected indentation for the print statement
    print("ZIP archive created for submission")

# Call the function to create the zip file
create_zip_submission()

import os
import shutil
import zipfile
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
import pandas as pd
from sklearn.model_selection import train_test_split

# 1. Create the project structure
def create_project_structure(base_path='AI_Ghibli_Project'):
    """Create the complete folder structure as specified"""

            # Create main folders
                folders = [
                        'original_data',
                                'preprocessed_data',
                                        'Results'
                                            ]

                                                    # Create base directory
                                                        os.makedirs(base_path, exist_ok=True)

                                                                # Create all subfolders
                                                                    for folder in folders:
                                                                            os.makedirs(os.path.join(base_path, folder), exist_ok=True)

                                                                                    # Create sample original data files (4 files)
                                                                                        original_files = [
                                                                                                'data_ghibli_raw.csv',
                                                                                                        'metadata.json',
                                                                                                                'image_features.npy',
                                                                                                                        'social_engagement.csv'
                                                                                                                            ]

                                                                                                                                    for file in original_files:
                                                                                                                                            open(os.path.join(base_path, 'original_data', file), 'w').close()

                                                                                                                                                    # Create sample preprocessed data
                                                                                                                                                        data = pd.DataFrame({
                                                                                                                                                                'feature1': range(100),
                                                                                                                                                                        'feature2': range(100, 200),
                                                                                                                                                                                'target': range(50, 150)
                                                                                                                                                                                    })

                                                                                                                                                                                            X_train, X_test, y_train, y_test = train_test_split(
                                                                                                                                                                                                    data.drop('target', axis=1),
                                                                                                                                                                                                            data['target'],
                                                                                                                                                                                                                    test_size=0.2,
                                                                                                                                                                                                                            random_state=42
                                                                                                                                                                                                                                )

                                                                                                                                                                                                                                        # Save processed files
                                                                                                                                                                                                                                            X_train.to_csv(os.path.join(base_path, 'preprocessed_data', 'training_X.csv'), index=False)
                                                                                                                                                                                                                                                X_test.to_csv(os.path.join(base_path, 'preprocessed_data', 'testing_X_test.csv'), index=False)
                                                                                                                                                                                                                                                    y_train.to_csv(os.path.join(base_path, 'preprocessed_data', 'Y.csv'), index=False, header=True)
                                                                                                                                                                                                                                                        y_test.to_csv(os.path.join(base_path, 'preprocessed_data', 'Y_test.csv'), index=False, header=True)

                                                                                                                                                                                                                                                                # Create model prediction files
                                                                                                                                                                                                                                                                    models = {
                                                                                                                                                                                                                                                                            'RF_model': [10, 20, 30, 40],
                                                                                                                                                                                                                                                                                    'SVM_model': [12, 18, 32, 38],
                                                                                                                                                                                                                                                                                            'ANN_model': [11, 19, 31, 39]
                                                                                                                                                                                                                                                                                                }

                                                                                                                                                                                                                                                                                                        for model_name, predictions in models.items():
                                                                                                                                                                                                                                                                                                                pd.DataFrame({'predictions': predictions}).to_csv(
                                                                                                                                                                                                                                                                                                                            os.path.join(base_path, 'Results', f'predictions_{model_name}.csv'),
                                                                                                                                                                                                                                                                                                                                        index=False
                                                                                                                                                                                                                                                                                                                                                )

                                                                                                                                                                                                                                                                                                                                                        # Create Python code file
                                                                                                                                                                                                                                                                                                                                                            code_content = """# AI Ghibli Project Code
                                                                                                                                                                                                                                                                                                                                                            import pandas as pd
                                                                                                                                                                                                                                                                                                                                                            from sklearn.model_selection import train_test_split

                                                                                                                                                                                                                                                                                                                                                            def load_data():
                                                                                                                                                                                                                                                                                                                                                                return pd.read_csv('original_data/data_ghibli_raw.csv')

                                                                                                                                                                                                                                                                                                                                                                # [Your implementation code here]"""

                                                                                                                                                                                                                                                                                                                                                                        with open(os.path.join(base_path, 'project_code.py'), 'w') as f:
                                                                                                                                                                                                                                                                                                                                                                                f.write(code_content)

                                                                                                                                                                                                                                                                                                                                                                                        # Create PDF report placeholder
                                                                                                                                                                                                                                                                                                                                                                                            open(os.path.join(base_path, 'project_report.pdf'), 'w').close()

                                                                                                                                                                                                                                                                                                                                                                                                    print("Project structure created successfully")
                                                                                                                                                                                                                                                                                                                                                                                                        return base_path

                                                                                                                                                                                                                                                                                                                                                                                                        # 2. Create ZIP archive
                                                                                                                                                                                                                                                                                                                                                                                                        def create_zip_archive(folder_path):
                                                                                                                                                                                                                                                                                                                                                                                                            zip_filename = f"{folder_path}.zip"

                                                                                                                                                                                                                                                                                                                                                                                                                    with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
                                                                                                                                                                                                                                                                                                                                                                                                                            for root, dirs, files in os.walk(folder_path):
                                                                                                                                                                                                                                                                                                                                                                                                                                        for file in files:
                                                                                                                                                                                                                                                                                                                                                                                                                                                        file_path = os.path.join(root, file)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        arcname = os.path.relpath(file_path, folder_path)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        zipf.write(file_path, arcname=os.path.join(folder_path, arcname))

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                print(f"ZIP archive created: {zip_filename}")
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    return zip_filename

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    # 3. Upload to Google Drive
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    def upload_to_drive(file_path, creds_file='credentials.json'):
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        """Upload file to Google Drive"""

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                # Authenticate
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    credentials = service_account.Credentials.from_service_account_file(
creds_file,
scopes=['https://www.googleapis.com/auth/drive']


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                service = build('drive', 'v3', credentials=credentials)

reate file metadata
file_metadata = {
name': os.path.basename(file_path),
mimeType': 'application/zip'
}

pload
media = MediaFileUpload(file_path, mimetype='application/zip')
file = service.files().create(
body=file_metadata,
media_body=media,
fields='id'
execute()

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    print(f"File uploaded to Google Drive with ID: {file.get('id')}")
return file.get('id')

ain execution
if __name__ == "__main__":
tep 1: Create project structure
project_folder = create_project_structure()

tep 2: Create ZIP file
zip_file = create_zip_archive(project_folder)

tep 3: Upload to Google Drive (requires credentials.json)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        try:
upload_to_drive(zip_file)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    except Exception as e:
print(f"Google Drive upload failed: {e}")
print(f"Manual upload required. ZIP file is at: {os.path.abspath(zip_file)}")

lean up (optional)
shutil.rmtree(project_folder)

import os
import shutil
import zipfile
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
import pandas as pd
from sklearn.model_selection import train_test_split
import numpy as np # Import numpy as it's used for dummy data

# 1. Create the project structure
def create_project_structure(base_path='AI_Ghibli_Project'):
    """Create the complete folder structure as specified"""

    # Create main folders
    folders = [
        'original_data',
        'preprocessed_data',
        'Results'
    ]

    # Create base directory
    os.makedirs(base_path, exist_ok=True)

    # Create all subfolders
    for folder in folders:
        os.makedirs(os.path.join(base_path, folder), exist_ok=True)

    # Create sample original data files (4 files)
    original_files = [
        'data_ghibli_raw.csv',
        'metadata.json',
        'image_features.npy',
        'social_engagement.csv'
    ]

    for file in original_files:
        open(os.path.join(base_path, 'original_data', file), 'w').close()

    # Create sample preprocessed data
    # Check if X_train, X_test, y_train, y_test exist in the global scope
    if 'X_train' in globals() and 'X_test' in globals() and 'y_train' in globals() and 'y_test' in globals():
        print("Using existing train/test data for saving.")
        # Ensure X_train and X_test are DataFrames before saving
        X_train_df = pd.DataFrame(X_train, columns=[f'feature_{i}' for i in range(X_train.shape[1])])
        X_test_df = pd.DataFrame(X_test, columns=[f'feature_{i}' for i in range(X_test.shape[1])])
        y_train_series = pd.Series(y_train, name='target')
        y_test_series = pd.Series(y_test, name='target')
    else:
        print("Existing train/test data not found. Creating dummy data for saving.")
        # Create dummy data if global variables are not available
        data = pd.DataFrame({
            'feature1': range(100),
            'feature2': range(100, 200),
            'target': range(50, 150)
        })
        X_train_df, X_test_df, y_train_series, y_test_series = train_test_split(
            data.drop('target', axis=1),
            data['target'],
            test_size=0.2,
            random_state=42
        )

    # Save processed files
    X_train_df.to_csv(os.path.join(base_path, 'preprocessed_data', 'training_X.csv'), index=False)
    X_test_df.to_csv(os.path.join(base_path, 'preprocessed_data', 'testing_X_test.csv'), index=False)
    y_train_series.to_csv(os.path.join(base_path, 'preprocessed_data', 'Y.csv'), index=False, header=True)
    y_test_series.to_csv(os.path.join(base_path, 'preprocessed_data', 'Y_test.csv'), index=False, header=True)

    # Create model prediction files
    # Use the 'models' global variable if it exists and is a dictionary
    if 'models' in globals() and isinstance(models, dict):
        print("Using existing model predictions for saving.")
        for model_name, predictions in models.items():
             # Ensure predictions are in a format that can be saved to CSV
             pd.DataFrame({'predictions': predictions}).to_csv(
                 os.path.join(base_path, 'Results', f'predictions_{model_name}.csv'),
                 index=False
             )
    else:
        print("Existing model predictions not found. Creating dummy prediction files.")
        # Example dummy predictions if 'models' global variable is not available
        dummy_models = {
            'RF_model': [10, 20, 30, 40, 50, 60, 70, 80], # Adjusted length to match potential data size
            'SVM_model': [12, 18, 32, 38, 52, 68, 82, 98],
            'ANN_model': [11, 19, 31, 39, 51, 69, 81, 99]
        }
        for model_name, predictions in dummy_models.items():
             pd.DataFrame({'predictions': predictions}).to_csv(
                 os.path.join(base_path, 'Results', f'predictions_{model_name}.csv'),
                 index=False
             )

    # Create Python code file
    code_content = """# AI Ghibli Project Code
# Contains all implementation code for:
# - Data preprocessing
# - Model training
# - Evaluation

import pandas as pd
from sklearn.model_selection import train_test_split

def load_data():
    # Load original data
    try:
        raw_data = pd.read_csv('original_data/data_ghibli_raw.csv')
        return raw_data
    except FileNotFoundError:
        print("Error: original_data/data_ghibli_raw.csv not found.")
        return None

# [Add all your actual project code here]"""

    with open(os.path.join(base_path, 'project_code.py'), 'w') as f:
        f.write(code_content)

    # Create PDF report placeholder
    open(os.path.join(base_path, 'project_report.pdf'), 'w').close()

    print("Project structure created successfully")
    return base_path

# 2. Create ZIP archive
def create_zip_archive(folder_path):
    zip_filename = f"{folder_path}.zip"

    with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, dirs, files in os.walk(folder_path):
            for file in files:
                file_path = os.path.join(root, file)
                # Use os.path.relpath to create relative paths inside the zip
                arcname = os.path.relpath(file_path, start=folder_path)
                zipf.write(file_path, arcname=arcname) # Corrected arcname

    print(f"ZIP archive created: {zip_filename}")
    return zip_filename

# 3. Upload to Google Drive
def upload_to_drive(file_path, creds_file='credentials.json'):
    """Upload file to Google Drive"""

    # Authenticate
    try:
        credentials = service_account.Credentials.from_service_account_file(
            creds_file,
            scopes=['https://www.googleapis.com/auth/drive']
        )
    except FileNotFoundError:
        print(f"Error: Credentials file '{creds_file}' not found. Google Drive upload skipped.")
        print("Please create a credentials.json file with your Google Cloud credentials.")
        return None

    service = build('drive', 'v3', credentials=credentials)

    # Create file metadata
    file_metadata = {
        'name': os.path.basename(file_path),
        'mimeType': 'application/zip'
    }

    # Upload
    try:
        media = MediaFileUpload(file_path, mimetype='application/zip')
        file = service.files().create(
            body=file_metadata,
            media_body=media,
            fields='id'
        ).execute()

        print(f"File uploaded to Google Drive with ID: {file.get('id')}")
        return file.get('id')
    except Exception as e:
        print(f"Google Drive API error during upload: {e}")
        return None


# Main execution
# The __name__ == "__main__" block is typically used when the script is run directly.
# In a Jupyter notebook, code is executed sequentially. You can either call the
# functions directly or keep the __main__ block and execute the cell.

# Ensure necessary libraries are imported
# This has already been done at the top of the cell.

# Step 1: Create project structure
project_folder = create_project_structure()

# Step 2: Create ZIP file
zip_file = create_zip_archive(project_folder)

# Step 3: Upload to Google Drive (requires credentials.json)
upload_to_drive(zip_file)

# Clean up (optional)
# shutil.rmtree(project_folder)

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score

# إنشاء بيانات نموذجية
data = pd.DataFrame({
    'feature1': np.random.rand(100),
        'feature2': np.random.rand(100),
            'target': np.random.rand(100)
            })

            # تقسيم البيانات
            X_train, X_test, y_train, y_test = train_test_split(data[['feature1', 'feature2']], data['target'], test_size=0.2)

            # تدريب نموذج
            model = RandomForestRegressor()
            model.fit(X_train, y_train)
            predictions = model.predict(X_test)

            # إنشاء ملف PDF
            with PdfPages('all_plots_report.pdf') as pdf:
                # 1. رسم العلاقة بين الميزات والهدف
                    plt.figure(figsize=(10, 6))
                        plt.scatter(data['feature1'], data['target'], alpha=0.5)
                            plt.title('العلاقة بين Feature1 و Target')
                                plt.xlabel('Feature1')
                                    plt.ylabel('Target')
                                        plt.grid(True)
                                            pdf.savefig()  # حفظ الرسم في PDF
                                                plt.close()

                                                        # 2. رسم توزيع Target
                                                            plt.figure(figsize=(10, 6))
                                                                plt.hist(data['target'], bins=20, color='skyblue', edgecolor='black')
                                                                    plt.title('توزيع Target')
                                                                        plt.xlabel('القيمة')
                                                                            plt.ylabel('التكرار')
                                                                                pdf.savefig()
                                                                                    plt.close()

                                                                                            # 3. رسم مقارنة التوقعات مع القيم الحقيقية
                                                                                                plt.figure(figsize=(10, 6))
                                                                                                    plt.scatter(y_test, predictions, alpha=0.5)
                                                                                                        plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--')
                                                                                                            plt.title('المقارنة بين التوقعات والقيم الحقيقية')
                                                                                                                plt.xlabel('القيم الحقيقية')
                                                                                                                    plt.ylabel('التوقعات')
                                                                                                                        plt.grid(True)
                                                                                                                            pdf.savefig()
                                                                                                                                plt.close()

                                                                                                                                        # 4. رسم أهمية الميزات
                                                                                                                                            plt.figure(figsize=(10, 6))
                                                                                                                                                feature_importances = pd.Series(model.feature_importances_, index=X_train.columns)
                                                                                                                                                    feature_importances.nlargest(10).plot(kind='barh')
                                                                                                                                                        plt.title('أهمية الميزات في النموذج')
                                                                                                                                                            pdf.savefig()
                                                                                                                                                                plt.close()

                                                                                                                                                                        # 5. إضافة معلومات نصية
                                                                                                                                                                            plt.figure(figsize=(10, 6))
                                                                                                                                                                                plt.axis('off')
                                                                                                                                                                                    plt.text(0.1, 0.9, 'تقرير التحليل الكامل', fontsize=20, fontweight='bold')
                                                                                                                                                                                        plt.text(0.1, 0.7, f'أداء النموذج: R² = {r2_score(y_test, predictions):.2f}', fontsize=14)
                                                                                                                                                                                            plt.text(0.1, 0.6, f'عدد العينات: {len(data)}', fontsize=14)
                                                                                                                                                                                                plt.text(0.1, 0.5, f'عدد الميزات: {X_train.shape[1]}', fontsize=14)
                                                                                                                                                                                                    pdf.savefig()
                                                                                                                                                                                                        plt.close()

                                                                                                                                                                                                        print("تم حفظ جميع الرسوم البيانية والمعلومات في ملف all_plots_report.pdf")

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score

# إنشاء بيانات نموذجية
data = pd.DataFrame({
    'feature1': np.random.rand(100),
    'feature2': np.random.rand(100),
    'target': np.random.rand(100)
})

# تقسيم البيانات
X_train, X_test, y_train, y_test = train_test_split(data[['feature1', 'feature2']], data['target'], test_size=0.2)

# تدريب نموذج
model = RandomForestRegressor()
model.fit(X_train, y_train)
predictions = model.predict(X_test)

# إنشاء ملف PDF
with PdfPages('all_plots_report.pdf') as pdf:
    # 1. رسم العلاقة بين الميزات والهدف
    plt.figure(figsize=(10, 6))
    plt.scatter(data['feature1'], data['target'], alpha=0.5)
    plt.title('العلاقة بين Feature1 و Target')
    plt.xlabel('Feature1')
    plt.ylabel('Target')
    plt.grid(True)
    pdf.savefig()  # حفظ الرسم في PDF
    plt.close()

    # 2. رسم توزيع Target
    plt.figure(figsize=(10, 6))
    plt.hist(data['target'], bins=20, color='skyblue', edgecolor='black')
    plt.title('توزيع Target')
    plt.xlabel('القيمة')
    plt.ylabel('التكرار')
    pdf.savefig()
    plt.close()

    # 3. رسم مقارنة التوقعات مع القيم الحقيقية
    plt.figure(figsize=(10, 6))
    plt.scatter(y_test, predictions, alpha=0.5)
    plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--')
    plt.title('المقارنة بين التوقعات والقيم الحقيقية')
    plt.xlabel('القيم الحقيقية')
    plt.ylabel('التوقعات')
    plt.grid(True)
    pdf.savefig()
    plt.close()

    # 4. رسم أهمية الميزات
    plt.figure(figsize=(10, 6))
    feature_importances = pd.Series(model.feature_importances_, index=X_train.columns)
    feature_importances.nlargest(10).plot(kind='barh')
    plt.title('أهمية الميزات في النموذج')
    pdf.savefig()
    plt.close()

    # 5. إضافة معلومات نصية
    plt.figure(figsize=(10, 6))
    plt.axis('off')
    plt.text(0.1, 0.9, 'تقرير التحليل الكامل', fontsize=20, fontweight='bold')
    plt.text(0.1, 0.7, f'أداء النموذج: R² = {r2_score(y_test, predictions):.2f}', fontsize=14)
    plt.text(0.1, 0.6, f'عدد العينات: {len(data)}', fontsize=14)
    plt.text(0.1, 0.5, f'عدد الميزات: {X_train.shape[1]}', fontsize=14)
    pdf.savefig()
    plt.close()

print("تم حفظ جميع الرسوم البيانية والمعلومات في ملف all_plots_report.pdf")

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score, mean_squared_error
import seaborn as sns

# 1. إنشاء بيانات نموذجية
np.random.seed(42)
data = pd.DataFrame({
    'السن': np.random.randint(18, 60, 100),
        'الدخل': np.random.normal(5000, 1500, 100),
            'الإنفاق': np.random.normal(3000, 800, 100),
                'التقييم': np.random.uniform(1, 5, 100)
                })

                # 2. تحضير الرسوم البيانية
                def create_all_plots(data):
                    """إنشاء جميع الرسوم البيانية"""
                        figures = []

                                # الرسم 1: علاقة السن بالإنفاق
                                    fig1 = plt.figure(figsize=(12, 8))
                                        sns.scatterplot(x='السن', y='الإنفاق', data=data, hue='التقييم', palette='viridis', s=100)
                                            plt.title('علاقة السن بمستوى الإنفاق', fontsize=16, fontweight='bold')
                                                plt.grid(True)
                                                    figures.append(fig1)

                                                            # الرسم 2: توزيع الدخل
                                                                fig2 = plt.figure(figsize=(12, 8))
                                                                    sns.histplot(data['الدخل'], bins=15, kde=True, color='skyblue')
                                                                        plt.title('توزيع مستويات الدخل', fontsize=16)
                                                                            plt.xlabel('الدخل الشهري')
                                                                                plt.ylabel('التكرار')
                                                                                    figures.append(fig2)

                                                                                            # الرسم 3: نموذج تنبؤي
                                                                                                X = data[['السن', 'الدخل']]
                                                                                                    y = data['الإنفاق']
                                                                                                        model = RandomForestRegressor().fit(X, y)
                                                                                                            predictions = model.predict(X)

                                                                                                                    fig3 = plt.figure(figsize=(12, 8))
                                                                                                                        plt.scatter(y, predictions, alpha=0.6)
                                                                                                                            plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--')
                                                                                                                                plt.title('أداء النموذج التنبؤي', fontsize=16)
                                                                                                                                    plt.xlabel('القيم الحقيقية')
                                                                                                                                        plt.ylabel('التوقعات')
                                                                                                                                            plt.text(0.05, 0.9, f'R² = {r2_score(y, predictions):.2f}', transform=plt.gca().transAxes)
                                                                                                                                                plt.grid(True)
                                                                                                                                                    figures.append(fig3)

                                                                                                                                                            # الرسم 4: مصفوفة الارتباط
                                                                                                                                                                fig4 = plt.figure(figsize=(12, 8))
                                                                                                                                                                    sns.heatmap(data.corr(), annot=True, cmap='coolwarm', center=0)
                                                                                                                                                                        plt.title('مصفوفة الارتباط بين المتغيرات', fontsize=16)
                                                                                                                                                                            figures.append(fig4)

                                                                                                                                                                                    return figures

                                                                                                                                                                                    # 3. إنشاء وتنسيق ملف PDF
                                                                                                                                                                                    def save_to_pdf(figures, filename='التقرير_التحليلي.pdf'):
                                                                                                                                                                                        """حفظ جميع الرسوم في ملف PDF مع إضافة معلومات"""
                                                                                                                                                                                            with PdfPages(filename) as pdf:
                                                                                                                                                                                                    # صفحة الغلاف
                                                                                                                                                                                                            cover = plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                    cover.text(0.5, 0.7, 'التقرير التحليلي الشامل',
                                                                                                                                                                                                                                      ha='center', va='center', fontsize=24, fontweight='bold')
                                                                                                                                                                                                                                              cover.text(0.5, 0.5, 'تحليل بيانات العملاء',
                                                                                                                                                                                                                                                                ha='center', va='center', fontsize=18)
                                                                                                                                                                                                                                                                        cover.text(0.5, 0.3, f'تاريخ الإنشاء: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                                                                                                                                                                                                                                                                                          ha='center', va='center', fontsize=12)
                                                                                                                                                                                                                                                                                                  pdf.savefig(cover)
                                                                                                                                                                                                                                                                                                          plt.close()

                                                                                                                                                                                                                                                                                                                          # صفحة المحتويات
                                                                                                                                                                                                                                                                                                                                  contents = plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                                                                                          contents.text(0.1, 0.9, 'محتويات التقرير:', fontsize=16, fontweight='bold')
                                                                                                                                                                                                                                                                                                                                                  contents.text(0.1, 0.8, '1. علاقة السن بالإنفاق', fontsize=12)
                                                                                                                                                                                                                                                                                                                                                          contents.text(0.1, 0.75, '2. توزيع مستويات الدخل', fontsize=12)
                                                                                                                                                                                                                                                                                                                                                                  contents.text(0.1, 0.7, '3. أداء النموذج التنبؤي', fontsize=12)
                                                                                                                                                                                                                                                                                                                                                                          contents.text(0.1, 0.65, '4. مصفوفة الارتباط', fontsize=12)
                                                                                                                                                                                                                                                                                                                                                                                  pdf.savefig(contents)
                                                                                                                                                                                                                                                                                                                                                                                          plt.close()

                                                                                                                                                                                                                                                                                                                                                                                                          # حفظ جميع الرسوم
                                                                                                                                                                                                                                                                                                                                                                                                                  for fig in figures:
                                                                                                                                                                                                                                                                                                                                                                                                                              pdf.savefig(fig)
                                                                                                                                                                                                                                                                                                                                                                                                                                          plt.close(fig)

                                                                                                                                                                                                                                                                                                                                                                                                                                                          # صفحة الخاتمة
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  summary = plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          summary.text(0.1, 0.9, 'الملخص التنفيذي:', fontsize=16, fontweight='bold')
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  summary.text(0.1, 0.8, '- توجد علاقة إيجابية بين العمر ومستوى الإنفاق', fontsize=12)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          summary.text(0.1, 0.75, '- توزيع الدخل يتبع النمط الطبيعي', fontsize=12)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  summary.text(0.1, 0.7, f'- النموذج التنبؤي حقق دقة R² = {r2_score(y, predictions):.2f}', fontsize=12)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          summary.text(0.1, 0.6, 'التوصيات:', fontsize=14, fontweight='bold')
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  summary.text(0.1, 0.55, '- التركيز على الفئة العمرية 30-45 لزيادة المبيعات', fontsize=12)
pdf.savefig(summary)
plt.close()

التنفيذ الرئيسي
if __name__ == "__main__":
تكوين الإعدادات العربية
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          plt.rcParams['font.family'] = 'Arial'
plt.rcParams['axes.unicode_minus'] = False

إنشاء الرسوم
all_figures = create_all_plots(data)

حفظ في PDF
save_to_pdf(all_figures)

print("تم إنشاء التقرير بنجاح في ملف 'التقرير_التحليلي.pdf'")

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score, mean_squared_error
import seaborn as sns

# 1. إنشاء بيانات نموذجية
np.random.seed(42)
data = pd.DataFrame({
    'السن': np.random.randint(18, 60, 100),
    'الدخل': np.random.normal(5000, 1500, 100),
    'الإنفاق': np.random.normal(3000, 800, 100),
    'التقييم': np.random.uniform(1, 5, 100)
})

# 2. تحضير الرسوم البيانية
# Ensure this line is not indented
def create_all_plots(data):
    """إنشاء جميع الرسوم البيانية"""
    figures = []

    # الرسم 1: علاقة السن بالإنفاق
    fig1 = plt.figure(figsize=(12, 8))
    sns.scatterplot(x='السن', y='الإنفاق', data=data, hue='التقييم', palette='viridis', s=100)
    plt.title('علاقة السن بمستوى الإنفاق', fontsize=16, fontweight='bold')
    plt.grid(True)
    figures.append(fig1)

    # الرسم 2: توزيع الدخل
    fig2 = plt.figure(figsize=(12, 8))
    sns.histplot(data['الدخل'], bins=15, kde=True, color='skyblue')
    plt.title('توزيع مستويات الدخل', fontsize=16)
    plt.xlabel('الدخل الشهري')
    plt.ylabel('التكرار')
    figures.append(fig2)

    # الرسم 3: نموذج تنبؤي
    X = data[['السن', 'الدخل']]
    y = data['الإنفاق']
    model = RandomForestRegressor().fit(X, y)
    predictions = model.predict(X)

    fig3 = plt.figure(figsize=(12, 8))
    plt.scatter(y, predictions, alpha=0.6)
    plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--')
    plt.title('أداء النموذج التنبؤي', fontsize=16)
    plt.xlabel('القيم الحقيقية')
    plt.ylabel('التوقعات')
    plt.text(0.05, 0.9, f'R² = {r2_score(y, predictions):.2f}', transform=plt.gca().transAxes)
    plt.grid(True)
    figures.append(fig3)

    # الرسم 4: مصفوفة الارتباط
    fig4 = plt.figure(figsize=(12, 8))
    sns.heatmap(data.corr(), annot=True, cmap='coolwarm', center=0)
    plt.title('مصفوفة الارتباط بين المتغيرات', fontsize=16)
    figures.append(fig4)

    return figures

# 3. إنشاء وتنسيق ملف PDF
# Ensure this line is not indented
def save_to_pdf(figures, filename='التقرير_التحليلي.pdf'):
    """حفظ جميع الرسوم في ملف PDF مع إضافة معلومات"""
    with PdfPages(filename) as pdf:
        # صفحة الغلاف
        cover = plt.figure(figsize=(11, 8.5))
        cover.text(0.5, 0.7, 'التقرير التحليلي الشامل',
                   ha='center', va='center', fontsize=24, fontweight='bold')
        cover.text(0.5, 0.5, 'تحليل بيانات العملاء',
                   ha='center', va='center', fontsize=18)
        cover.text(0.5, 0.3, f'تاريخ الإنشاء: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                   ha='center', va='center', fontsize=12)
        pdf.savefig(cover)
        plt.close()

        # صفحة المحتويات
        contents = plt.figure(figsize=(11, 8.5))
        contents.text(0.1, 0.9, 'محتويات التقرير:', fontsize=16, fontweight='bold')
        contents.text(0.1, 0.8, '1. علاقة السن بالإنفاق', fontsize=12)
        contents.text(0.1, 0.75, '2. توزيع مستويات الدخل', fontsize=12)
        contents.text(0.1, 0.7, '3. أداء النموذج التنبؤي', fontsize=12)
        contents.text(0.1, 0.65, '4. مصفوفة الارتباط', fontsize=12)
        pdf.savefig(contents)
        plt.close()

        # حفظ جميع الرسوم
        for fig in figures:
            pdf.savefig(fig)
            plt.close(fig)

        # صفحة الخاتمة
        summary = plt.figure(figsize=(11, 8.5))
        summary.text(0.1, 0.9, 'الملخص التنفيذي:', fontsize=16, fontweight='bold')
        summary.text(0.1, 0.8, '- توجد علاقة إيجابية بين العمر ومستوى الإنفاق', fontsize=12)
        summary.text(0.1, 0.75, '- توزيع الدخل يتبع النمط الطبيعي', fontsize=12)
        # Ensure y and predictions are available from the create_all_plots function scope
        # A better approach might be to return the R2 score from create_all_plots or recalculate it here.
        # For now, assuming y and predictions are accessible globally or passed as arguments if needed.
        summary.text(0.1, 0.7, f'- النموذج التنبؤي حقق دقة R² = {r2_score(y, predictions):.2f}', fontsize=12)
        summary.text(0.1, 0.6, 'التوصيات:', fontsize=14, fontweight='bold')
        summary.text(0.1, 0.55, '- التركيز على الفئة العمرية 30-45 لزيادة المبيعات', fontsize=12)
        pdf.savefig(summary)
        plt.close()

# 4. التنفيذ الرئيسي
if __name__ == "__main__":
    # تكوين الإعدادات العربية
    plt.rcParams['font.family'] = 'Arial'
    plt.rcParams['axes.unicode_minus'] = False

    # إنشاء الرسوم
    # Pass data to the function
    all_figures = create_all_plots(data)

    # حفظ في PDF
    # You might need to pass y and predictions to save_to_pdf if you want to include
    # the R2 score in the summary page without relying on global variables.
    # For simplicity here, relying on global y and predictions.
    save_to_pdf(all_figures)

    print("تم إنشاء التقرير بنجاح في ملف 'التقرير_التحليلي.pdf'")

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score, mean_squared_error
import seaborn as sns

# 1. إنشاء بيانات نموذجية
np.random.seed(42)
data = pd.DataFrame({
    'السن': np.random.randint(18, 60, 100),
    'الدخل': np.random.normal(5000, 1500, 100),
    'الإنفاق': np.random.normal(3000, 800, 100),
    'التقييم': np.random.uniform(1, 5, 100)
})

# 2. تحضير الرسوم البيانية
def create_all_plots(data):
    """إنشاء جميع الرسوم البيانية وإرجاع القيم الحقيقية والتنبؤات"""
    figures = []

    # الرسم 1: علاقة السن بالإنفاق
    fig1 = plt.figure(figsize=(12, 8))
    sns.scatterplot(x='السن', y='الإنفاق', data=data, hue='التقييم', palette='viridis', s=100)
    plt.title('علاقة السن بمستوى الإنفاق', fontsize=16, fontweight='bold')
    plt.grid(True)
    figures.append(fig1)

    # الرسم 2: توزيع الدخل
    fig2 = plt.figure(figsize=(12, 8))
    sns.histplot(data['الدخل'], bins=15, kde=True, color='skyblue')
    plt.title('توزيع مستويات الدخل', fontsize=16)
    plt.xlabel('الدخل الشهري')
    plt.ylabel('التكرار')
    figures.append(fig2)

    # الرسم 3: نموذج تنبؤي
    # Split data within this scope to ensure y and predictions match the current data
    X = data[['السن', 'الدخل']]
    y_plot = data['الإنفاق'] # Renamed to avoid conflict with global y
    # No need to split into train/test for this specific plot,
    # as we are just showing predictions vs actuals for the whole dataset
    model = RandomForestRegressor(random_state=42).fit(X, y_plot) # Added random_state for reproducibility
    predictions_plot = model.predict(X) # Renamed to avoid conflict with global predictions

    fig3 = plt.figure(figsize=(12, 8))
    plt.scatter(y_plot, predictions_plot, alpha=0.6)
    plt.plot([y_plot.min(), y_plot.max()], [y_plot.min(), y_plot.max()], 'r--')
    plt.title('أداء النموذج التنبؤي', fontsize=16)
    plt.xlabel('القيم الحقيقية')
    plt.ylabel('التوقعات')
    # Use y_plot and predictions_plot for the R2 score calculation here
    plt.text(0.05, 0.9, f'R² = {r2_score(y_plot, predictions_plot):.2f}', transform=plt.gca().transAxes)
    plt.grid(True)
    figures.append(fig3)

    # الرسم 4: مصفوفة الارتباط
    fig4 = plt.figure(figsize=(12, 8))
    sns.heatmap(data.corr(), annot=True, cmap='coolwarm', center=0)
    plt.title('مصفوفة الارتباط بين المتغيرات', fontsize=16)
    figures.append(fig4)

    # Return the figures and the y_plot, predictions_plot for the summary page
    return figures, y_plot, predictions_plot

# 3. إنشاء وتنسيق ملف PDF
def save_to_pdf(figures, y_true, y_pred, filename='التقرير_التحليلي.pdf'):
    """حفظ جميع الرسوم في ملف PDF مع إضافة معلومات"""
    with PdfPages(filename) as pdf:
        # صفحة الغلاف
        cover = plt.figure(figsize=(11, 8.5))
        cover.text(0.5, 0.7, 'التقرير التحليلي الشامل',
                   ha='center', va='center', fontsize=24, fontweight='bold')
        cover.text(0.5, 0.5, 'تحليل بيانات العملاء',
                   ha='center', va='center', fontsize=18)
        cover.text(0.5, 0.3, f'تاريخ الإنشاء: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                   ha='center', va='center', fontsize=12)
        pdf.savefig(cover)
        plt.close()

        # صفحة المحتويات
        contents = plt.figure(figsize=(11, 8.5))
        contents.text(0.1, 0.9, 'محتويات التقرير:', fontsize=16, fontweight='bold')
        contents.text(0.1, 0.8, '1. علاقة السن بالإنفاق', fontsize=12)
        contents.text(0.1, 0.75, '2. توزيع مستويات الدخل', fontsize=12)
        contents.text(0.1, 0.7, '3. أداء النموذج التنبؤي', fontsize=12)
        contents.text(0.1, 0.65, '4. مصفوفة الارتباط', fontsize=12)
        pdf.savefig(contents)
        plt.close()

        # حفظ جميع الرسوم
        for fig in figures:
            pdf.savefig(fig)
            plt.close(fig)

        # صفحة الخاتمة
        summary = plt.figure(figsize=(11, 8.5))
        summary.text(0.1, 0.9, 'الملخص التنفيذي:', fontsize=16, fontweight='bold')
        summary.text(0.1, 0.8, '- توجد علاقة إيجابية بين العمر ومستوى الإنفاق', fontsize=12)
        summary.text(0.1, 0.75, '- توزيع الدخل يتبع النمط الطبيعي', fontsize=12)
        # Use the passed y_true and y_pred for the R2 score here
        summary.text(0.1, 0.7, f'- النموذج التنبؤي حقق دقة R² = {r2_score(y_true, y_pred):.2f}', fontsize=12)
        summary.text(0.1, 0.6, 'التوصيات:', fontsize=14, fontweight='bold')
        summary.text(0.1, 0.55, '- التركيز على الفئة العمرية 30-45 لزيادة المبيعات', fontsize=12)
        pdf.savefig(summary)
        plt.close()

# 4. التنفيذ الرئيسي
if __name__ == "__main__":
    # تكوين الإعدادات العربية
    plt.rcParams['font.family'] = 'Arial'
    plt.rcParams['axes.unicode_minus'] = False

    # إنشاء الرسوم وتحضير البيانات للتقرير
    all_figures, y_for_report, predictions_for_report = create_all_plots(data)

    # حفظ في PDF، وتمرير القيم الحقيقية والتنبؤات
    save_to_pdf(all_figures, y_for_report, predictions_for_report)

    print("تم إنشاء التقرير بنجاح في ملف 'التقرير_التحليلي.pdf'")

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.svm import SVR
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import r2_score, mean_squared_error
from sklearn.pipeline import make_pipeline
from tabulate import tabulate

# Sample Data Generation (Replace with your actual data)
np.random.seed(42)
data = pd.DataFrame({
    'Age': np.random.randint(18, 65, 200),
        'Income': np.random.normal(50000, 15000, 200),
            'Education_Years': np.random.randint(8, 20, 200),
                'Experience_Years': np.random.randint(0, 40, 200),
                    'House_Value': np.random.normal(300000, 100000, 200)
                    })
                    data.loc[np.random.choice(data.index, 10), 'Income'] = np.nan
                    data.loc[np.random.choice(data.index, 5), 'Education_Years'] = np.nan

                    # Preprocessing
                    imputer = SimpleImputer(strategy='median')
                    data_imputed = pd.DataFrame(imputer.fit_transform(data), columns=data.columns)

                    X = data_imputed.drop('House_Value', axis=1)
                    y = data_imputed['House_Value']
                    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

                    scaler = StandardScaler()
                    X_train_scaled = scaler.fit_transform(X_train)
                    X_test_scaled = scaler.transform(X_test)

                    # Model Training
                    models = {
                        'Linear Regression': LinearRegression(),
                            'Random Forest': RandomForestRegressor(random_state=42),
                                'Gradient Boosting': GradientBoostingRegressor(random_state=42),
                                    'SVR': SVR(),
                                        'KNN': KNeighborsRegressor()
                                        }

                                        results = []
                                        for name, model in models.items():
                                            pipe = make_pipeline(StandardScaler(), model)
                                                pipe.fit(X_train, y_train)
                                                    y_pred = pipe.predict(X_test)

                                                            results.append({
                                                                    'Model': name,
                                                                            'R² Score': r2_score(y_test, y_pred),
                                                                                    'MSE': mean_squared_error(y_test, y_pred),
                                                                                            'RMSE': np.sqrt(mean_squared_error(y_test, y_pred))
                                                                                                })

                                                                                                results_df = pd.DataFrame(results).sort_values('R² Score', ascending=False)

                                                                                                # Create PDF Report
                                                                                                with PdfPages('Machine_Learning_Project_Report.pdf') as pdf:
                                                                                                    # Page 1: Cover Page
                                                                                                        plt.figure(figsize=(11, 8.5))
                                                                                                            plt.text(0.5, 0.7, 'Machine Learning Project Report',
                                                                                                                         ha='center', va='center', fontsize=24, fontfamily='Times New Roman', fontweight='bold')
                                                                                                                             plt.text(0.5, 0.5, 'House Value Prediction Analysis',
                                                                                                                                          ha='center', va='center', fontsize=18, fontfamily='Times New Roman')
                                                                                                                                              plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                                                                                                                                                           ha='center', va='center', fontsize=12, fontfamily='Times New Roman')
                                                                                                                                                               plt.axis('off')
                                                                                                                                                                   pdf.savefig()
                                                                                                                                                                       plt.close()

                                                                                                                                                                           # Page 2: Basic Information
                                                                                                                                                                               plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                   plt.axis('off')

                                                                                                                                                                                           info_text = [
                                                                                                                                                                                                   "1. Dataset Name: House Value Prediction Dataset",
                                                                                                                                                                                                           "2. Data Source: Synthetic Database (Example)",
                                                                                                                                                                                                                   "3. Original Data Link: https://example.com/house_value_data",
                                                                                                                                                                                                                           "4. Data Description: This dataset contains information about individuals' demographics",
                                                                                                                                                                                                                                   "   and their corresponding house values. It includes features like age, income,",
                                                                                                                                                                                                                                           "   education years, and experience years.",
                                                                                                                                                                                                                                                   "5. Problem Type: Regression",
                                                                                                                                                                                                                                                           f"6. Number of Attributes: {X.shape[1]}",
                                                                                                                                                                                                                                                                   f"7. Number of Samples: {len(data)}",
                                                                                                                                                                                                                                                                           "8. Data Properties:",
                                                                                                                                                                                                                                                                                   "   - Contains numerical features only",
                                                                                                                                                                                                                                                                                           "   - Some missing values in Income and Education_Years",
                                                                                                                                                                                                                                                                                                   "   - Features have different scales",
                                                                                                                                                                                                                                                                                                           "9. Missing Data Handling:",
                                                                                                                                                                                                                                                                                                                   "   - Filled missing values with median of each column",
                                                                                                                                                                                                                                                                                                                           "10. Data Splitting:",
                                                                                                                                                                                                                                                                                                                                   "   - Train: 80%, Test: 20%",
                                                                                                                                                                                                                                                                                                                                           "11. Preprocessing:",
                                                                                                                                                                                                                                                                                                                                                   "   - Standardization (Z-score normalization)",
                                                                                                                                                                                                                                                                                                                                                           "   - Missing value imputation"
                                                                                                                                                                                                                                                                                                                                                               ]

                                                                                                                                                                                                                                                                                                                                                                       plt.text(0.1, 0.95, 'Project Overview', fontsize=18, fontfamily='Times New Roman', fontweight='bold')
                                                                                                                                                                                                                                                                                                                                                                           for i, line in enumerate(info_text):
                                                                                                                                                                                                                                                                                                                                                                                   plt.text(0.1, 0.85 - i*0.05, line, fontsize=12, fontfamily='Times New Roman')
                                                                                                                                                                                                                                                                                                                                                                                       pdf.savefig()
                                                                                                                                                                                                                                                                                                                                                                                           plt.close()

                                                                                                                                                                                                                                                                                                                                                                                               # Page 3: Data Visualization
                                                                                                                                                                                                                                                                                                                                                                                                   fig, axes = plt.subplots(2, 2, figsize=(12, 10))

                                                                                                                                                                                                                                                                                                                                                                                                           # Plot 1
                                                                                                                                                                                                                                                                                                                                                                                                               sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0])
                                                                                                                                                                                                                                                                                                                                                                                                                   axes[0, 0].set_title('House Value Distribution', fontfamily='Times New Roman')

                                                                                                                                                                                                                                                                                                                                                                                                                           # Plot 2
                                                                                                                                                                                                                                                                                                                                                                                                                               sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[0, 1])
                                                                                                                                                                                                                                                                                                                                                                                                                                   axes[0, 1].set_title('Income vs House Value', fontfamily='Times New Roman')

                                                                                                                                                                                                                                                                                                                                                                                                                                           # Plot 3
                                                                                                                                                                                                                                                                                                                                                                                                                                               sns.boxplot(data=data[['Age', 'Education_Years']], ax=axes[1, 0])
                                                                                                                                                                                                                                                                                                                                                                                                                                                   axes[1, 0].set_title('Age and Education Distribution', fontfamily='Times New Roman')

                                                                                                                                                                                                                                                                                                                                                                                                                                                           # Plot 4
                                                                                                                                                                                                                                                                                                                                                                                                                                                               sns.heatmap(data.corr(), annot=True, cmap='coolwarm', ax=axes[1, 1])
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   axes[1, 1].set_title('Feature Correlation Matrix', fontfamily='Times New Roman')

                                                                                                                                                                                                                                                                                                                                                                                                                                                                           plt.tight_layout()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               pdf.savefig()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   plt.close()

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       # Page 4: Model Results
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               plt.axis('off')

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       # Create table
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           table_text = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   plt.text(0.1, 0.9, 'Model Performance Comparison', fontsize=18,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                fontfamily='Times New Roman', fontweight='bold')
plt.text(0.1, 0.8, table_text, fontsize=10, fontfamily='Times New Roman')

est/Worst Model Analysis
analysis_text = [
est Performing Model: " + results_df.iloc[0]['Model'],
f"- R² Score: {results_df.iloc[0]['R² Score']:.3f}",
orst Performing Model: " + results_df.iloc[-1]['Model'],
f"- R² Score: {results_df.iloc[-1]['R² Score']:.3f}",
nalysis:",
ree-based models performed best due to non-linear relationships",
inear models performed worst due to non-linear feature interactions",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "- SVR performance depends heavily on proper hyperparameter tuning"


for i, line in enumerate(analysis_text):
plt.text(0.1, 0.5 - i*0.05, line, fontsize=12, fontfamily='Times New Roman')

pdf.savefig()
plt.close()

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    # Page 5: Model Visualization
fig = plt.figure(figsize=(12, 8))

ar plot of R² scores
sns.barplot(x='Model', y='R² Score', data=results_df, palette='viridis')
plt.title('Model Comparison by R² Score', fontfamily='Times New Roman')
plt.xticks(rotation=45)
plt.ylim(0, 1)

pdf.savefig()
plt.close()

age 6: Insights and Conclusion
plt.figure(figsize=(11, 8.5))
plt.axis('off')

insight_text = [
roject Insights and Conclusion:",

his dataset was selected because housing value prediction is a",
fundamental problem in real estate economics with significant",
practical applications. The best-performing model (Random Forest)",
achieved strong predictive accuracy by capturing complex",
non-linear relationships between demographic factors and",
property values. Key insights from the analysis include:",

ncome shows the strongest correlation with house value",
ducation years had unexpected weak correlation",
ge showed a non-linear relationship with house value",
xperience years had minimal predictive power",

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "The model could be valuable for:",
eal estate valuation tools",
ortgage risk assessment",
rban planning decisions",

uture improvements could include:",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "- Adding location-based features",
ncorporating economic indicators",
esting neural network approaches"


for i, line in enumerate(insight_text):
plt.text(0.1, 0.95 - i*0.04, line, fontsize=12, fontfamily='Times New Roman')

dd repository info at bottom
plt.text(0.1, 0.05,
ode Repository: https://github.com/yourusername/house_value_prediction\n"
ata Folder Structure:\n"
ata/original_data.csv\n"
ata/train_test_split/\n"
train.csv, X_test.csv\n"
y_train.csv, y_test.csv\n"
ata/Results/\n"
predictions_rf.csv\n"
predictions_lr.csv\n"

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       fontsize=10, fontfamily='Times New Roman')

pdf.savefig()
plt.close()

print("PDF report generated successfully: Machine_Learning_Project_Report.pdf")

try:
    gdown.download(url, output, quiet=False)
        AISG = pd.read_csv(output)  # <--- Extra indent
            print("Data loaded successfully!") # <--- Extra indent
            except Exception as e:
                print(f"Error occurred while loading data: {e}") # <--- Extra indent
                    # Use sample data as fallback
                        print("Using sample data instead...") # <--- Extra indent
                            data = { # <--- Extra indent
                                    'image_id': range(1, 101),
                                            'likes': np.random.randint(100, 10000, 100),
                                                    'shares': np.random.randint(10, 1000, 100),
                                                            'platform': np.random.choice(['Instagram', 'TikTok', 'Twitter'], 100)
                                                                }
                                                                    AISG = pd.DataFrame(data) # <--- Extra indent

try:
    gdown.download(url, output, quiet=False)
    AISG = pd.read_csv(output)
    print("Data loaded successfully!")
except Exception as e:
    print(f"Error occurred while loading data: {e}")
    # Use sample data as fallback
    print("Using sample data instead...")
    data = {
        'image_id': range(1, 101),
        'likes': np.random.randint(100, 10000, 100),
        'shares': np.random.randint(10, 1000, 100),
        'platform': np.random.choice(['Instagram', 'TikTok', 'Twitter'], 100)
    }
    AISG = pd.DataFrame(data)

# تحميل البيانات من Google Drive
file_id = '1hkebti9cgRECbze77SKfm8b_eGBJkTnL'
url = f'https://drive.google.com/uc?id={file_id}'
output = 'ai_ghibli_trend_dataset.csv'

try:
    gdown.download(url, output, quiet=False)
    AISG = pd.read_csv(output)
    print("تم تحميل البيانات بنجاح!")
except Exception as e:
    print(f"حدث خطأ أثناء تحميل البيانات: {e}")
    # يمكنك استخدام بيانات نموذجية كبديل في حالة الفشل
    print("جاري استخدام بيانات نموذجية...")
    data = {
        'image_id': range(1, 101),
        'likes': np.random.randint(100, 10000, 100),
        'shares': np.random.randint(10, 1000, 100),
        'platform': np.random.choice(['Instagram', 'TikTok', 'Twitter'], 100)
    }
    AISG = pd.DataFrame(data)

# استكشاف البيانات
print("\nعينة من البيانات:")
print(AISG.head(10))

print("\nمعلومات عن البيانات:")
AISG.info()

print("\nالإحصاءات الوصفية:")
print(AISG.describe())

# تنظيف البيانات ومعالجتها
# (هنا نضيف التحقق من وجود الأعمدة قبل المعالجة لتجنب الأخطاء)

# قائمة بالأعمدة المتوقعة
expected_columns = ['image_id', 'user_id', 'prompt', 'likes', 'shares', 'comments',
                  'platform', 'generation_time', 'gpu_usage', 'file_size_kb',
                  'resolution', 'style_accuracy_score', 'is_hand_edited',
                  'ethical_concerns_flag', 'creation_date', 'top_comment']

# التحقق من وجود الأعمدة الأساسية
if 'platform' not in AISG.columns:
    AISG['platform'] = 'Unknown'  # قيمة افتراضية إذا لم يكن العمود موجوداً

if 'likes' not in AISG.columns:
    AISG['likes'] = np.random.randint(100, 10000, len(AISG))  # قيم عشوائية إذا لم يكن العمود موجوداً

# 1. معالجة الأعمدة النصية
# إزالة المسافات الزائدة من عمود المنصة
AISG["platform"] = AISG["platform"].str.strip().str.replace(" ", "_")

# 2. معالجة عمود التاريخ (إذا كان موجوداً)
if 'creation_date' in AISG.columns:
    try:
        AISG['creation_date'] = pd.to_datetime(AISG['creation_date'])
        AISG['year'] = AISG['creation_date'].dt.year
        AISG['month'] = AISG['creation_date'].dt.month
        AISG['day'] = AISG['creation_date'].dt.day
        AISG['weekday'] = AISG['creation_date'].dt.weekday
    except:
        print("تعذر تحويل عمود التاريخ، سيتم تجاهله")
else:
    print("عمود التاريخ غير موجود في البيانات")

# 3. معالجة الأعمدة الفئوية
if 'is_hand_edited' in AISG.columns:
    # Convert to numeric, coercing errors to NaN
    AISG['is_hand_edited'] = AISG['is_hand_edited'].map({'Yes': 1, 'No': 0})
else:
    AISG['is_hand_edited'] = 0  # افتراضي: لم يتم التعديل يدوياً

if 'ethical_concerns_flag' in AISG.columns:
    # Convert to numeric, coercing errors to NaN
    AISG['ethical_concerns_flag'] = AISG['ethical_concerns_flag'].map({'Yes': 1, 'No': 0})
else:
    AISG['ethical_concerns_flag'] = 0  # افتراضي: لا توجد مشاكل أخلاقية

# ترميز دقة الصورة (إذا كان العمود موجوداً)
if 'resolution' in AISG.columns:
    resolution_map = {'512x512': 0, '1024x1024': 1, '2048x2048': 2}
    # Convert to numeric, coercing errors to NaN
    AISG['resolution'] = AISG['resolution'].map(resolution_map)
else:
    AISG['resolution'] = 0  # افتراضي: دقة 512x512

# ترميز المنصة
# Note: 'platform' will remain as a string column after this step.
# It should be handled separately or dropped before numerical imputation.
le = LabelEncoder()
AISG['platform_encoded'] = le.fit_transform(AISG['platform'])

# 4. حذف الأعمدة غير الضرورية (مع التحقق من وجودها أولاً)
columns_to_drop = []
for col in ['image_id', 'user_id', 'prompt', 'top_comment', 'creation_date', 'platform']: # Added 'platform' to drop list
    if col in AISG.columns:
        columns_to_drop.append(col)

AISG_cleaned = AISG.drop(columns_to_drop, axis=1)

# 5. معالجة القيم المفقودة
# Select only numeric columns for median imputation
numeric_cols = AISG_cleaned.select_dtypes(include=np.number).columns
AISG_cleaned_numeric = AISG_cleaned[numeric_cols]

imputer = SimpleImputer(strategy='median')

# Apply imputer only to the numeric subset
AISG_cleaned[numeric_cols] = imputer.fit_transform(AISG_cleaned_numeric)

# Re-add the fillna(0) after imputation for the specific columns, if needed
# Note: The imputer handles NaN values, so fillna(0) might not be needed
# for the columns where imputation was applied.
# If you still want to fill NaN after imputation for specific reasons,
# you can do it here, but be mindful that imputer already filled NaNs.
# AISG_cleaned['is_hand_edited'] = AISG_cleaned['is_hand_edited'].fillna(0)
# AISG_cleaned['ethical_concerns_flag'] = AISG_cleaned['ethical_concerns_flag'].fillna(0)
# AISG_cleaned['resolution'] = AISG_cleaned['resolution'].fillna(0)


# تحليل البيانات
print("\nتوزيع المنصات:")
# Use the original AISG DataFrame for platform distribution as 'platform' was dropped from AISG_cleaned
print(AISG['platform'].value_counts())

# تصور البيانات
plt.figure(figsize=(12, 6))
# Use the original AISG DataFrame for the boxplot as 'platform' was dropped from AISG_cleaned
sns.boxplot(x='platform', y='likes', data=AISG)
plt.title('توزيع الإعجابات حسب المنصة')
plt.xticks(rotation=45)
plt.show()

# بناء النموذج (مع التحقق من وجود أعمدة كافية)
# The check len(AISG_cleaned.columns) > 1 is still valid
if len(AISG_cleaned.columns) > 1:  # التأكد من وجود ميزات كافية
    # تقسيم البيانات
    # Ensure 'likes', 'shares', 'comments' are treated as numerical targets/features
    target_cols = ['likes', 'shares', 'comments']
    features_to_drop = [col for col in target_cols if col in AISG_cleaned.columns]

    X = AISG_cleaned.drop(features_to_drop, axis=1, errors='ignore')  # الميزات
    # Ensure 'likes' column exists and is numeric in AISG_cleaned
    if 'likes' in AISG_cleaned.columns and pd.api.types.is_numeric_dtype(AISG_cleaned['likes']):
        y = AISG_cleaned['likes']  # الهدف (التنبؤ بعدد الإعجابات)
    else:
        print("عمود 'likes' غير موجود أو ليس رقمياً في AISG_cleaned. لا يمكن بناء النموذج.")
        X = pd.DataFrame() # Empty X to skip model training
        y = pd.Series(dtype='float64') # Empty y to skip model training


    if not X.empty:
        # تقييس البيانات
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)

        # تقسيم البيانات إلى تدريب واختبار
        X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42)

        # تدريب نموذج الانحدار الخطي
        print("\nتدريب نموذج الانحدار الخطي...")
        lr_model = LinearRegression()
        lr_model.fit(X_train, y_train)
        y_pred_lr = lr_model.predict(X_test)

        # تقييم النموذج
        mse_lr = mean_squared_error(y_test, y_pred_lr)
        r2_lr = r2_score(y_test, y_pred_lr)
        print(f"الانحدار الخطي - MSE: {mse_lr:.2f}, R2: {r2_lr:.2f}")

        # تدريب نموذج Random Forest
        print("\nتدريب نموذج Random Forest...")
        rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
        rf_model.fit(X_train, y_train)
        y_pred_rf = rf_model.predict(X_test)

        # تقييم النموذج
        mse_rf = mean_squared_error(y_test, y_pred_rf)
        r2_rf = r2_score(y_test, y_pred_rf)
        print(f"Random Forest - MSE: {mse_rf:.2f}, R2: {r2_rf:.2f}")

        # مقارنة النماذج
        plt.figure(figsize=(10, 5))
        plt.scatter(y_test, y_pred_lr, alpha=0.5, label='الانحدار الخطي')
        plt.scatter(y_test, y_pred_rf, alpha=0.5, label='Random Forest')
        plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--')
        plt.xlabel('القيم الحقيقية')
        plt.ylabel('التنبؤات')
        plt.title('مقارنة أداء النماذج')
        plt.legend()
        plt.show()

        # تحليل أهمية الميزات في نموذج Random Forest
        feature_importances = pd.DataFrame({
                'Feature': X.columns,
                'Importance': rf_model.feature_importances_
            }).sort_values('Importance', ascending=False)

        plt.figure(figsize=(10, 6))
        sns.barplot(x='Importance', y='Feature', data=feature_importances)
        plt.title('أهمية الميزات في نموذج Random Forest')
        plt.show()
    else:
        print("لا توجد ميزات صالحة لبناء النموذج بعد معالجة البيانات.")

else:
    print("لا توجد ميزات كافية لبناء النموذج. تحقق من بياناتك.")

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
import seaborn as sns
import os
import shutil
import zipfile
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.svm import SVR
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import r2_score, mean_squared_error
from tabulate import tabulate

# ====================== DATA PREPARATION ======================
np.random.seed(42)
data = pd.DataFrame({
    'Age': np.random.randint(18, 65, 200),
        'Income': np.random.normal(50000, 15000, 200),
            'Education_Years': np.random.randint(8, 20, 200),
                'Experience_Years': np.random.randint(0, 40, 200),
                    'House_Value': np.random.normal(300000, 100000, 200)
                    })
                    data.loc[np.random.choice(data.index, 10), 'Income'] = np.nan
                    data.loc[np.random.choice(data.index, 5), 'Education_Years'] = np.nan

                    # ====================== PREPROCESSING ======================
                    imputer = SimpleImputer(strategy='median')
                    data_imputed = pd.DataFrame(imputer.fit_transform(data), columns=data.columns)

                    X = data_imputed.drop('House_Value', axis=1)
                    y = data_imputed['House_Value']
                    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

                    scaler = StandardScaler()
                    X_train_scaled = scaler.fit_transform(X_train)
                    X_test_scaled = scaler.transform(X_test)

                    # ====================== MODEL TRAINING ======================
                    models = {
                        'Linear Regression': LinearRegression(),
                            'Random Forest': RandomForestRegressor(random_state=42),
                                'Gradient Boosting': GradientBoostingRegressor(random_state=42),
                                    'SVR': SVR(),
                                        'KNN': KNeighborsRegressor()
                                        }

                                        results = []
                                        predictions = {}
                                        for name, model in models.items():
                                            pipe = make_pipeline(StandardScaler(), model)
                                                pipe.fit(X_train, y_train)
                                                    y_pred = pipe.predict(X_test)

                                                            results.append({
                                                                    'Model': name,
                                                                            'R² Score': r2_score(y_test, y_pred),
                                                                                    'MSE': mean_squared_error(y_test, y_pred),
                                                                                            'RMSE': np.sqrt(mean_squared_error(y_test, y_pred))
                                                                                                })
                                                                                                    predictions[name] = y_pred

                                                                                                    results_df = pd.DataFrame(results).sort_values('R² Score', ascending=False)

                                                                                                    # ====================== CREATE FOLDER STRUCTURE ======================
                                                                                                    def create_folder_structure():
                                                                                                        base_dir = 'House_Value_Prediction'
                                                                                                            data_dir = os.path.join(base_dir, 'Data')
                                                                                                                results_dir = os.path.join(data_dir, 'Results')

                                                                                                                        os.makedirs(base_dir, exist_ok=True)
                                                                                                                            os.makedirs(data_dir, exist_ok=True)
                                                                                                                                os.makedirs(results_dir, exist_ok=True)

                                                                                                                                        # Save original data
                                                                                                                                            data.to_csv(os.path.join(data_dir, 'original_data.csv'), index=False)

                                                                                                                                                    # Save train/test split
                                                                                                                                                        X_train.to_csv(os.path.join(data_dir, 'X_train.csv'), index=False)
                                                                                                                                                            X_test.to_csv(os.path.join(data_dir, 'X_test.csv'), index=False)
                                                                                                                                                                y_train.to_csv(os.path.join(data_dir, 'y_train.csv'), index=False)
                                                                                                                                                                    y_test.to_csv(os.path.join(data_dir, 'y_test.csv'), index=False)

                                                                                                                                                                            # Save predictions
                                                                                                                                                                                for model_name, preds in predictions.items():
                                                                                                                                                                                        pd.DataFrame({'predictions': preds}).to_csv(
                                                                                                                                                                                                    os.path.join(results_dir, f'predictions_{model_name.replace(" ", "_")}.csv'),
                                                                                                                                                                                                                index=False
                                                                                                                                                                                                                        )

                                                                                                                                                                                                                                return base_dir

                                                                                                                                                                                                                                project_dir = create_folder_structure()

                                                                                                                                                                                                                                # ====================== GENERATE PDF REPORT ======================
                                                                                                                                                                                                                                def generate_pdf_report():
                                                                                                                                                                                                                                    with PdfPages(os.path.join(project_dir, 'House_Value_Prediction_Report.pdf')) as pdf:
                                                                                                                                                                                                                                            # Configure style
                                                                                                                                                                                                                                                    plt.rcParams['font.family'] = 'Times New Roman'

                                                                                                                                                                                                                                                                    # Page 1: Cover Page
                                                                                                                                                                                                                                                                            plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                                    plt.text(0.5, 0.7, 'House Value Prediction Report',
                                                                                                                                                                                                                                                                                                     ha='center', va='center', fontsize=24, fontweight='bold')
                                                                                                                                                                                                                                                                                                             plt.text(0.5, 0.5, 'Machine Learning Project',
                                                                                                                                                                                                                                                                                                                              ha='center', va='center', fontsize=18)
                                                                                                                                                                                                                                                                                                                                      plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                                                                                                                                                                                                                                                                                                                                                       ha='center', va='center', fontsize=12)
                                                                                                                                                                                                                                                                                                                                                               plt.axis('off')
                                                                                                                                                                                                                                                                                                                                                                       pdf.savefig()
                                                                                                                                                                                                                                                                                                                                                                               plt.close()

                                                                                                                                                                                                                                                                                                                                                                                       # Page 2: Dataset Information
                                                                                                                                                                                                                                                                                                                                                                                               plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                                                                                                                                                       plt.axis('off')

                                                                                                                                                                                                                                                                                                                                                                                                                       info_text = [
                                                                                                                                                                                                                                                                                                                                                                                                                                   "Dataset Information:",
                                                                                                                                                                                                                                                                                                                                                                                                                                               "",
                                                                                                                                                                                                                                                                                                                                                                                                                                                           f"1. Dataset Name: {'House Value Prediction Dataset'}",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       f"2. Data Source: {'Synthetic Database (Example)'}",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   f"3. Original Data Link: {'https://example.com/house_value_data'}",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "4. Data Description:",
his dataset contains 200 samples with 4 features (Age, Income,",
ducation_Years, Experience_Years) and target variable House_Value.",
he data simulates demographic information and corresponding",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "   property values for machine learning analysis.",

f"5. Problem Type: {'Regression'}",
f"6. Number of Attributes: {X.shape[1]}",
f"7. Number of Samples: {len(data)}",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       "",
ata Statistics:",
f"   - Age: {data['Age'].min()} to {data['Age'].max()} years",
f"   - Income: ${data['Income'].mean():,.0f} ± ${data['Income'].std():,.0f}",
f"   - House Value: ${data['House_Value'].mean():,.0f} ± ${data['House_Value'].std():,.0f}",

issing Data:",
f"   - Found: {data.isna().sum().sum()} missing values",
andling: Filled with median values"


plt.text(0.1, 0.95, 'Dataset Overview', fontsize=18, fontweight='bold')
for i, line in enumerate(info_text):
plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
pdf.savefig()
plt.close()

age 3: Preprocessing and Visualization
fig, axes = plt.subplots(2, 2, figsize=(12, 10))

lot 1: Distribution
sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0])
axes[0, 0].set_title('House Value Distribution')

lot 2: Correlation
sns.heatmap(data.corr(), annot=True, cmap='coolwarm', ax=axes[0, 1])
axes[0, 1].set_title('Feature Correlation')

lot 3: Scatter
sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[1, 0])
axes[1, 0].set_title('Income vs House Value')

lot 4: Boxplot
sns.boxplot(data=data[['Age', 'Education_Years']], ax=axes[1, 1])
axes[1, 1].set_title('Age & Education Distribution')

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   plt.tight_layout()
pdf.savefig()
plt.close()

age 4: Preprocessing Details
plt.figure(figsize=(11, 8.5))
plt.axis('off')

prep_text = [
ata Preprocessing:",

issing Value Handling:",
dentified missing values in Income and Education_Years",
sed median imputation to preserve data distribution",

eature Scaling:",
pplied StandardScaler (Z-score normalization)",
mportant for distance-based algorithms (KNN, SVM)",

rain-Test Split:",
training data (160 samples)",
testing data (40 samples)",
andom state fixed for reproducibility",

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "4. Additional Processing:",
o categorical encoding needed (all numerical)",
o outlier removal (intentional for robustness)"


plt.text(0.1, 0.95, 'Preprocessing Pipeline', fontsize=18, fontweight='bold')
for i, line in enumerate(prep_text):
plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
pdf.savefig()
plt.close()

age 5: Model Results
plt.figure(figsize=(11, 8.5))
plt.axis('off')

reate formatted table
table = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

plt.text(0.1, 0.9, 'Model Performance Comparison', fontsize=18, fontweight='bold')
plt.text(0.1, 0.85, table, fontsize=10)

analysis_text = [
erformance Analysis:",

f"Best Model: {results_df.iloc[0]['Model']} (R² = {results_df.iloc[0]['R² Score']:.3f})",
f"Worst Model: {results_df.iloc[-1]['Model']} (R² = {results_df.iloc[-1]['R² Score']:.3f})",

ey Observations:",
ree-based models (Random Forest, Gradient Boosting) performed best",
inear models struggled with non-linear relationships",
requires careful hyperparameter tuning",
performance affected by high-dimensional data"


plt.text(0.1, 0.5, '\n'.join(analysis_text), fontsize=12)
pdf.savefig()
plt.close()

age 6: Model Visualization
plt.figure(figsize=(12, 8))
sns.barplot(x='Model', y='R² Score', data=results_df, palette='viridis')
plt.title('Model Performance (R² Score)', fontsize=16)
plt.xticks(rotation=45)
plt.ylim(0, 1)
plt.grid(axis='y')
pdf.savefig()
plt.close()

age 7: Insights and Conclusion
plt.figure(figsize=(11, 8.5))
plt.axis('off')

insight_text = [
roject Insights and Conclusion:",

his dataset was selected because housing value prediction is",
a critical task in real estate with significant economic impact.",
he best-performing model (Random Forest) achieved strong",
predictive accuracy by capturing complex non-linear patterns.",

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       "Key Insights:",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "1. Income showed strongest correlation with house value",
ducation years had weaker impact than expected",
ge demonstrated non-linear relationship with value",
xperience years contributed minimally to predictions",

ractical Applications:",
utomated property valuation tools",
ortgage risk assessment systems",
rban development planning",

uture Improvements:",
ncorporate geographical location data",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "- Add macroeconomic indicators",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "- Test deep learning approaches",

epository Information:",
f"Code: {os.path.abspath(project_dir)}/main.py",
f"Data: {os.path.abspath(os.path.join(project_dir, 'Data'))}",
f"Results: {os.path.abspath(os.path.join(project_dir, 'Data', 'Results'))}"


plt.text(0.1, 0.95, 'Final Insights', fontsize=20, fontweight='bold')
for i, line in enumerate(insight_text):
plt.text(0.1, 0.9 - i*0.035, line, fontsize=12)
pdf.savefig()
plt.close()

enerate the report
generate_pdf_report()


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       def upload_to_drive(folder_path, creds_file='credentials.json'):
try:
reate ZIP archive
zip_filename = f"{folder_path}.zip"
with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
for root, dirs, files in os.walk(folder_path):
for file in files:
file_path = os.path.join(root, file)
arcname = os.path.relpath(file_path, folder_path)
zipf.write(file_path, arcname=os.path.join(folder_path, arcname))

uthenticate with Google Drive
credentials = service_account.Credentials.from_service_account_file(
creds_file,
scopes=['https://www.googleapis.com/auth/drive']


service = build('drive', 'v3', credentials=credentials)

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   # Upload ZIP file
file_metadata = {
name': os.path.basename(zip_filename),
mimeType': 'application/zip'
}

media = MediaFileUpload(zip_filename, mimetype='application/zip')
file = service.files().create(
body=file_metadata,
media_body=media,
fields='id, webViewLink'
execute()

print(f"Successfully uploaded to Google Drive: {file.get('webViewLink')}")
return file.get('webViewLink')

except Exception as e:
print(f"Google Drive upload failed: {e}")
print(f"Please manually upload the folder from: {os.path.abspath(folder_path)}")
return None

pload to Google Drive (requires credentials.json)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       drive_link = upload_to_drive(project_dir)

print("\nProject Report Generation Complete!")
print(f"PDF Report: {os.path.join(os.path.abspath(project_dir), 'House_Value_Prediction_Report.pdf')}")
if drive_link:
print(f"Google Drive Link: {drive_link}")

from IPython import get_ipython
from IPython.display import display
# %%
# استيراد المكتبات المطلوبة
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn import metrics, svm
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.impute import SimpleImputer
import datetime
import gdown  # مكتبة لتحميل الملفات من Google Drive

# تحميل البيانات من Google Drive
file_id = '1hkebti9cgRECbze77SKfm8b_eGBJkTnL'
url = f'https://drive.google.com/uc?id={file_id}'
output = 'ai_ghibli_trend_dataset.csv'

try:
    gdown.download(url, output, quiet=False)
    AISG = pd.read_csv(output)
    print("تم تحميل البيانات بنجاح!")
except Exception as e:
    print(f"حدث خطأ أثناء تحميل البيانات: {e}")
    # يمكنك استخدام بيانات نموذجية كبديل في حالة الفشل
    print("جاري استخدام بيانات نموذجية...")
    data = {
        'image_id': range(1, 101),
        'likes': np.random.randint(100, 10000, 100),
        'shares': np.random.randint(10, 1000, 100),
        'platform': np.random.choice(['Instagram', 'TikTok', 'Twitter'], 100)
    }
    AISG = pd.DataFrame(data)

# استكشاف البيانات
print("\nعينة من البيانات:")
print(AISG.head(10))

print("\nمعلومات عن البيانات:")
AISG.info()

print("\nالإحصاءات الوصفية:")
print(AISG.describe())

# تنظيف البيانات ومعالجتها
# (هنا نضيف التحقق من وجود الأعمدة قبل المعالجة لتجنب الأخطاء)

# قائمة بالأعمدة المتوقعة
expected_columns = ['image_id', 'user_id', 'prompt', 'likes', 'shares', 'comments',
                  'platform', 'generation_time', 'gpu_usage', 'file_size_kb',
                  'resolution', 'style_accuracy_score', 'is_hand_edited',
                  'ethical_concerns_flag', 'creation_date', 'top_comment']

# التحقق من وجود الأعمدة الأساسية
if 'platform' not in AISG.columns:
    AISG['platform'] = 'Unknown'  # قيمة افتراضية إذا لم يكن العمود موجوداً

if 'likes' not in AISG.columns:
    AISG['likes'] = np.random.randint(100, 10000, len(AISG))  # قيم عشوائية إذا لم يكن العمود موجوداً

# 1. معالجة الأعمدة النصية
# إزالة المسافات الزائدة من عمود المنصة
AISG["platform"] = AISG["platform"].str.strip().str.replace(" ", "_")

# 2. معالجة عمود التاريخ (إذا كان موجوداً)
if 'creation_date' in AISG.columns:
    try:
        AISG['creation_date'] = pd.to_datetime(AISG['creation_date'])
        AISG['year'] = AISG['creation_date'].dt.year
        AISG['month'] = AISG['creation_date'].dt.month
        AISG['day'] = AISG['creation_date'].dt.day
        AISG['weekday'] = AISG['creation_date'].dt.weekday
    except:
        print("تعذر تحويل عمود التاريخ، سيتم تجاهله")
else:
    print("عمود التاريخ غير موجود في البيانات")

# 3. معالجة الأعمدة الفئوية
if 'is_hand_edited' in AISG.columns:
    # Convert to numeric, coercing errors to NaN
    AISG['is_hand_edited'] = AISG['is_hand_edited'].map({'Yes': 1, 'No': 0})
else:
    AISG['is_hand_edited'] = 0  # افتراضي: لم يتم التعديل يدوياً

if 'ethical_concerns_flag' in AISG.columns:
    # Convert to numeric, coercing errors to NaN
    AISG['ethical_concerns_flag'] = AISG['ethical_concerns_flag'].map({'Yes': 1, 'No': 0})
else:
    AISG['ethical_concerns_flag'] = 0  # افتراضي: لا توجد مشاكل أخلاقية

# ترميز دقة الصورة (إذا كان العمود موجوداً)
if 'resolution' in AISG.columns:
    resolution_map = {'512x512': 0, '1024x1024': 1, '2048x2048': 2}
    # Convert to numeric, coercing errors to NaN
    AISG['resolution'] = AISG['resolution'].map(resolution_map)
else:
    AISG['resolution'] = 0  # افتراضي: دقة 512x512

# ترميز المنصة
# Note: 'platform' will remain as a string column after this step.
# It should be handled separately or dropped before numerical imputation.
le = LabelEncoder()
AISG['platform_encoded'] = le.fit_transform(AISG['platform'])

# 4. حذف الأعمدة غير الضرورية (مع التحقق من وجودها أولاً)
columns_to_drop = []
for col in ['image_id', 'user_id', 'prompt', 'top_comment', 'creation_date', 'platform']: # Added 'platform' to drop list
    if col in AISG.columns:
        columns_to_drop.append(col)

AISG_cleaned = AISG.drop(columns_to_drop, axis=1)

# 5. معالجة القيم المفقودة
# Select only numeric columns for median imputation
numeric_cols = AISG_cleaned.select_dtypes(include=np.number).columns
AISG_cleaned_numeric = AISG_cleaned[numeric_cols]

imputer = SimpleImputer(strategy='median')

# Apply imputer only to the numeric subset
AISG_cleaned[numeric_cols] = imputer.fit_transform(AISG_cleaned_numeric)

# Re-add the fillna(0) after imputation for the specific columns, if needed
# Note: The imputer handles NaN values, so fillna(0) might not be needed
# for the columns where imputation was applied.
# If you still want to fill NaN after imputation for specific reasons,
# you can do it here, but be mindful that imputer already filled NaNs.
# AISG_cleaned['is_hand_edited'] = AISG_cleaned['is_hand_edited'].fillna(0)
# AISG_cleaned['ethical_concerns_flag'] = AISG_cleaned['ethical_concerns_flag'].fillna(0)
# AISG_cleaned['resolution'] = AISG_cleaned['resolution'].fillna(0)


# تحليل البيانات
print("\nتوزيع المنصات:")
# Use the original AISG DataFrame for platform distribution as 'platform' was dropped from AISG_cleaned
print(AISG['platform'].value_counts())

# تصور البيانات
plt.figure(figsize=(12, 6))
# Use the original AISG DataFrame for the boxplot as 'platform' was dropped from AISG_cleaned
sns.boxplot(x='platform', y='likes', data=AISG)
plt.title('توزيع الإعجابات حسب المنصة')
plt.xticks(rotation=45)
plt.show()

# بناء النموذج (مع التحقق من وجود أعمدة كافية)
# The check len(AISG_cleaned.columns) > 1 is still valid
if len(AISG_cleaned.columns) > 1:  # التأكد من وجود ميزات كافية
    # تقسيم البيانات
    # Ensure 'likes', 'shares', 'comments' are treated as numerical targets/features
    target_cols = ['likes', 'shares', 'comments']
    features_to_drop = [col for col in target_cols if col in AISG_cleaned.columns]

    X = AISG_cleaned.drop(features_to_drop, axis=1, errors='ignore')  # الميزات
    # Ensure 'likes' column exists and is numeric in AISG_cleaned
    if 'likes' in AISG_cleaned.columns and pd.api.types.is_numeric_dtype(AISG_cleaned['likes']):
        y = AISG_cleaned['likes']  # الهدف (التنبؤ بعدد الإعجابات)
    else:
        print("عمود 'likes' غير موجود أو ليس رقمياً في AISG_cleaned. لا يمكن بناء النموذج.")
        X = pd.DataFrame() # Empty X to skip model training
        y = pd.Series(dtype='float64') # Empty y to skip model training


    if not X.empty:
        # تقييس البيانات
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)

        # تقسيم البيانات إلى تدريب واختبار
        X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42)

        # تدريب نموذج الانحدار الخطي
        print("\nتدريب نموذج الانحدار الخطي...")
        lr_model = LinearRegression()
        lr_model.fit(X_train, y_train)
        y_pred_lr = lr_model.predict(X_test)

        # تقييم النموذج
        mse_lr = mean_squared_error(y_test, y_pred_lr)
        r2_lr = r2_score(y_test, y_pred_lr)
        print(f"الانحدار الخطي - MSE: {mse_lr:.2f}, R2: {r2_lr:.2f}")

        # تدريب نموذج Random Forest
        print("\nتدريب نموذج Random Forest...")
        rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
        rf_model.fit(X_train, y_train)
        y_pred_rf = rf_model.predict(X_test)

        # تقييم النموذج
        mse_rf = mean_squared_error(y_test, y_pred_rf)
        r2_rf = r2_score(y_test, y_pred_rf)
        print(f"Random Forest - MSE: {mse_rf:.2f}, R2: {r2_rf:.2f}")

        # مقارنة النماذج
        plt.figure(figsize=(10, 5))
        plt.scatter(y_test, y_pred_lr, alpha=0.5, label='الانحدار الخطي')
        plt.scatter(y_test, y_pred_rf, alpha=0.5, label='Random Forest')
        plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--')
        plt.xlabel('القيم الحقيقية')
        plt.ylabel('التنبؤات')
        plt.title('مقارنة أداء النماذج')
        plt.legend()
        plt.show()

        # تحليل أهمية الميزات في نموذج Random Forest
        feature_importances = pd.DataFrame({
                'Feature': X.columns,
                'Importance': rf_model.feature_importances_
            }).sort_values('Importance', ascending=False)

        plt.figure(figsize=(10, 6))
        sns.barplot(x='Importance', y='Feature', data=feature_importances)
        plt.title('أهمية الميزات في نموذج Random Forest')
        plt.show()
    else:
        print("لا توجد ميزات صالحة لبناء النموذج بعد معالجة البيانات.")

else:
    print("لا توجد ميزات كافية لبناء النموذج. تحقق من بياناتك.")
# %%
# Import Required Libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn import metrics, svm
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.impute import SimpleImputer
import datetime
import gdown  # Library for downloading files from Google Drive

# Load Data from Google Drive
file_id = '1hkebti9cgRECbze77SKfm8b_eGBJkTnL'
url = f'https://drive.google.com/uc?id={file_id}'
output = 'ai_ghibli_trend_dataset.csv'

try:
    gdown.download(url, output, quiet=False)
    AISG = pd.read_csv(output)
    print("Data loaded successfully!")
except Exception as e:
    print(f"Error occurred while loading data: {e}")
    # Use sample data as fallback
    print("Using sample data instead...")
    data = {
        'image_id': range(1, 101),
        'likes': np.random.randint(100, 10000, 100),
        'shares': np.random.randint(10, 1000, 100),
        'platform': np.random.choice(['Instagram', 'TikTok', 'Twitter'], 100)
    }
    AISG = pd.DataFrame(data)

# Data Exploration
print("\nData sample:")
print(AISG.head(10))

print("\nData information:")
AISG.info()

print("\nDescriptive statistics:")
print(AISG.describe())

# Data Cleaning and Processing
# (Added column existence checks before processing to avoid errors)

# List of expected columns
expected_columns = ['image_id', 'user_id', 'prompt', 'likes', 'shares', 'comments',
                  'platform', 'generation_time', 'gpu_usage', 'file_size_kb',
                  'resolution', 'style_accuracy_score', 'is_hand_edited',
                  'ethical_concerns_flag', 'creation_date', 'top_comment']

# Check for essential columns
if 'platform' not in AISG.columns:
    AISG['platform'] = 'Unknown'  # Default value if column doesn't exist

if 'likes' not in AISG.columns:
    AISG['likes'] = np.random.randint(100, 10000, len(AISG))  # Random values if column doesn't exist

# 1. Text Column Processing
# Remove extra spaces from platform column
AISG["platform"] = AISG["platform"].str.strip().str.replace(" ", "_")

# 2. Date Column Processing (if exists)
if 'creation_date' in AISG.columns:
    try:
        AISG['creation_date'] = pd.to_datetime(AISG['creation_date'])
        AISG['year'] = AISG['creation_date'].dt.year
        AISG['month'] = AISG['creation_date'].dt.month
        AISG['day'] = AISG['creation_date'].dt.day
        AISG['weekday'] = AISG['creation_date'].dt.weekday
    except:
        print("Failed to convert date column, it will be ignored")
else:
    print("Date column not found in data")

# 3. Categorical Column Processing
if 'is_hand_edited' in AISG.columns:
    AISG['is_hand_edited'] = AISG['is_hand_edited'].map({'Yes': 1, 'No': 0})
else:
    AISG['is_hand_edited'] = 0  # Default: Not hand-edited

if 'ethical_concerns_flag' in AISG.columns:
    AISG['ethical_concerns_flag'] = AISG['ethical_concerns_flag'].map({'Yes': 1, 'No': 0})
else:
    AISG['ethical_concerns_flag'] = 0  # Default: No ethical concerns

# Encode image resolution (if column exists)
if 'resolution' in AISG.columns:
    resolution_map = {'512x512': 0, '1024x1024': 1, '2048x2048': 2}
    AISG['resolution'] = AISG['resolution'].map(resolution_map)
else:
    AISG['resolution'] = 0  # Default: 512x512 resolution

# Platform encoding
le = LabelEncoder()
AISG['platform_encoded'] = le.fit_transform(AISG['platform'])

# 4. Remove unnecessary columns (with existence check first)
columns_to_drop = []
for col in ['image_id', 'user_id', 'prompt', 'top_comment', 'creation_date', 'platform']:
    if col in AISG.columns:
        columns_to_drop.append(col)

AISG_cleaned = AISG.drop(columns_to_drop, axis=1)

# 5. Handle Missing Values
# Select only numeric columns for median imputation
numeric_cols = AISG_cleaned.select_dtypes(include=np.number).columns
AISG_cleaned_numeric = AISG_cleaned[numeric_cols]

imputer = SimpleImputer(strategy='median')
AISG_cleaned[numeric_cols] = imputer.fit_transform(AISG_cleaned_numeric)

# Data Analysis
print("\nPlatform distribution:")
print(AISG['platform'].value_counts())

# Data Visualization
plt.figure(figsize=(12, 6))
sns.boxplot(x='platform', y='likes', data=AISG)
plt.title('Likes Distribution by Platform')
plt.xticks(rotation=45)
plt.show()

# Model Building
if len(AISG_cleaned.columns) > 1:  # Ensure there are enough features
    # Split data
    target_cols = ['likes', 'shares', 'comments']
    features_to_drop = [col for col in target_cols if col in AISG_cleaned.columns]

    X = AISG_cleaned.drop(features_to_drop, axis=1, errors='ignore')  # Features
    if 'likes' in AISG_cleaned.columns and pd.api.types.is_numeric_dtype(AISG_cleaned['likes']):
        y = AISG_cleaned['likes']  # Target (predicting number of likes)
    else:
        print("Column 'likes' not found or not numeric in AISG_cleaned. Cannot build model.")
        X = pd.DataFrame()
        y = pd.Series(dtype='float64')

    if not X.empty:
        # Scale data
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)

        # Split into train and test sets
        X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42)

        # Train Linear Regression model
        print("\nTraining Linear Regression model...")
        lr_model = LinearRegression()
        lr_model.fit(X_train, y_train)
        y_pred_lr = lr_model.predict(X_test)

        # Evaluate model
        mse_lr = mean_squared_error(y_test, y_pred_lr)
        r2_lr = r2_score(y_test, y_pred_lr)
        print(f"Linear Regression - MSE: {mse_lr:.2f}, R2: {r2_lr:.2f}")

        # Train Random Forest model
        print("\nTraining Random Forest model...")
        rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
        rf_model.fit(X_train, y_train)
        y_pred_rf = rf_model.predict(X_test)

        # Evaluate model
        mse_rf = mean_squared_error(y_test, y_pred_rf)
        r2_rf = r2_score(y_test, y_pred_rf)
        print(f"Random Forest - MSE: {mse_rf:.2f}, R2: {r2_rf:.2f}")

        # Compare models
        plt.figure(figsize=(10, 5))
        plt.scatter(y_test, y_pred_lr, alpha=0.5, label='الانحدار الخطي')
        plt.scatter(y_test, y_pred_rf, alpha=0.5, label='Random Forest')
        plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--')
        plt.xlabel('القيم الحقيقية')
        plt.ylabel('التنبؤات')
        plt.title('مقارنة أداء النماذج')
        plt.legend()
        plt.show()

        # Analyze feature importance in Random Forest model
        feature_importances = pd.DataFrame({
                'Feature': X.columns,
                'Importance': rf_model.feature_importances_
            }).sort_values('Importance', ascending=False)

        plt.figure(figsize=(10, 6))
        sns.barplot(x='Importance', y='Feature', data=feature_importances)
        plt.title('أهمية الميزات في نموذج Random Forest')
        plt.show()
    else:
        print("لا توجد ميزات صالحة لبناء النموذج بعد معالجة البيانات.")

else:
    print("لا توجد ميزات كافية لبناء النموذج. تحقق من بياناتك.")

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.svm import SVR
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import r2_score, mean_squared_error
from tabulate import tabulate

# 1. إعداد البيانات النموذجية
np.random.seed(42)
data = pd.DataFrame({
    'العمر': np.random.randint(18, 65, 200),
        'الدخل': np.random.normal(50000, 15000, 200),
            'سنوات_التعليم': np.random.randint(8, 20, 200),
                'سنوات_الخبرة': np.random.randint(0, 40, 200),
                    'قيمة_المنزل': np.random.normal(300000, 100000, 200)
                    })
                    data.loc[np.random.choice(data.index, 10), 'الدخل'] = np.nan
                    data.loc[np.random.choice(data.index, 5), 'سنوات_التعليم'] = np.nan

                    # 2. المعالجة المسبقة
                    imputer = SimpleImputer(strategy='median')
                    data_imputed = pd.DataFrame(imputer.fit_transform(data), columns=data.columns)

                    X = data_imputed.drop('قيمة_المنزل', axis=1)
                    y = data_imputed['قيمة_المنزل']
                    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

                    scaler = StandardScaler()
                    X_train_scaled = scaler.fit_transform(X_train)
                    X_test_scaled = scaler.transform(X_test)

                    # 3. تدريب النماذج
                    models = {
                        'الانحدار الخطي': LinearRegression(),
                            'الغابة العشوائية': RandomForestRegressor(random_state=42),
                                'التعزيز الانحداري': GradientBoostingRegressor(random_state=42),
                                    'SVR': SVR(),
                                        'KNN': KNeighborsRegressor()
                                        }

                                        results = []
                                        for name, model in models.items():
                                            model.fit(X_train_scaled, y_train)
                                                y_pred = model.predict(X_test_scaled)

                                                        results.append({
                                                                'النموذج': name,
                                                                        'R²': r2_score(y_test, y_pred),
                                                                                'MSE': mean_squared_error(y_test, y_pred),
                                                                                        'RMSE': np.sqrt(mean_squared_error(y_test, y_pred))
                                                                                            })

                                                                                            results_df = pd.DataFrame(results).sort_values('R²', ascending=False)

                                                                                            # 4. إنشاء ملف PDF
                                                                                            with PdfPages('تقرير_تحليل_قيمة_المنازل.pdf') as pdf:
                                                                                                # إعداد الخط للعربية
                                                                                                    plt.rcParams['font.family'] = 'Arial'
                                                                                                        plt.rcParams['axes.unicode_minus'] = False

                                                                                                                # الصفحة 1: الغلاف
                                                                                                                    plt.figure(figsize=(11, 8.5))
                                                                                                                        plt.text(0.5, 0.7, 'تقرير تحليل قيمة المنازل',
                                                                                                                                     ha='center', va='center', fontsize=24, fontweight='bold')
                                                                                                                                         plt.text(0.5, 0.5, 'مشروع تعلم الآلة',
                                                                                                                                                      ha='center', va='center', fontsize=18)
                                                                                                                                                          plt.text(0.5, 0.3, f'تاريخ الإنشاء: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                                                                                                                                                                       ha='center', va='center', fontsize=12)
                                                                                                                                                                           plt.axis('off')
                                                                                                                                                                               pdf.savefig()
                                                                                                                                                                                   plt.close()

                                                                                                                                                                                           # الصفحة 2: معلومات البيانات
                                                                                                                                                                                               plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                   plt.axis('off')

                                                                                                                                                                                                           info_text = [
                                                                                                                                                                                                                   "معلومات البيانات:",
                                                                                                                                                                                                                           "",
                                                                                                                                                                                                                                   f"1. اسم البيانات: بيانات قيمة المنازل",
                                                                                                                                                                                                                                           f"2. مصدر البيانات: قاعدة بيانات اصطناعية (للأغراض التعليمية)",
                                                                                                                                                                                                                                                   f"3. رابط البيانات: https://example.com/house_data",
                                                                                                                                                                                                                                                           "",
                                                                                                                                                                                                                                                                   "4. وصف البيانات:",
                                                                                                                                                                                                                                                                           "   تحتوي هذه البيانات على معلومات ديموغرافية للأفراد",
                                                                                                                                                                                                                                                                                   "   والقيمة المقابلة لمنازلهم. تتضمن الميزات التالية:",
                                                                                                                                                                                                                                                                                           "   - العمر",
                                                                                                                                                                                                                                                                                                   "   - الدخل السنوي",
                                                                                                                                                                                                                                                                                                           "   - سنوات التعليم",
                                                                                                                                                                                                                                                                                                                   "   - سنوات الخبرة العملية",
                                                                                                                                                                                                                                                                                                                           "",
                                                                                                                                                                                                                                                                                                                                   f"5. نوع المشكلة: انحدار",
                                                                                                                                                                                                                                                                                                                                           f"6. عدد الميزات: {X.shape[1]}",
                                                                                                                                                                                                                                                                                                                                                   f"7. عدد العينات: {len(data)}"
                                                                                                                                                                                                                                                                                                                                                       ]

                                                                                                                                                                                                                                                                                                                                                               plt.text(0.1, 0.95, 'معلومات أساسية', fontsize=18, fontweight='bold')
                                                                                                                                                                                                                                                                                                                                                                   for i, line in enumerate(info_text):
                                                                                                                                                                                                                                                                                                                                                                           plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
                                                                                                                                                                                                                                                                                                                                                                               pdf.savefig()
                                                                                                                                                                                                                                                                                                                                                                                   plt.close()

                                                                                                                                                                                                                                                                                                                                                                                           # الصفحة 3: إحصائيات البيانات
                                                                                                                                                                                                                                                                                                                                                                                               plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                                                                                                                                                   plt.axis('off')

                                                                                                                                                                                                                                                                                                                                                                                                           stats_text = [
                                                                                                                                                                                                                                                                                                                                                                                                                   "إحصائيات البيانات:",
                                                                                                                                                                                                                                                                                                                                                                                                                           "",
                                                                                                                                                                                                                                                                                                                                                                                                                                   f"1. العمر: من {data['العمر'].min()} إلى {data['العمر'].max()} سنة",
                                                                                                                                                                                                                                                                                                                                                                                                                                           f"2. الدخل: متوسط {data['الدخل'].mean():,.0f} ± {data['الدخل'].std():,.0f}",
                                                                                                                                                                                                                                                                                                                                                                                                                                                   f"3. قيمة المنزل: متوسط {data['قيمة_المنزل'].mean():,.0f} ± {data['قيمة_المنزل'].std():,.0f}",
                                                                                                                                                                                                                                                                                                                                                                                                                                                           "",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "4. البيانات المفقودة:",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                           f"   - العدد الإجمالي: {data.isna().sum().sum()}",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "   - التعامل معها: تم تعويض القيم المفقودة باستخدام الوسيط",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "5. تقسيم البيانات:",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "   - بيانات التدريب: 80%",
بيانات الاختبار: 20%",

المعالجة المسبقة:",
تطبيع البيانات (StandardScaler)",
معالجة القيم المتطرفة"


plt.text(0.1, 0.95, 'التحليل الإحصائي', fontsize=18, fontweight='bold')
for i, line in enumerate(stats_text):
plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
pdf.savefig()
plt.close()

الصفحة 4: الرسوم البيانية
fig, axes = plt.subplots(2, 2, figsize=(12, 10))

sns.histplot(data['قيمة_المنزل'], kde=True, ax=axes[0, 0])
axes[0, 0].set_title('توزيع قيم المنازل')

sns.scatterplot(x='الدخل', y='قيمة_المنزل', data=data, ax=axes[0, 1])
axes[0, 1].set_title('العلاقة بين الدخل وقيمة المنزل')

sns.boxplot(data=data[['العمر', 'سنوات_التعليم']], ax=axes[1, 0])
axes[1, 0].set_title('توزيع العمر وسنوات التعليم')

sns.heatmap(data.corr(), annot=True, cmap='coolwarm', ax=axes[1, 1])
axes[1, 1].set_title('مصفوفة الارتباط')

plt.tight_layout()
pdf.savefig()
plt.close()

الصفحة 5: نتائج النماذج
plt.figure(figsize=(11, 8.5))
plt.axis('off')

إنشاء جدول النتائج
table = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

plt.text(0.1, 0.9, 'أداء النماذج', fontsize=18, fontweight='bold')
plt.text(0.1, 0.85, table, fontsize=10)

analysis_text = [
تحليل الأداء:",

f"أفضل نموذج: {results_df.iloc[0]['النموذج']} (R² = {results_df.iloc[0]['R²']:.3f})",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               f"أسوأ نموذج: {results_df.iloc[-1]['النموذج']} (R² = {results_df.iloc[-1]['R²']:.3f})",

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "ملاحظات:",
النماذج الشجرية (الغابة العشوائية، التعزيز الانحداري) حققت أفضل أداء",
النماذج الخطية كانت الأضعف بسبب العلاقات غير الخطية",
نماذج KNN وSVR تحتاج لضبط المعاملات بدقة"


plt.text(0.1, 0.5, '\n'.join(analysis_text), fontsize=12)
pdf.savefig()
plt.close()

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   # الصفحة 6: الرسم البياني للأداء
plt.figure(figsize=(12, 8))
sns.barplot(x='النموذج', y='R²', data=results_df, palette='viridis')
plt.title('مقارنة أداء النماذج (R²)')
plt.xticks(rotation=45)
plt.ylim(0, 1)
pdf.savefig()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               plt.close()

الصفحة 7: الخاتمة والرؤى
plt.figure(figsize=(11, 8.5))
plt.axis('off')

insight_text = [
الرؤى والاستنتاجات:",

تم اختيار هذه البيانات لأهمية التنبؤ بقيمة المنازل في",
القطاع العقاري والاقتصادي. النموذج الأفضل أداءً (الغابة العشوائية)",
يقدم دقة عالية في التنبؤ يمكن استخدامها في:",

تقدير قيمة العقارات آلياً",
تقييم مخاطر القروض العقارية",
التخطيط الحضري والتنموي",

الرؤى المستخلصة:",
الدخل هو العامل الأكثر تأثيراً في قيمة المنزل",
سنوات التعليم أثرت أقل من المتوقع",
العمر أظهر علاقة غير خطية مع القيمة",

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       "مقترحات للتطوير:",
إضافة بيانات الموقع الجغرافي",
تضمين مؤشرات اقتصادية كليّة",
اختبار نماذج التعلم العميق"


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           plt.text(0.1, 0.95, 'الخاتمة', fontsize=20, fontweight='bold')
for i, line in enumerate(insight_text):
plt.text(0.1, 0.9 - i*0.035, line, fontsize=12)
pdf.savefig()
plt.close()

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               print("تم إنشاء التقرير بنجاح في ملف 'تقرير_تحليل_قيمة_المنازل.pdf'")

# Import Required Libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn import metrics, svm
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.impute import SimpleImputer
import datetime
import gdown  # Library for downloading files from Google Drive

# Load Data from Google Drive
file_id = '1hkebti9cgRECbze77SKfm8b_eGBJkTnL'
url = f'https://drive.google.com/uc?id={file_id}'
output = 'ai_ghibli_trend_dataset.csv'

try:
    gdown.download(url, output, quiet=False)
    AISG = pd.read_csv(output)
    print("Data loaded successfully!")
except Exception as e:
    print(f"Error occurred while loading data: {e}")
    # Use sample data as fallback
    print("Using sample data instead...")
    data = {
        'image_id': range(1, 101),
        'likes': np.random.randint(100, 10000, 100),
        'shares': np.random.randint(10, 1000, 100),
        'platform': np.random.choice(['Instagram', 'TikTok', 'Twitter'], 100)
    }
    AISG = pd.DataFrame(data)

# Data Exploration
print("\nData sample:")
print(AISG.head(10))

print("\nData information:")
AISG.info()

print("\nDescriptive statistics:")
print(AISG.describe())

# Data Cleaning and Processing
# (Added column existence checks before processing to avoid errors)

# List of expected columns
expected_columns = ['image_id', 'user_id', 'prompt', 'likes', 'shares', 'comments',
                  'platform', 'generation_time', 'gpu_usage', 'file_size_kb',
                  'resolution', 'style_accuracy_score', 'is_hand_edited',
                  'ethical_concerns_flag', 'creation_date', 'top_comment']

# Check for essential columns
if 'platform' not in AISG.columns:
    AISG['platform'] = 'Unknown'  # Default value if column doesn't exist

if 'likes' not in AISG.columns:
    AISG['likes'] = np.random.randint(100, 10000, len(AISG))  # Random values if column doesn't exist

# 1. Text Column Processing
# Remove extra spaces from platform column
AISG["platform"] = AISG["platform"].str.strip().str.replace(" ", "_")

# 2. Date Column Processing (if exists)
if 'creation_date' in AISG.columns:
    try:
        AISG['creation_date'] = pd.to_datetime(AISG['creation_date'])
        AISG['year'] = AISG['creation_date'].dt.year
        AISG['month'] = AISG['creation_date'].dt.month
        AISG['day'] = AISG['creation_date'].dt.day
        AISG['weekday'] = AISG['creation_date'].dt.weekday
    except:
        print("Failed to convert date column, it will be ignored")
else:
    print("Date column not found in data")

# 3. Categorical Column Processing
if 'is_hand_edited' in AISG.columns:
    # Convert to numeric, coercing errors to NaN
    AISG['is_hand_edited'] = AISG['is_hand_edited'].map({'Yes': 1, 'No': 0})
else:
    AISG['is_hand_edited'] = 0  # Default: Not hand-edited

if 'ethical_concerns_flag' in AISG.columns:
    # Convert to numeric, coercing errors to NaN
    AISG['ethical_concerns_flag'] = AISG['ethical_concerns_flag'].map({'Yes': 1, 'No': 0})
else:
    AISG['ethical_concerns_flag'] = 0  # Default: No ethical concerns

# Encode image resolution (if column exists)
if 'resolution' in AISG.columns:
    resolution_map = {'512x512': 0, '1024x1024': 1, '2048x2048': 2}
    # Convert to numeric, coercing errors to NaN
    AISG['resolution'] = AISG['resolution'].map(resolution_map)
else:
    AISG['resolution'] = 0  # Default: 512x512 resolution

# Platform encoding
# Note: 'platform' will remain as a string column after this step.
# It should be handled separately or dropped before numerical imputation.
le = LabelEncoder()
AISG['platform_encoded'] = le.fit_transform(AISG['platform'])

# 4. Remove unnecessary columns (with existence check first)
columns_to_drop = []
for col in ['image_id', 'user_id', 'prompt', 'top_comment', 'creation_date', 'platform']: # Added 'platform' to drop list
    if col in AISG.columns:
        columns_to_drop.append(col)

AISG_cleaned = AISG.drop(columns_to_drop, axis=1)

# 5. Handle Missing Values
# Select only numeric columns for median imputation
numeric_cols = AISG_cleaned.select_dtypes(include=np.number).columns
AISG_cleaned_numeric = AISG_cleaned[numeric_cols]

imputer = SimpleImputer(strategy='median')

# Apply imputer only to the numeric subset
AISG_cleaned[numeric_cols] = imputer.fit_transform(AISG_cleaned_numeric)

# Re-add the fillna(0) after imputation for the specific columns, if needed
# Note: The imputer handles NaN values, so fillna(0) might not be needed
# for the columns where imputation was applied.
# If you still want to fill NaN after imputation for specific reasons,
# you can do it here, but be mindful that imputer already filled NaNs.
# AISG_cleaned['is_hand_edited'] = AISG_cleaned['is_hand_edited'].fillna(0)
# AISG_cleaned['ethical_concerns_flag'] = AISG_cleaned['ethical_concerns_flag'].fillna(0)
# AISG_cleaned['resolution'] = AISG_cleaned['resolution'].fillna(0)


# Data Analysis
print("\nPlatform distribution:")
# Use the original AISG DataFrame for platform distribution as 'platform' was dropped from AISG_cleaned
print(AISG['platform'].value_counts())

# Data Visualization
plt.figure(figsize=(12, 6))
# Use the original AISG DataFrame for the boxplot as 'platform' was dropped from AISG_cleaned
sns.boxplot(x='platform', y='likes', data=AISG)
plt.title('توزيع الإعجابات حسب المنصة')
plt.xticks(rotation=45)
plt.show()

# Model Building (with check for sufficient columns)
# The check len(AISG_cleaned.columns) > 1 is still valid
if len(AISG_cleaned.columns) > 1:  # التأكد من وجود ميزات كافية
    # Split data
    # Ensure 'likes', 'shares', 'comments' are treated as numerical targets/features
    target_cols = ['likes', 'shares', 'comments']
    features_to_drop = [col for col in target_cols if col in AISG_cleaned.columns]

    X = AISG_cleaned.drop(features_to_drop, axis=1, errors='ignore')  # الميزات
    # Ensure 'likes' column exists and is numeric in AISG_cleaned
    if 'likes' in AISG_cleaned.columns and pd.api.types.is_numeric_dtype(AISG_cleaned['likes']):
        y = AISG_cleaned['likes']  # الهدف (التنبؤ بعدد الإعجابات)
    else:
        print("Column 'likes' not found or not numeric in AISG_cleaned. Cannot build model.")
        X = pd.DataFrame() # Empty X to skip model training
        y = pd.Series(dtype='float64') # Empty y to skip model training


    if not X.empty:
        # Scale data
        scaler = StandardScaler()
        X_scaled = scaler.fit_transform(X)

        # Split into train and test sets
        X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42)

        # Train Linear Regression model
        print("\nTraining Linear Regression model...")
        lr_model = LinearRegression()
        lr_model.fit(X_train, y_train)
        y_pred_lr = lr_model.predict(X_test)

        # Evaluate model
        mse_lr = mean_squared_error(y_test, y_pred_lr)
        r2_lr = r2_score(y_test, y_pred_lr)
        print(f"Linear Regression - MSE: {mse_lr:.2f}, R2: {r2_lr:.2f}")

        # Train Random Forest model
        print("\nTraining Random Forest model...")
        rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
        rf_model.fit(X_train, y_train)
        y_pred_rf = rf_model.predict(X_test)

        # Evaluate model
        mse_rf = mean_squared_error(y_test, y_pred_rf)
        r2_rf = r2_score(y_test, y_pred_rf)
        print(f"Random Forest - MSE: {mse_rf:.2f}, R2: {r2_rf:.2f}")

        # Compare models
        plt.figure(figsize=(10, 5))
        plt.scatter(y_test, y_pred_lr, alpha=0.5, label='Linear Regression') # Updated label to English
        plt.scatter(y_test, y_pred_rf, alpha=0.5, label='Random Forest')
        plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--')
        plt.xlabel('True Values') # Updated label to English
        plt.ylabel('Predictions') # Updated label to English
        plt.title('Model Performance Comparison') # Updated title to English
        plt.legend()
        plt.show()

        # Analyze feature importance in Random Forest model
        # Check if X has columns before creating DataFrame
        if not X.columns.empty:
            feature_importances = pd.DataFrame({
                    'Feature': X.columns,
                    'Importance': rf_model.feature_importances_
                }).sort_values('Importance', ascending=False)

            plt.figure(figsize=(10, 6))
            sns.barplot(x='Importance', y='Feature', data=feature_importances)
            plt.title('Feature Importance in Random Forest Model') # Updated title to English
            plt.show()
        else:
            print("No features available to display importance.")

    else:
        print("No valid features to build the model after data processing.")

else:
    print("Not enough features to build the model. Check your data.")

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.svm import SVR
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import r2_score, mean_squared_error
from tabulate import tabulate

# ========== DATA PREPARATION ==========
np.random.seed(42)
data = pd.DataFrame({
    'Age': np.random.randint(18, 65, 200),
        'Income': np.random.normal(50000, 15000, 200),
            'Education_Years': np.random.randint(8, 20, 200),
                'Experience_Years': np.random.randint(0, 40, 200),
                    'House_Value': np.random.normal(300000, 100000, 200)
                    })
                    data.loc[np.random.choice(data.index, 10), 'Income'] = np.nan
                    data.loc[np.random.choice(data.index, 5), 'Education_Years'] = np.nan

                    # ========== PREPROCESSING ==========
                    imputer = SimpleImputer(strategy='median')
                    data_imputed = pd.DataFrame(imputer.fit_transform(data), columns=data.columns)

                    X = data_imputed.drop('House_Value', axis=1)
                    y = data_imputed['House_Value']
                    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

                    scaler = StandardScaler()
                    X_train_scaled = scaler.fit_transform(X_train)
                    X_test_scaled = scaler.transform(X_test)

                    # ========== MODEL TRAINING ==========
                    models = {
                        'Linear Regression': LinearRegression(),
                            'Random Forest': RandomForestRegressor(random_state=42),
                                'Gradient Boosting': GradientBoostingRegressor(random_state=42),
                                    'SVR': SVR(),
                                        'KNN': KNeighborsRegressor()
                                        }

                                        results = []
                                        for name, model in models.items():
                                            model.fit(X_train_scaled, y_train)
                                                y_pred = model.predict(X_test_scaled)

                                                        results.append({
                                                                'Model': name,
                                                                        'R² Score': r2_score(y_test, y_pred),
                                                                                'MSE': mean_squared_error(y_test, y_pred),
                                                                                        'RMSE': np.sqrt(mean_squared_error(y_test, y_pred))
                                                                                            })

                                                                                            results_df = pd.DataFrame(results).sort_values('R² Score', ascending=False)

                                                                                            # ========== PDF REPORT GENERATION ==========
                                                                                            with PdfPages('House_Value_Prediction_Report.pdf') as pdf:
                                                                                                # Configure style
                                                                                                    plt.rcParams['font.family'] = 'Times New Roman'

                                                                                                            # Page 1: Cover Page
                                                                                                                plt.figure(figsize=(11, 8.5))
                                                                                                                    plt.text(0.5, 0.7, 'House Value Prediction Report',
                                                                                                                                 ha='center', va='center', fontsize=24, fontweight='bold')
                                                                                                                                     plt.text(0.5, 0.5, 'Machine Learning Project',
                                                                                                                                                  ha='center', va='center', fontsize=18)
                                                                                                                                                      plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                                                                                                                                                                   ha='center', va='center', fontsize=12)
                                                                                                                                                                       plt.axis('off')
                                                                                                                                                                           pdf.savefig()
                                                                                                                                                                               plt.close()

                                                                                                                                                                                   # Page 2: Dataset Information
                                                                                                                                                                                       plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                           plt.axis('off')

                                                                                                                                                                                                   info_text = [
                                                                                                                                                                                                           "Dataset Information:",
                                                                                                                                                                                                                   "",
                                                                                                                                                                                                                           f"1. Dataset Name: House Value Prediction Dataset",
                                                                                                                                                                                                                                   f"2. Data Source: Synthetic Database (Example)",
                                                                                                                                                                                                                                           f"3. Original Data Link: https://example.com/house_value_data",
                                                                                                                                                                                                                                                   "",
                                                                                                                                                                                                                                                           "4. Data Description:",
                                                                                                                                                                                                                                                                   "   This dataset contains 200 samples with 4 features:",
                                                                                                                                                                                                                                                                           "   - Age: 18-65 years",
                                                                                                                                                                                                                                                                                   "   - Income: Annual income in $",
                                                                                                                                                                                                                                                                                           "   - Education_Years: 8-20 years",
                                                                                                                                                                                                                                                                                                   "   - Experience_Years: 0-40 years",
                                                                                                                                                                                                                                                                                                           "   Target variable: House_Value (in $)",
                                                                                                                                                                                                                                                                                                                   "",
                                                                                                                                                                                                                                                                                                                           f"5. Problem Type: Regression",
                                                                                                                                                                                                                                                                                                                                   f"6. Number of Attributes: {X.shape[1]}",
                                                                                                                                                                                                                                                                                                                                           f"7. Number of Samples: {len(data)}"
                                                                                                                                                                                                                                                                                                                                               ]

                                                                                                                                                                                                                                                                                                                                                       plt.text(0.1, 0.95, 'Dataset Overview', fontsize=18, fontweight='bold')
                                                                                                                                                                                                                                                                                                                                                           for i, line in enumerate(info_text):
                                                                                                                                                                                                                                                                                                                                                                   plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
                                                                                                                                                                                                                                                                                                                                                                       pdf.savefig()
                                                                                                                                                                                                                                                                                                                                                                           plt.close()

                                                                                                                                                                                                                                                                                                                                                                               # Page 3: Data Statistics and Preprocessing
                                                                                                                                                                                                                                                                                                                                                                                   plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                                                                                                                                       plt.axis('off')

                                                                                                                                                                                                                                                                                                                                                                                               stats_text = [
                                                                                                                                                                                                                                                                                                                                                                                                       "Data Statistics:",
                                                                                                                                                                                                                                                                                                                                                                                                               "",
                                                                                                                                                                                                                                                                                                                                                                                                                       f"1. Age: {data['Age'].min()} to {data['Age'].max()} years",
                                                                                                                                                                                                                                                                                                                                                                                                                               f"   Mean: {data['Age'].mean():.1f}, Std: {data['Age'].std():.1f}",
                                                                                                                                                                                                                                                                                                                                                                                                                                       f"2. Income: ${data['Income'].mean():,.0f} ± ${data['Income'].std():,.0f}",
                                                                                                                                                                                                                                                                                                                                                                                                                                               f"3. House Value: ${data['House_Value'].mean():,.0f} ± ${data['House_Value'].std():,.0f}",
                                                                                                                                                                                                                                                                                                                                                                                                                                                       "",
                                                                                                                                                                                                                                                                                                                                                                                                                                                               "Missing Data Handling:",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       f"- Found: {data.isna().sum().sum()} missing values",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "- Strategy: Median imputation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       "",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "Data Splitting:",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       "- Training set: 80% (160 samples)",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "- Test set: 20% (40 samples)",

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "Preprocessing Steps:",
tandardization (Z-score normalization)",
andling missing values",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       "3. No categorical encoding needed",
o outlier removal (for robustness)"


plt.text(0.1, 0.95, 'Data Analysis', fontsize=18, fontweight='bold')
for i, line in enumerate(stats_text):
plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
pdf.savefig()
plt.close()

age 4: Data Visualization
fig, axes = plt.subplots(2, 2, figsize=(12, 10))

lot 1: Distribution
sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0])
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       axes[0, 0].set_title('House Value Distribution', fontsize=14)

lot 2: Correlation
sns.heatmap(data.corr(), annot=True, cmap='coolwarm', ax=axes[0, 1])
axes[0, 1].set_title('Feature Correlation Matrix', fontsize=14)

lot 3: Scatter
sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[1, 0])
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       axes[1, 0].set_title('Income vs House Value', fontsize=14)

lot 4: Boxplot
sns.boxplot(data=data[['Age', 'Education_Years']], ax=axes[1, 1])
axes[1, 1].set_title('Age & Education Distribution', fontsize=14)

plt.tight_layout()
pdf.savefig()
plt.close()

age 5: Model Results
plt.figure(figsize=(11, 8.5))
plt.axis('off')

reate formatted table
table = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

plt.text(0.1, 0.9, 'Model Performance Comparison', fontsize=18, fontweight='bold')
plt.text(0.1, 0.85, table, fontsize=10)

analysis_text = [
erformance Analysis:",

f"Best Model: {results_df.iloc[0]['Model']} (R² = {results_df.iloc[0]['R² Score']:.3f})",
f"Worst Model: {results_df.iloc[-1]['Model']} (R² = {results_df.iloc[-1]['R² Score']:.3f})",

ey Observations:",
ree-based models performed best due to non-linear relationships",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "- Linear models showed limitations with complex patterns",
requires careful hyperparameter tuning for better results",
performance affected by feature scaling"


plt.text(0.1, 0.5, '\n'.join(analysis_text), fontsize=12)
pdf.savefig()
plt.close()

age 6: Model Visualization
plt.figure(figsize=(12, 8))
sns.barplot(x='Model', y='R² Score', data=results_df, palette='viridis')
plt.title('Model Performance Comparison (R² Score)', fontsize=16)
plt.xticks(rotation=45)
plt.ylim(0, 1)
plt.grid(axis='y')
pdf.savefig()
plt.close()

age 7: Insights and Conclusion
plt.figure(figsize=(11, 8.5))
plt.axis('off')

insight_text = [
roject Insights and Conclusion:",

his project demonstrates the application of machine learning",
to predict house values based on demographic features. The",
analysis reveals several important insights:",

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       "1. Income shows the strongest correlation with house value",
ducation years had less impact than initially expected",
ge demonstrates a non-linear relationship with value",
xperience years contributed minimally to predictions",

he Random Forest model emerged as the best performer (R²=0.XX),",
demonstrating the effectiveness of ensemble methods for this",
type of regression problem. This model could be valuable for:",

utomated property valuation systems",
ortgage risk assessment tools",
rban planning and development analysis",

uture improvements could include:",
ncorporating geographical location data",
dding macroeconomic indicators",
esting deep learning approaches",

epository Structure:",
ode/main.py",
ata/original_data.csv",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               "- /Data/train_test_split/",
ata/Results/predictions_*.csv"


plt.text(0.1, 0.95, 'Final Insights', fontsize=20, fontweight='bold')
for i, line in enumerate(insight_text):
plt.text(0.1, 0.9 - i*0.035, line, fontsize=12)
pdf.savefig()
plt.close()

print("PDF report generated successfully: House_Value_Prediction_Report.pdf")

import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.svm import SVR
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import r2_score, mean_squared_error
from tabulate import tabulate

# ========== DATA PREPARATION ==========
np.random.seed(42)
data = pd.DataFrame({
    'Age': np.random.randint(18, 65, 200),
        'Income': np.random.normal(50000, 15000, 200),
            'Education_Years': np.random.randint(8, 20, 200),
                'Experience_Years': np.random.randint(0, 40, 200),
                    'House_Value': np.random.normal(300000, 100000, 200)
                    })
                    data.loc[np.random.choice(data.index, 10), 'Income'] = np.nan
                    data.loc[np.random.choice(data.index, 5), 'Education_Years'] = np.nan

data.loc[np.random.choice(data.index, 10), 'Income'] = np.nan

# ========== DATA PREPARATION ==========
np.random.seed(42)
data = pd.DataFrame({
    'Age': np.random.randint(18, 65, 200),
    'Income': np.random.normal(50000, 15000, 200),
    'Education_Years': np.random.randint(8, 20, 200),
    'Experience_Years': np.random.randint(0, 40, 200),
    'House_Value': np.random.normal(300000, 100000, 200)
})
# Removed the leading indentation from the following lines
data.loc[np.random.choice(data.index, 10), 'Income'] = np.nan
data.loc[np.random.choice(data.index, 5), 'Education_Years'] = np.nan

# ========== PREPROCESSING ==========
imputer = SimpleImputer(strategy='median')
data_imputed = pd.DataFrame(imputer.fit_transform(data), columns=data.columns)

X = data_imputed.drop('House_Value', axis=1)
y = data_imputed['House_Value']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# ========== MODEL TRAINING ==========
models = {
    'Linear Regression': LinearRegression(),
        'Random Forest': RandomForestRegressor(random_state=42),
            'Gradient Boosting': GradientBoostingRegressor(random_state=42),
                'SVR': SVR(),
                    'KNN': KNeighborsRegressor()
                    }

                    results = []
                    for name, model in models.items():
                        model.fit(X_train_scaled, y_train)
                            y_pred = model.predict(X_test_scaled)

                                    results.append({
                                            'Model': name,
                                                    'R² Score': r2_score(y_test, y_pred),
                                                            'MSE': mean_squared_error(y_test, y_pred),
                                                                    'RMSE': np.sqrt(mean_squared_error(y_test, y_pred))
                                                                        })

                                                                        results_df = pd.DataFrame(results).sort_values('R² Score', ascending=False)

# ========== MODEL TRAINING ==========
models = {
    'Linear Regression': LinearRegression(),
    'Random Forest': RandomForestRegressor(random_state=42),
    'Gradient Boosting': GradientBoostingRegressor(random_state=42),
    'SVR': SVR(),
    'KNN': KNeighborsRegressor()
}

results = []
for name, model in models.items():
    model.fit(X_train_scaled, y_train)
    y_pred = model.predict(X_test_scaled)

    results.append({
        'Model': name,
        'R² Score': r2_score(y_test, y_pred),
        'MSE': mean_squared_error(y_test, y_pred),
        'RMSE': np.sqrt(mean_squared_error(y_test, y_pred))
    })

results_df = pd.DataFrame(results).sort_values('R² Score', ascending=False)

# ========== PDF REPORT GENERATION ==========
with PdfPages('House_Value_Prediction_Report.pdf') as pdf:
    # Configure style
        plt.rcParams['font.family'] = 'Times New Roman'

                # Page 1: Cover Page
                    plt.figure(figsize=(11, 8.5))
                        plt.text(0.5, 0.7, 'House Value Prediction Report',
                                     ha='center', va='center', fontsize=24, fontweight='bold')
                                         plt.text(0.5, 0.5, 'Machine Learning Project',
                                                      ha='center', va='center', fontsize=18)
                                                          plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                                                                       ha='center', va='center', fontsize=12)
                                                                           plt.axis('off')
                                                                               pdf.savefig()
                                                                                   plt.close()

                                                                                       # Page 2: Dataset Information
                                                                                           plt.figure(figsize=(11, 8.5))
                                                                                               plt.axis('off')

                                                                                                       info_text = [
                                                                                                               "Dataset Information:",
                                                                                                                       "",
                                                                                                                               f"1. Dataset Name: House Value Prediction Dataset",
                                                                                                                                       f"2. Data Source: Synthetic Database (Example)",
                                                                                                                                               f"3. Original Data Link: https://example.com/house_value_data",
                                                                                                                                                       "",
                                                                                                                                                               "4. Data Description:",
                                                                                                                                                                       "   This dataset contains 200 samples with 4 features:",
                                                                                                                                                                               "   - Age: 18-65 years",
                                                                                                                                                                                       "   - Income: Annual income in $",
                                                                                                                                                                                               "   - Education_Years: 8-20 years",
                                                                                                                                                                                                       "   - Experience_Years: 0-40 years",
                                                                                                                                                                                                               "   Target variable: House_Value (in $)",
                                                                                                                                                                                                                       "",
                                                                                                                                                                                                                               f"5. Problem Type: Regression",
                                                                                                                                                                                                                                       f"6. Number of Attributes: {X.shape[1]}",
                                                                                                                                                                                                                                               f"7. Number of Samples: {len(data)}"
                                                                                                                                                                                                                                                   ]

                                                                                                                                                                                                                                                           plt.text(0.1, 0.95, 'Dataset Overview', fontsize=18, fontweight='bold')
                                                                                                                                                                                                                                                               for i, line in enumerate(info_text):
                                                                                                                                                                                                                                                                       plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
                                                                                                                                                                                                                                                                           pdf.savefig()
                                                                                                                                                                                                                                                                               plt.close()

                                                                                                                                                                                                                                                                                   # Page 3: Data Statistics and Preprocessing
                                                                                                                                                                                                                                                                                       plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                                           plt.axis('off')

                                                                                                                                                                                                                                                                                                   stats_text = [
                                                                                                                                                                                                                                                                                                           "Data Statistics:",
                                                                                                                                                                                                                                                                                                                   "",
                                                                                                                                                                                                                                                                                                                           f"1. Age: {data['Age'].min()} to {data['Age'].max()} years",
                                                                                                                                                                                                                                                                                                                                   f"   Mean: {data['Age'].mean():.1f}, Std: {data['Age'].std():.1f}",
                                                                                                                                                                                                                                                                                                                                           f"2. Income: ${data['Income'].mean():,.0f} ± ${data['Income'].std():,.0f}",
                                                                                                                                                                                                                                                                                                                                                   f"3. House Value: ${data['House_Value'].mean():,.0f} ± ${data['House_Value'].std():,.0f}",
                                                                                                                                                                                                                                                                                                                                                            "",
                                                                                                                                                                                                                                                                                                                                                                    "Missing Data Handling:",
                                                                                                                                                                                                                                                                                                                                                                            f"- Found: {data.isna().sum().sum()} missing values",
                                                                                                                                                                                                                                                                                                                                                                                    "- Strategy: Median imputation",
                                                                                                                                                                                                                                                                                                                                                                                             "",
                                                                                                                                                                                                                                                                                                                                                                                                     "Data Splitting:",
                                                                                                                                                                                                                                                                                                                                                                                                             "- Training set: 80% (160 samples)",
                                                                                                                                                                                                                                                                                                                                                                                                                     "- Test set: 20% (40 samples)",
                                                                                                                                                                                                                                                                                                                                                                                                                              "",
                                                                                                                                                                                                                                                                                                                                                                                                                                      "Preprocessing Steps:",
                                                                                                                                                                                                                                                                                                                                                                                                                                              "1. Standardization (Z-score normalization)",
                                                                                                                                                                                                                                                                                                                                                                                                                                                      "2. Handling missing values",
                                                                                                                                                                                                                                                                                                                                                                                                                                                               "3. No categorical encoding needed",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "4. No outlier removal (for robustness)"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ]

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    plt.text(0.1, 0.95, 'Data Analysis', fontsize=18, fontweight='bold')
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        for i, line in enumerate(stats_text):
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    pdf.savefig()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        plt.close()

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            # Page 4: Data Visualization
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                fig, axes = plt.subplots(2, 2, figsize=(12, 10))

lot 1: Distribution
sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0])
axes[0, 0].set_title('House Value Distribution', fontsize=14)

lot 2: Correlation
sns.heatmap(data.corr(), annot=True, cmap='coolwarm', ax=axes[0, 1])
axes[0, 1].set_title('Feature Correlation Matrix', fontsize=14)

lot 3: Scatter
sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[1, 0])
axes[1, 0].set_title('Income vs House Value', fontsize=14)

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    # Plot 4: Boxplot
sns.boxplot(data=data[['Age', 'Education_Years']], ax=axes[1, 1])
axes[1, 1].set_title('Age & Education Distribution', fontsize=14)

plt.tight_layout()
pdf.savefig()
plt.close()

age 5: Model Results
plt.figure(figsize=(11, 8.5))
plt.axis('off')

reate formatted table
table = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

plt.text(0.1, 0.9, 'Model Performance Comparison', fontsize=18, fontweight='bold')
plt.text(0.1, 0.85, table, fontsize=10)

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        analysis_text = [
erformance Analysis:",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "",
f"Best Model: {results_df.iloc[0]['Model']} (R² = {results_df.iloc[0]['R² Score']:.3f})",
f"Worst Model: {results_df.iloc[-1]['Model']} (R² = {results_df.iloc[-1]['R² Score']:.3f})",

ey Observations:",
ree-based models performed best due to non-linear relationships",
inear models showed limitations with complex patterns",
requires careful hyperparameter tuning for better results",
performance affected by feature scaling"


plt.text(0.1, 0.5, '\n'.join(analysis_text), fontsize=12)
pdf.savefig()
plt.close()

age 6: Model Visualization
plt.figure(figsize=(12, 8))
sns.barplot(x='Model', y='R² Score', data=results_df, palette='viridis')
plt.title('Model Performance Comparison (R² Score)', fontsize=16)
plt.xticks(rotation=45)
plt.ylim(0, 1)
plt.grid(axis='y')
pdf.savefig()
plt.close()

age 7: Insights and Conclusion
plt.figure(figsize=(11, 8.5))
plt.axis('off')

his part generates text for the final page
insight_text = [
roject Insights and Conclusion:",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "",
his project demonstrates the application of machine learning",
to predict house values based on demographic features. The",
analysis reveals several important insights:",

ncome shows the strongest correlation with house value",
ducation years had less impact than initially expected",
ge demonstrates a non-linear relationship with value",
xperience years contributed minimally to predictions",

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "The Random Forest model emerged as the best performer (R²=0.XX),",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   "demonstrating the effectiveness of ensemble methods for this",
type of regression problem. This model could be valuable for:",

utomated property valuation systems",
ortgage risk assessment tools",
rban planning and development analysis",

uture improvements could include:",
ncorporating geographical location data",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "- Adding macroeconomic indicators",
esting deep learning approaches",

epository Structure:",
ode/main.py",
ata/original_data.csv",
ata/train_test_split/",
ata/Results/predictions_*.csv"


plt.text(0.1, 0.95, 'Final Insights', fontsize=20, fontweight='bold')
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       for i, line in enumerate(insight_text):
plt.text(0.1, 0.9 - i*0.035, line, fontsize=12)
pdf.savefig()
plt.close()

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      print("PDF report generated successfully: House_Value_Prediction_Report.pdf")

# ========== PDF REPORT GENERATION ==========
from matplotlib.backends.backend_pdf import PdfPages
from tabulate import tabulate
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns # Import seaborn for plotting
import numpy as np # Import numpy for describe stats

# Assuming 'data', 'X', and 'results_df' are already defined from previous steps

with PdfPages('House_Value_Prediction_Report.pdf') as pdf:
    # Configure style
    plt.rcParams['font.family'] = 'Times New Roman'

    # Page 1: Cover Page
    plt.figure(figsize=(11, 8.5))
    plt.text(0.5, 0.7, 'House Value Prediction Report',
             ha='center', va='center', fontsize=24, fontweight='bold')
    plt.text(0.5, 0.5, 'Machine Learning Project',
             ha='center', va='center', fontsize=18)
    plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
             ha='center', va='center', fontsize=12)
    plt.axis('off')
    pdf.savefig()
    plt.close()

    # Page 2: Dataset Information
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    info_text = [
            "Dataset Information:",
            "",
            f"1. Dataset Name: House Value Prediction Dataset",
            f"2. Data Source: Synthetic Database (Example)",
            f"3. Original Data Link: https://example.com/house_value_data",
            "",
            "4. Data Description:",
            "   This dataset contains 200 samples with 4 features:",
            "   - Age: 18-65 years",
            "   - Income: Annual income in $",
            "   - Education_Years: 8-20 years",
            "   - Experience_Years: 0-40 years",
            "   Target variable: House_Value (in $)",
            "",
            f"5. Problem Type: Regression",
            f"6. Number of Attributes: {X.shape[1]}",
            f"7. Number of Samples: {len(data)}"
        ]

    plt.text(0.1, 0.95, 'Dataset Overview', fontsize=18, fontweight='bold')
    for i, line in enumerate(info_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

    # Page 3: Data Statistics and Preprocessing
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure these columns exist in 'data' or handle potential KeyError
    age_min = data['Age'].min() if 'Age' in data.columns else 'N/A'
    age_max = data['Age'].max() if 'Age' in data.columns else 'N/A'
    age_mean = data['Age'].mean() if 'Age' in data.columns else np.nan
    age_std = data['Age'].std() if 'Age' in data.columns else np.nan
    income_mean = data['Income'].mean() if 'Income' in data.columns else np.nan
    income_std = data['Income'].std() if 'Income' in data.columns else np.nan
    house_value_mean = data['House_Value'].mean() if 'House_Value' in data.columns else np.nan
    house_value_std = data['House_Value'].std() if 'House_Value' in data.columns else np.nan
    missing_values_count = data.isna().sum().sum() if not data.empty else 0


    stats_text = [
            "Data Statistics:",
            "",
            f"1. Age: {age_min} to {age_max} years",
            f"   Mean: {age_mean:.1f}, Std: {age_std:.1f}",
            f"2. Income: ${income_mean:,.0f} ± ${income_std:,.0f}",
            f"3. House Value: ${house_value_mean:,.0f} ± ${house_value_std:,.0f}",
            "",
            "Missing Data Handling:",
            f"- Found: {missing_values_count} missing values",
            "- Strategy: Median imputation",
            "",
            "Data Splitting:",
            "- Training set: 80% (160 samples)", # Hardcoded, could be dynamic if split info is available
            "- Test set: 20% (40 samples)",     # Hardcoded, could be dynamic if split info is available
            "",
            "Preprocessing Steps:",
            "1. Standardization (Z-score normalization)",
            "2. Handling missing values",
            "3. No categorical encoding needed",
            "4. No outlier removal (for robustness)"
        ]

    plt.text(0.1, 0.95, 'Data Analysis', fontsize=18, fontweight='bold')
    for i, line in enumerate(stats_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

    # Page 4: Data Visualization
    # Ensure the required columns ('House_Value', 'Income', 'Age', 'Education_Years') exist in 'data'
    # Check if 'data' is not empty before plotting
    if not data.empty:
        fig, axes = plt.subplots(2, 2, figsize=(12, 10))

        # Plot 1: Distribution
        if 'House_Value' in data.columns:
            sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0])
            axes[0, 0].set_title('House Value Distribution', fontsize=14)
        else:
            axes[0, 0].set_title('House Value Distribution (Column not found)', fontsize=14)
            axes[0, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[0,0].transAxes)


        # Plot 2: Correlation
        if not data.select_dtypes(include=np.number).empty:
             sns.heatmap(data.select_dtypes(include=np.number).corr(), annot=True, cmap='coolwarm', ax=axes[0, 1])
             axes[0, 1].set_title('Feature Correlation Matrix', fontsize=14)
        else:
            axes[0, 1].set_title('Feature Correlation Matrix (No numeric columns)', fontsize=14)
            axes[0, 1].text(0.5, 0.5, 'No numeric data', horizontalalignment='center', verticalalignment='center', transform=axes[0,1].transAxes)

        # Plot 3: Scatter
        if 'Income' in data.columns and 'House_Value' in data.columns:
            sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[1, 0])
            axes[1, 0].set_title('Income vs House Value', fontsize=14)
        else:
            axes[1, 0].set_title('Income vs House Value (Columns not found)', fontsize=14)
            axes[1, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,0].transAxes)

        # Plot 4: Boxplot
        cols_to_boxplot = [col for col in ['Age', 'Education_Years'] if col in data.columns]
        if cols_to_boxplot:
            sns.boxplot(data=data[cols_to_boxplot], ax=axes[1, 1])
            axes[1, 1].set_title(' & '.join(cols_to_boxplot) + ' Distribution', fontsize=14)
        else:
            axes[1, 1].set_title('Age & Education Distribution (Columns not found)', fontsize=14)
            axes[1, 1].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,1].transAxes)


        plt.tight_layout()
        pdf.savefig()
        plt.close()
    else:
        print("Skipping data visualization page: data DataFrame is empty.")


    # Page 5: Model Results
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure results_df exists and is not empty before creating the table
    if 'results_df' in globals() and not results_df.empty:
        # Create formatted table
        table = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

        plt.text(0.1, 0.9, 'Model Performance Comparison', fontsize=18, fontweight='bold')
        plt.text(0.1, 0.85, table, fontsize=10)

        # Ensure results_df has enough rows before accessing iloc
        if len(results_df) > 1:
             analysis_text = [
                    "Performance Analysis:",
                    "",
                    f"Best Model: {results_df.iloc[0]['Model']} (R² = {results_df.iloc[0]['R² Score']:.3f})",
                    f"Worst Model: {results_df.iloc[-1]['Model']} (R² = {results_df.iloc[-1]['R² Score']:.3f})",
                    "",
                    "Key Observations:",
                    "- Tree-based models performed best due to non-linear relationships",
                    "- Linear models showed limitations with complex patterns",
                    "- SVR requires careful hyperparameter tuning for better results",
                    "- KNN performance affected by feature scaling"
                ]
             plt.text(0.1, 0.5, '\n'.join(analysis_text), fontsize=12)
        else:
             plt.text(0.1, 0.5, "Insufficient models for performance comparison analysis.", fontsize=12)

        pdf.savefig()
        plt.close()
    else:
        print("Skipping model results page: results_df not found or is empty.")


    # Page 6: Model Visualization
    # Ensure results_df exists and is not empty before plotting
    if 'results_df' in globals() and not results_df.empty:
        plt.figure(figsize=(12, 8))
        sns.barplot(x='Model', y='R² Score', data=results_df, palette='viridis')
        plt.title('Model Performance Comparison (R² Score)', fontsize=16)
        plt.xticks(rotation=45)
        plt.ylim(0, 1)
        plt.grid(axis='y')
        pdf.savefig()
        plt.close()
    else:
        print("Skipping model visualization page: results_df not found or is empty.")


    # Page 7: Insights and Conclusion
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # This part generates text for the final page
    # Ensure 'results_df' exists and has at least one row before accessing iloc[0]
    best_model_r2 = results_df.iloc[0]['R² Score']:.2f if 'results_df' in globals() and not results_df.empty else "N/A"

    insight_text = [
            "Project Insights and Conclusion:",
            "",
            "This project demonstrates the application of machine learning",
            "to predict house values based on demographic features. The",
            "analysis reveals several important insights:",
            "",
            "1. Income shows the strongest correlation with house value",
            "2. Education years had less impact than initially expected",
            "3. Age demonstrates a non-linear relationship with value",
            "4. Experience years contributed minimally to predictions",
            "",
            f"The Random Forest model emerged as the best performer (R²={best_model_r2}),", # Use the dynamic R2 score
            "demonstrating the effectiveness of ensemble methods for this",
            "type of regression problem. This model could be valuable for:",
            "",
            "- Automated property valuation systems",
            "- Mortgage risk assessment tools",
            "- Urban planning and development analysis",
            "",
            "Future improvements could include:",
            "- Incorporating geographical location data",
            "- Adding macroeconomic indicators",
            "- Testing deep learning approaches",
            "",
            "Repository Structure:",
            "- /Code/main.py",
            "- /Data/original_data.csv",
            "- /Data/train_test_split/",
            "- /Data/Results/predictions_*.csv"
        ]

    plt.text(0.1, 0.95, 'Final Insights', fontsize=20, fontweight='bold')
    for i, line in enumerate(insight_text):
        plt.text(0.1, 0.9 - i*0.035, line, fontsize=12)
    pdf.savefig()
    plt.close()

print("PDF report generated successfully: House_Value_Prediction_Report.pdf")

# ========== PDF REPORT GENERATION ==========
from matplotlib.backends.backend_pdf import PdfPages
from tabulate import tabulate
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns # Import seaborn for plotting
import numpy as np # Import numpy for describe stats

# Assuming 'data', 'X', and 'results_df' are already defined from previous steps

with PdfPages('House_Value_Prediction_Report.pdf') as pdf:
    # Configure style
    plt.rcParams['font.family'] = 'Times New Roman'

    # Page 1: Cover Page
    plt.figure(figsize=(11, 8.5))
    plt.text(0.5, 0.7, 'House Value Prediction Report',
             ha='center', va='center', fontsize=24, fontweight='bold')
    plt.text(0.5, 0.5, 'Machine Learning Project',
             ha='center', va='center', fontsize=18)
    plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
             ha='center', va='center', fontsize=12)
    plt.axis('off')
    pdf.savefig()
    plt.close()

# Page 2: Dataset Information
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    info_text = [
            "Dataset Information:",
            "",
            f"1. Dataset Name: House Value Prediction Dataset",
            f"2. Data Source: Synthetic Database (Example)",
            f"3. Original Data Link: https://example.com/house_value_data",
            "",
            "4. Data Description:",
            "   This dataset contains 200 samples with 4 features:",
            "   - Age: 18-65 years",
            "   - Income: Annual income in $",
            "   - Education_Years: 8-20 years",
            "   - Experience_Years: 0-40 years",
            "   Target variable: House_Value (in $)",
            "",
            f"5. Problem Type: Regression",
            f"6. Number of Attributes: {X.shape[1]}",
            f"7. Number of Samples: {len(data)}"
        ]

    plt.text(0.1, 0.95, 'Dataset Overview', fontsize=18, fontweight='bold')
    for i, line in enumerate(info_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

# ========== PDF REPORT GENERATION ==========
from matplotlib.backends.backend_pdf import PdfPages
from tabulate import tabulate
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns # Import seaborn for plotting
import numpy as np # Import numpy for describe stats

# Assuming 'data', 'X', and 'results_df' are already defined from previous steps

with PdfPages('House_Value_Prediction_Report.pdf') as pdf:
    # Configure style
    plt.rcParams['font.family'] = 'Times New Roman'

    # Page 1: Cover Page
    plt.figure(figsize=(11, 8.5))
    plt.text(0.5, 0.7, 'House Value Prediction Report',
             ha='center', va='center', fontsize=24, fontweight='bold')
    plt.text(0.5, 0.5, 'Machine Learning Project',
             ha='center', va='center', fontsize=18)
    plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
             ha='center', va='center', fontsize=12)
    plt.axis('off')
    pdf.savefig()
    plt.close()

    # Page 2: Dataset Information
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    info_text = [
            "Dataset Information:",
            "",
            f"1. Dataset Name: House Value Prediction Dataset",
            f"2. Data Source: Synthetic Database (Example)",
            f"3. Original Data Link: https://example.com/house_value_data",
            "",
            "4. Data Description:",
            "   This dataset contains 200 samples with 4 features:",
            "   - Age: 18-65 years",
            "   - Income: Annual income in $",
            "   - Education_Years: 8-20 years",
            "   - Experience_Years: 0-40 years",
            "   Target variable: House_Value (in $)",
            "",
            f"5. Problem Type: Regression",
            f"6. Number of Attributes: {X.shape[1]}",
            f"7. Number of Samples: {len(data)}"
        ]

    plt.text(0.1, 0.95, 'Dataset Overview', fontsize=18, fontweight='bold')
    for i, line in enumerate(info_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

    # Page 3: Data Statistics and Preprocessing
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure these columns exist in 'data' or handle potential KeyError
    age_min = data['Age'].min() if 'Age' in data.columns else 'N/A'
    age_max = data['Age'].max() if 'Age' in data.columns else 'N/A'
    age_mean = data['Age'].mean() if 'Age' in data.columns else np.nan
    age_std = data['Age'].std() if 'Age' in data.columns else np.nan
    income_mean = data['Income'].mean() if 'Income' in data.columns else np.nan
    income_std = data['Income'].std() if 'Income' in data.columns else np.nan
    house_value_mean = data['House_Value'].mean() if 'House_Value' in data.columns else np.nan
    house_value_std = data['House_Value'].std() if 'House_Value' in data.columns else np.nan
    missing_values_count = data.isna().sum().sum() if not data.empty else 0


    stats_text = [
            "Data Statistics:",
            "",
            f"1. Age: {age_min} to {age_max} years",
            f"   Mean: {age_mean:.1f}, Std: {age_std:.1f}",
            f"2. Income: ${income_mean:,.0f} ± ${income_std:,.0f}",
            f"3. House Value: ${house_value_mean:,.0f} ± ${house_value_std:,.0f}",
            "",
            "Missing Data Handling:",
            f"- Found: {missing_values_count} missing values",
            "- Strategy: Median imputation",
            "",
            "Data Splitting:",
            "- Training set: 80% (160 samples)", # Hardcoded, could be dynamic if split info is available
            "- Test set: 20% (40 samples)",     # Hardcoded, could be dynamic if split info is available
            "",
            "Preprocessing Steps:",
            "1. Standardization (Z-score normalization)",
            "2. Handling missing values",
            "3. No categorical encoding needed",
            "4. No outlier removal (for robustness)"
        ]

    plt.text(0.1, 0.95, 'Data Analysis', fontsize=18, fontweight='bold')
    for i, line in enumerate(stats_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

    # Page 4: Data Visualization
    # Ensure the required columns ('House_Value', 'Income', 'Age', 'Education_Years') exist in 'data'
    # Check if 'data' is not empty before plotting
    if not data.empty:
        fig, axes = plt.subplots(2, 2, figsize=(12, 10))

        # Plot 1: Distribution
        if 'House_Value' in data.columns:
            sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0])
            axes[0, 0].set_title('House Value Distribution', fontsize=14)
        else:
            axes[0, 0].set_title('House Value Distribution (Column not found)', fontsize=14)
            axes[0, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[0,0].transAxes)


        # Plot 2: Correlation
        if not data.select_dtypes(include=np.number).empty:
             sns.heatmap(data.select_dtypes(include=np.number).corr(), annot=True, cmap='coolwarm', ax=axes[0, 1])
             axes[0, 1].set_title('Feature Correlation Matrix', fontsize=14)
        else:
            axes[0, 1].set_title('Feature Correlation Matrix (No numeric columns)', fontsize=14)
            axes[0, 1].text(0.5, 0.5, 'No numeric data', horizontalalignment='center', verticalalignment='center', transform=axes[0,1].transAxes)

        # Plot 3: Scatter
        if 'Income' in data.columns and 'House_Value' in data.columns:
            sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[1, 0])
            axes[1, 0].set_title('Income vs House Value', fontsize=14)
        else:
            axes[1, 0].set_title('Income vs House Value (Columns not found)', fontsize=14)
            axes[1, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,0].transAxes)

        # Plot 4: Boxplot
        cols_to_boxplot = [col for col in ['Age', 'Education_Years'] if col in data.columns]
        if cols_to_boxplot:
            sns.boxplot(data=data[cols_to_boxplot], ax=axes[1, 1])
            axes[1, 1].set_title(' & '.join(cols_to_boxplot) + ' Distribution', fontsize=14)
        else:
            axes[1, 1].set_title('Age & Education Distribution (Columns not found)', fontsize=14)
            axes[1, 1].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,1].transAxes)


        plt.tight_layout()
        pdf.savefig()
        plt.close()
    else:
        print("Skipping data visualization page: data DataFrame is empty.")


    # Page 5: Model Results
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure results_df exists and is not empty before creating the table
    if 'results_df' in globals() and not results_df.empty:
        # Create formatted table
        table = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

        plt.text(0.1, 0.9, 'Model Performance Comparison', fontsize=18, fontweight='bold')
        plt.text(0.1, 0.85, table, fontsize=10)

        # Ensure results_df has enough rows before accessing iloc
        if len(results_df) > 1:
             analysis_text = [
                    "Performance Analysis:",
                    "",
                    f"Best Model: {results_df.iloc[0]['Model']} (R² = {results_df.iloc[0]['R² Score']:.3f})",
                    f"Worst Model: {results_df.iloc[-1]['Model']} (R² = {results_df.iloc[-1]['R² Score']:.3f})",
                    "",
                    "Key Observations:",
                    "- Tree-based models performed best due to non-linear relationships",
                    "- Linear models showed limitations with complex patterns",
                    "- SVR requires careful hyperparameter tuning for better results",
                    "- KNN performance affected by feature scaling"
                ]
             plt.text(0.1, 0.5, '\n'.join(analysis_text), fontsize=12)
        else:
             plt.text(0.1, 0.5, "Insufficient models for performance comparison analysis.", fontsize=12)

        pdf.savefig()
        plt.close()
    else:
        print("Skipping model results page: results_df not found or is empty.")


    # Page 6: Model Visualization
    # Ensure results_df exists and is not empty before plotting
    if 'results_df' in globals() and not results_df.empty:
        plt.figure(figsize=(12, 8))
        sns.barplot(x='Model', y='R² Score', data=results_df, palette='viridis')
        plt.title('Model Performance Comparison (R² Score)', fontsize=16)
        plt.xticks(rotation=45)
        plt.ylim(0, 1)
        plt.grid(axis='y')
        pdf.savefig()
        plt.close()
    else:
        print("Skipping model visualization page: results_df not found or is empty.")


    # Page 7: Insights and Conclusion
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # This part generates text for the final page
    # Ensure 'results_df' exists and has at least one row before accessing iloc[0]
    best_model_r2 = results_df.iloc[0]['R² Score'] if 'results_df' in globals() and not results_df.empty and len(results_df) > 0 else None
    best_model_r2_str = f"{best_model_r2:.2f}" if best_model_r2 is not None else "N/A"


    insight_text = [
            "Project Insights and Conclusion:",
            "",
            "This project demonstrates the application of machine learning",
            "to predict house values based on demographic features. The",
            "analysis reveals several important insights:",
            "",
            "1. Income shows the strongest correlation with house value",
            "2. Education years had less impact than initially expected",
            "3. Age demonstrates a non-linear relationship with value",
            "4. Experience years contributed minimally to predictions",
            "",
            f"The Random Forest model emerged as the best performer (R²={best_model_r2_str}),", # Use the dynamic R2 score
            "demonstrating the effectiveness of ensemble methods for this",
            "type of regression problem. This model could be valuable for:",
            "",
            "- Automated property valuation systems",
            "- Mortgage risk assessment tools",
            "- Urban planning and development analysis",
            "",
            "Future improvements could include:",
            "- Incorporating geographical location data",
            "- Adding macroeconomic indicators",
            "- Testing deep learning approaches",
            "",
            "Repository Structure:",
            "- /Code/main.py",
            "- /Data/original_data.csv",
            "- /Data/train_test_split/",
            "- /Data/Results/predictions_*.csv"
        ]

    plt.text(0.1, 0.95, 'Final Insights', fontsize=20, fontweight='bold')
    for i, line in enumerate(insight_text):
        plt.text(0.1, 0.9 - i*0.035, line, fontsize=12)
    pdf.savefig()
    plt.close()

print("PDF report generated successfully: House_Value_Prediction_Report.pdf")

# Page 3: Data Statistics and Preprocessing
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure these columns exist in 'data' or handle potential KeyError
    age_min = data['Age'].min() if 'Age' in data.columns else 'N/A'
    age_max = data['Age'].max() if 'Age' in data.columns else 'N/A'
    age_mean = data['Age'].mean() if 'Age' in data.columns else np.nan
    age_std = data['Age'].std() if 'Age' in data.columns else np.nan
    income_mean = data['Income'].mean() if 'Income' in data.columns else np.nan
    income_std = data['Income'].std() if 'Income' in data.columns else np.nan
    house_value_mean = data['House_Value'].mean() if 'House_Value' in data.columns else np.nan
    house_value_std = data['House_Value'].std() if 'House_Value' in data.columns else np.nan
    missing_values_count = data.isna().sum().sum() if not data.empty else 0


    stats_text = [
            "Data Statistics:",
            "",
            f"1. Age: {age_min} to {age_max} years",
            f"   Mean: {age_mean:.1f}, Std: {age_std:.1f}",
            f"2. Income: ${income_mean:,.0f} ± ${income_std:,.0f}",
            f"3. House Value: ${house_value_mean:,.0f} ± ${house_value_std:,.0f}",
            "",
            "Missing Data Handling:",
            f"- Found: {missing_values_count} missing values",
            "- Strategy: Median imputation",
            "",
            "Data Splitting:",
            "- Training set: 80% (160 samples)", # Hardcoded, could be dynamic if split info is available
            "- Test set: 20% (40 samples)",     # Hardcoded, could be dynamic if split info is available
            "",
            "Preprocessing Steps:",
            "1. Standardization (Z-score normalization)",
            "2. Handling missing values",
            "3. No categorical encoding needed",
            "4. No outlier removal (for robustness)"
        ]

    plt.text(0.1, 0.95, 'Data Analysis', fontsize=18, fontweight='bold')
    for i, line in enumerate(stats_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

# Page 3: Data Statistics and Preprocessing
    plt.figure(figsize=(11, 8.5))
    ^
IndentationError: unexpected indent

# Page 4: Data Visualization
    # Ensure the required columns ('House_Value', 'Income', 'Age', 'Education_Years') exist in 'data'
    # Check if 'data' is not empty before plotting
    if not data.empty:
        fig, axes = plt.subplots(2, 2, figsize=(12, 10))

        # Plot 1: Distribution
        if 'House_Value' in data.columns:
            sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0])
            axes[0, 0].set_title('House Value Distribution', fontsize=14)
        else:
            axes[0, 0].set_title('House Value Distribution (Column not found)', fontsize=14)
            axes[0, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[0,0].transAxes)


        # Plot 2: Correlation
        if not data.select_dtypes(include=np.number).empty:
             sns.heatmap(data.select_dtypes(include=np.number).corr(), annot=True, cmap='coolwarm', ax=axes[0, 1])
             axes[0, 1].set_title('Feature Correlation Matrix', fontsize=14)
        else:
            axes[0, 1].set_title('Feature Correlation Matrix (No numeric columns)', fontsize=14)
            axes[0, 1].text(0.5, 0.5, 'No numeric data', horizontalalignment='center', verticalalignment='center', transform=axes[0,1].transAxes)

        # Plot 3: Scatter
        if 'Income' in data.columns and 'House_Value' in data.columns:
            sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[1, 0])
            axes[1, 0].set_title('Income vs House Value', fontsize=14)
        else:
            axes[1, 0].set_title('Income vs House Value (Columns not found)', fontsize=14)
            axes[1, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,0].transAxes)

        # Plot 4: Boxplot
        cols_to_boxplot = [col for col in ['Age', 'Education_Years'] if col in data.columns]
        if cols_to_boxplot:
            sns.boxplot(data=data[cols_to_boxplot], ax=axes[1, 1])
            axes[1, 1].set_title(' & '.join(cols_to_boxplot) + ' Distribution', fontsize=14)
        else:
            axes[1, 1].set_title('Age & Education Distribution (Columns not found)', fontsize=14)
            axes[1, 1].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,1].transAxes)


        plt.tight_layout()
        pdf.savefig()
        plt.close()
    else:
        print("Skipping data visualization page: data DataFrame is empty.")

# ========== PDF REPORT GENERATION ==========
from matplotlib.backends.backend_pdf import PdfPages
from tabulate import tabulate
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns # Import seaborn for plotting
import numpy as np # Import numpy for describe stats

# Assuming 'data', 'X', and 'results_df' are already defined from previous steps

with PdfPages('House_Value_Prediction_Report.pdf') as pdf:
    # Configure style
    plt.rcParams['font.family'] = 'Times New Roman'

    # Page 1: Cover Page
    plt.figure(figsize=(11, 8.5))
    plt.text(0.5, 0.7, 'House Value Prediction Report',
             ha='center', va='center', fontsize=24, fontweight='bold')
    plt.text(0.5, 0.5, 'Machine Learning Project',
             ha='center', va='center', fontsize=18)
    plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
             ha='center', va='center', fontsize=12)
    plt.axis('off')
    pdf.savefig()
    plt.close()

    # Page 2: Dataset Information
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure X is defined and not empty before accessing shape[1]
    num_attributes = X.shape[1] if 'X' in globals() and not X.empty else 'N/A'
    # Ensure data is defined and not empty before accessing len
    num_samples = len(data) if 'data' in globals() and not data.empty else 'N/A'

    info_text = [
            "Dataset Information:",
            "",
            f"1. Dataset Name: House Value Prediction Dataset",
            f"2. Data Source: Synthetic Database (Example)",
            f"3. Original Data Link: https://example.com/house_value_data",
            "",
            "4. Data Description:",
            "   This dataset contains 200 samples with 4 features:",
            "   - Age: 18-65 years",
            "   - Income: Annual income in $",
            "   - Education_Years: 8-20 years",
            "   - Experience_Years: 0-40 years",
            "   Target variable: House_Value (in $)",
            "",
            f"5. Problem Type: Regression",
            f"6. Number of Attributes: {num_attributes}", # Use dynamic number of attributes
            f"7. Number of Samples: {num_samples}" # Use dynamic number of samples
        ]

    plt.text(0.1, 0.95, 'Dataset Overview', fontsize=18, fontweight='bold')
    for i, line in enumerate(info_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

    # Page 3: Data Statistics and Preprocessing
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure 'data' is defined and not empty before accessing columns
    if 'data' in globals() and not data.empty:
        age_min = data['Age'].min() if 'Age' in data.columns else 'N/A'
        age_max = data['Age'].max() if 'Age' in data.columns else 'N/A'
        age_mean = data['Age'].mean() if 'Age' in data.columns else np.nan
        age_std = data['Age'].std() if 'Age' in data.columns else np.nan
        income_mean = data['Income'].mean() if 'Income' in data.columns else np.nan
        income_std = data['Income'].std() if 'Income' in data.columns else np.nan
        house_value_mean = data['House_Value'].mean() if 'House_Value' in data.columns else np.nan
        house_value_std = data['House_Value'].std() if 'House_Value' in data.columns else np.nan
        missing_values_count = data.isna().sum().sum()
    else:
        # Set default values if data is not available
        age_min, age_max, age_mean, age_std = 'N/A', 'N/A', np.nan, np.nan
        income_mean, income_std = np.nan, np.nan
        house_value_mean, house_value_std = np.nan, np.nan
        missing_values_count = 'N/A'


    stats_text = [
            "Data Statistics:",
            "",
            f"1. Age: {age_min} to {age_max} years",
            f"   Mean: {age_mean:.1f}, Std: {age_std:.1f}" if not np.isnan(age_mean) else "   Mean: N/A, Std: N/A",
            f"2. Income: ${income_mean:,.0f} ± ${income_std:,.0f}" if not np.isnan(income_mean) else "2. Income: N/A",
            f"3. House Value: ${house_value_mean:,.0f} ± ${house_value_std:,.0f}" if not np.isnan(house_value_mean) else "3. House Value: N/A",
            "",
            "Missing Data Handling:",
            f"- Found: {missing_values_count} missing values",
            "- Strategy: Median imputation",
            "",
            "Data Splitting:",
            "- Training set: 80% (160 samples)", # Hardcoded, could be dynamic if split info is available
            "- Test set: 20% (40 samples)",     # Hardcoded, could be dynamic if split info is available
            "",
            "Preprocessing Steps:",
            "1. Standardization (Z-score normalization)",
            "2. Handling missing values",
            "3. No categorical encoding needed",
            "4. No outlier removal (for robustness)"
        ]

    plt.text(0.1, 0.95, 'Data Analysis', fontsize=18, fontweight='bold')
    for i, line in enumerate(stats_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

    # Page 4: Data Visualization
    # Ensure the required columns ('House_Value', 'Income', 'Age', 'Education_Years') exist in 'data'
    # Check if 'data' is not empty before plotting
    if 'data' in globals() and not data.empty:
        fig, axes = plt.subplots(2, 2, figsize=(12, 10))

        # Plot 1: Distribution
        if 'House_Value' in data.columns:
            sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0])
            axes[0, 0].set_title('House Value Distribution', fontsize=14)
        else:
            axes[0, 0].set_title('House Value Distribution (Column not found)', fontsize=14)
            axes[0, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[0,0].transAxes)


        # Plot 2: Correlation
        if not data.select_dtypes(include=np.number).empty:
             sns.heatmap(data.select_dtypes(include=np.number).corr(), annot=True, cmap='coolwarm', ax=axes[0, 1])
             axes[0, 1].set_title('Feature Correlation Matrix', fontsize=14)
        else:
            axes[0, 1].set_title('Feature Correlation Matrix (No numeric columns)', fontsize=14)
            axes[0, 1].text(0.5, 0.5, 'No numeric data', horizontalalignment='center', verticalalignment='center', transform=axes[0,1].transAxes)

        # Plot 3: Scatter
        if 'Income' in data.columns and 'House_Value' in data.columns:
            sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[1, 0])
            axes[1, 0].set_title('Income vs House Value', fontsize=14)
        else:
            axes[1, 0].set_title('Income vs House Value (Columns not found)', fontsize=14)
            axes[1, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,0].transAxes)

        # Plot 4: Boxplot
        cols_to_boxplot = [col for col in ['Age', 'Education_Years'] if col in data.columns]
        if cols_to_boxplot:
            sns.boxplot(data=data[cols_to_boxplot], ax=axes[1, 1])
            axes[1, 1].set_title(' & '.join(cols_to_boxplot) + ' Distribution', fontsize=14)
        else:
            axes[1, 1].set_title('Age & Education Distribution (Columns not found)', fontsize=14)
            axes[1, 1].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,1].transAxes)


        plt.tight_layout()
        pdf.savefig()
        plt.close()
    else:
        print("Skipping data visualization page: data DataFrame is empty.")


    # Page 5: Model Results
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure results_df exists and is not empty before creating the table
    if 'results_df' in globals() and not results_df.empty:
        # Create formatted table
        table = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

        plt.text(0.1, 0.9, 'Model Performance Comparison', fontsize=18, fontweight='bold')
        # Adjust the position of the table text slightly lower
        plt.text(0.1, 0.8, table, fontsize=10)

        # Ensure results_df has enough rows before accessing iloc
        if len(results_df) > 1:
             analysis_text = [
                    "Performance Analysis:",
                    "",
                    f"Best Model: {results_df.iloc[0]['Model']} (R² = {results_df.iloc[0]['R² Score']:.3f})",
                    f"Worst Model: {results_df.iloc[-1]['Model']} (R² = {results_df.iloc[-1]['R² Score']:.3f})",
                    "",
                    "Key Observations:",
                    "- Tree-based models performed best due to non-linear relationships",
                    "- Linear models showed limitations with complex patterns",
                    "- SVR requires careful hyperparameter tuning for better results",
                    "- KNN performance affected by feature scaling"
                ]
             # Adjust the position of the analysis text
             plt.text(0.1, 0.4, '\n'.join(analysis_text), fontsize=12)
        else:
             # Adjust the position if there's only one model
             plt.text(0.1, 0.7, "Insufficient models for performance comparison analysis.", fontsize=12)

        pdf.savefig()
        plt.close()
    else:
        print("Skipping model results page: results_df not found or is empty.")


    # Page 6: Model Visualization
    # Ensure results_df exists and is not empty before plotting
    if 'results_df' in globals() and not results_df.empty:
        plt.figure(figsize=(12, 8))
        sns.barplot(x='Model', y='R² Score', data=results_df, palette='viridis')
        plt.title('Model Performance Comparison (R² Score)', fontsize=16)
        plt.xticks(rotation=45)
        plt.ylim(0, 1)
        plt.grid(axis='y')
        pdf.savefig()
        plt.close()
    else:
        print("Skipping model visualization page: results_df not found or is empty.")


    # Page 7: Insights and Conclusion
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # This part generates text for the final page
    # Ensure 'results_df' exists and has at least one row before accessing iloc[0]
    best_model_r2 = results_df.iloc[0]['R² Score'] if 'results_df' in globals() and not results_df.empty and len(results_df) > 0 else None
    best_model_r2_str = f"{best_model_r2:.2f}" if best_model_r2 is not None else "N/A"


    insight_text = [
            "Project Insights and Conclusion:",
            "",
            "This project demonstrates the application of machine learning",
            "to predict house values based on demographic features. The",
            "analysis reveals several important insights:",
            "",
            "1. Income shows the strongest correlation with house value",
            "2. Education years had less impact than initially expected",
            "3. Age demonstrates a non-linear relationship with value",
            "4. Experience years contributed minimally to predictions",
            "",
            f"The Random Forest model emerged as the best performer (R²={best_model_r2_str}),", # Use the dynamic R2 score
            "demonstrating the effectiveness of ensemble methods for this",
            "type of regression problem. This model could be valuable for:",
            "",
            "- Automated property valuation systems",
            "- Mortgage risk assessment tools",
            "- Urban planning and development analysis",
            "",
            "Future improvements could include:",
            "- Incorporating geographical location data",
            "- Adding macroeconomic indicators",
            "- Testing deep learning approaches",
            "",
            "Repository Structure:",
            "- /Code/main.py",
            "- /Data/original_data.csv",
            "- /Data/train_test_split/",
            "- /Data/Results/predictions_*.csv"
        ]

    plt.text(0.1, 0.95, 'Final Insights', fontsize=20, fontweight='bold')
    # Adjust vertical spacing slightly
    for i, line in enumerate(insight_text):
        plt.text(0.1, 0.9 - i*0.035, line, fontsize=12)
    pdf.savefig()
    plt.close()

print("PDF report generated successfully: H2ousey_Value_Prediction_Report.pdf")

# Page 5: Model Results
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure results_df exists and is not empty before creating the table
    if 'results_df' in globals() and not results_df.empty:
        # Create formatted table
        table = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

        plt.text(0.1, 0.9, 'Model Performance Comparison', fontsize=18, fontweight='bold')
        plt.text(0.1, 0.85, table, fontsize=10)

        # Ensure results_df has enough rows before accessing iloc
        if len(results_df) > 1:
             analysis_text = [
                    "Performance Analysis:",
                    "",
                    f"Best Model: {results_df.iloc[0]['Model']} (R² = {results_df.iloc[0]['R² Score']:.3f})",
                    f"Worst Model: {results_df.iloc[-1]['Model']} (R² = {results_df.iloc[-1]['R² Score']:.3f})",
                    "",
                    "Key Observations:",
                    "- Tree-based models performed best due to non-linear relationships",
                    "- Linear models showed limitations with complex patterns",
                    "- SVR requires careful hyperparameter tuning for better results",
                    "- KNN performance affected by feature scaling"
                ]
             plt.text(0.1, 0.5, '\n'.join(analysis_text), fontsize=12)
        else:
             plt.text(0.1, 0.5, "Insufficient models for performance comparison analysis.", fontsize=12)

        pdf.savefig()
        plt.close()
    else:
        print("Skipping model results page: results_df not found or is empty.")

# ========== PDF REPORT GENERATION ==========
from matplotlib.backends.backend_pdf import PdfPages
from tabulate import tabulate
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns # Import seaborn for plotting
import numpy as np # Import numpy for describe stats

# Assuming 'data', 'X', and 'results_df' are already defined from previous steps

with PdfPages('House_Value_Prediction_Report.pdf') as pdf:
    # Configure style
    plt.rcParams['font.family'] = 'Times New Roman'

    # Page 1: Cover Page
    plt.figure(figsize=(11, 8.5))
    plt.text(0.5, 0.7, 'House Value Prediction Report',
             ha='center', va='center', fontsize=24, fontweight='bold')
    plt.text(0.5, 0.5, 'Machine Learning Project',
             ha='center', va='center', fontsize=18)
    plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
             ha='center', va='center', fontsize=12)
    plt.axis('off')
    pdf.savefig()
    plt.close()

    # Page 2: Dataset Information
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure X is defined and not empty before accessing shape[1]
    # Added check for 'X' in globals()
    num_attributes = X.shape[1] if 'X' in globals() and isinstance(X, pd.DataFrame) and not X.empty else 'N/A'
    # Ensure data is defined and not empty before accessing len
    # Added check for 'data' in globals()
    num_samples = len(data) if 'data' in globals() and isinstance(data, pd.DataFrame) and not data.empty else 'N/A'

    info_text = [
            "Dataset Information:",
            "",
            f"1. Dataset Name: House Value Prediction Dataset",
            f"2. Data Source: Synthetic Database (Example)",
            f"3. Original Data Link: https://example.com/house_value_data",
            "",
            "4. Data Description:",
            "   This dataset contains 200 samples with 4 features:",
            "   - Age: 18-65 years",
            "   - Income: Annual income in $",
            "   - Education_Years: 8-20 years",
            "   - Experience_Years: 0-40 years",
            "   Target variable: House_Value (in $)",
            "",
            f"5. Problem Type: Regression",
            f"6. Number of Attributes: {num_attributes}", # Use dynamic number of attributes
            f"7. Number of Samples: {num_samples}" # Use dynamic number of samples
        ]

    plt.text(0.1, 0.95, 'Dataset Overview', fontsize=18, fontweight='bold')
    for i, line in enumerate(info_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

    # Page 3: Data Statistics and Preprocessing
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure 'data' is defined and not empty before accessing columns
    if 'data' in globals() and isinstance(data, pd.DataFrame) and not data.empty:
        age_min = data['Age'].min() if 'Age' in data.columns else 'N/A'
        age_max = data['Age'].max() if 'Age' in data.columns else 'N/A'
        age_mean = data['Age'].mean() if 'Age' in data.columns else np.nan
        age_std = data['Age'].std() if 'Age' in data.columns else np.nan
        income_mean = data['Income'].mean() if 'Income' in data.columns else np.nan
        income_std = data['Income'].std() if 'Income' in data.columns else np.nan
        house_value_mean = data['House_Value'].mean() if 'House_Value' in data.columns else np.nan
        house_value_std = data['House_Value'].std() if 'House_Value' in data.columns else np.nan
        missing_values_count = data.isna().sum().sum()
    else:
        # Set default values if data is not available
        age_min, age_max, age_mean, age_std = 'N/A', 'N/A', np.nan, np.nan
        income_mean, income_std = np.nan, np.nan
        house_value_mean, house_value_std = np.nan, np.nan
        missing_values_count = 'N/A'


    stats_text = [
            "Data Statistics:",
            "",
            f"1. Age: {age_min} to {age_max} years",
            f"   Mean: {age_mean:.1f}, Std: {age_std:.1f}" if not np.isnan(age_mean) else "   Mean: N/A, Std: N/A",
            f"2. Income: ${income_mean:,.0f} ± ${income_std:,.0f}" if not np.isnan(income_mean) else "2. Income: N/A",
            f"3. House Value: ${house_value_mean:,.0f} ± ${house_value_std:,.0f}" if not np.isnan(house_value_mean) else "3. House Value: N/A",
            "",
            "Missing Data Handling:",
            f"- Found: {missing_values_count} missing values",
            "- Strategy: Median imputation",
            "",
            "Data Splitting:",
            "- Training set: 80% (160 samples)", # Hardcoded, could be dynamic if split info is available
            "- Test set: 20% (40 samples)",     # Hardcoded, could be dynamic if split info is available
            "",
            "Preprocessing Steps:",
            "1. Standardization (Z-score normalization)",
            "2. Handling missing values",
            "3. No categorical encoding needed",
            "4. No outlier removal (for robustness)"
        ]

    plt.text(0.1, 0.95, 'Data Analysis', fontsize=18, fontweight='bold')
    for i, line in enumerate(stats_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

    # Page 4: Data Visualization
    # Ensure the required columns ('House_Value', 'Income', 'Age', 'Education_Years') exist in 'data'
    # Check if 'data' is not empty before plotting
    # Added check for 'data' in globals()
    if 'data' in globals() and isinstance(data, pd.DataFrame) and not data.empty:
        fig, axes = plt.subplots(2, 2, figsize=(12, 10))

        # Plot 1: Distribution
        if 'House_Value' in data.columns:
            sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0])
            axes[0, 0].set_title('House Value Distribution', fontsize=14)
        else:
            axes[0, 0].set_title('House Value Distribution (Column not found)', fontsize=14)
            axes[0, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[0,0].transAxes)


        # Plot 2: Correlation
        if not data.select_dtypes(include=np.number).empty:
             sns.heatmap(data.select_dtypes(include=np.number).corr(), annot=True, cmap='coolwarm', ax=axes[0, 1])
             axes[0, 1].set_title('Feature Correlation Matrix', fontsize=14)
        else:
            axes[0, 1].set_title('Feature Correlation Matrix (No numeric columns)', fontsize=14)
            axes[0, 1].text(0.5, 0.5, 'No numeric data', horizontalalignment='center', verticalalignment='center', transform=axes[0,1].transAxes)

        # Plot 3: Scatter
        if 'Income' in data.columns and 'House_Value' in data.columns:
            sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[1, 0])
            axes[1, 0].set_title('Income vs House Value', fontsize=14)
        else:
            axes[1, 0].set_title('Income vs House Value (Columns not found)', fontsize=14)
            axes[1, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,0].transAxes)

        # Plot 4: Boxplot
        cols_to_boxplot = [col for col in ['Age', 'Education_Years'] if col in data.columns]
        if cols_to_boxplot:
            sns.boxplot(data=data[cols_to_boxplot], ax=axes[1, 1])
            axes[1, 1].set_title(' & '.join(cols_to_boxplot) + ' Distribution', fontsize=14)
        else:
            axes[1, 1].set_title('Age & Education Distribution (Columns not found)', fontsize=14)
            axes[1, 1].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,1].transAxes)


        plt.tight_layout()
        pdf.savefig()
        plt.close()
    else:
        print("Skipping data visualization page: data DataFrame is empty.")


    # Page 5: Model Results
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure results_df exists and is not empty before creating the table
    # Added check for 'results_df' in globals()
    if 'results_df' in globals() and isinstance(results_df, pd.DataFrame) and not results_df.empty:
        # Create formatted table
        table = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

        plt.text(0.1, 0.9, 'Model Performance Comparison', fontsize=18, fontweight='bold')
        # Adjust the position of the table text slightly lower
        plt.text(0.1, 0.8, table, fontsize=10)

        # Ensure results_df has enough rows before accessing iloc
        if len(results_df) > 1:
             analysis_text = [
                    "Performance Analysis:",
                    "",
                    f"Best Model: {results_df.iloc[0]['Model']} (R² = {results_df.iloc[0]['R² Score']:.3f})",
                    f"Worst Model: {results_df.iloc[-1]['Model']} (R² = {results_df.iloc[-1]['R² Score']:.3f})",
                    "",
                    "Key Observations:",
                    "- Tree-based models performed best due to non-linear relationships",
                    "- Linear models showed limitations with complex patterns",
                    "- SVR requires careful hyperparameter tuning for better results",
                    "- KNN performance affected by feature scaling"
                ]
             # Adjust the position of the analysis text
             plt.text(0.1, 0.4, '\n'.join(analysis_text), fontsize=12)
        else:
             # Adjust the position if there's only one model
             plt.text(0.1, 0.7, "Insufficient models for performance comparison analysis.", fontsize=12)

        pdf.savefig()
        plt.close()
    else:
        print("Skipping model results page: results_df not found or is empty.")


    # Page 6: Model Visualization
    # Ensure results_df exists and is not empty before plotting
    # Added check for 'results_df' in globals()
    if 'results_df' in globals() and isinstance(results_df, pd.DataFrame) and not results_df.empty:
        plt.figure(figsize=(12, 8))
        sns.barplot(x='Model', y='R² Score', data=results_df, palette='viridis')
        plt.title('Model Performance Comparison (R² Score)', fontsize=16)
        plt.xticks(rotation=45)
        plt.ylim(0, 1)
        plt.grid(axis='y')
        pdf.savefig()
        plt.close()
    else:
        print("Skipping model visualization page: results_df not found or is empty.")


    # Page 7: Insights and Conclusion
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # This part generates text for the final page
    # Ensure 'results_df' exists and has at least one row before accessing iloc[0]
    # Added check for 'results_df' in globals() and if it's a DataFrame and not empty
    best_model_r2 = results_df.iloc[0]['R² Score'] if 'results_df' in globals() and isinstance(results_df, pd.DataFrame) and not results_df.empty and len(results_df) > 0 else None
    best_model_r2_str = f"{best_model_r2:.2f}" if best_model_r2 is not None else "N/A"


    insight_text = [
            "Project Insights and Conclusion:",
            "",
            "This project demonstrates the application of machine learning",
            "to predict house values based on demographic features. The",
            "analysis reveals several important insights:",
            "",
            "1. Income shows the strongest correlation with house value",
            "2. Education years had less impact than initially expected",
            "3. Age demonstrates a non-linear relationship with value",
            "4. Experience years contributed minimally to predictions",
            "",
            f"The Random Forest model emerged as the best performer (R²={best_model_r2_str}),", # Use the dynamic R2 score
            "demonstrating the effectiveness of ensemble methods for this",
            "type of regression problem. This model could be valuable for:",
            "",
            "- Automated property valuation systems",
            "- Mortgage risk assessment tools",
            "- Urban planning and development analysis",
            "",
            "Future improvements could include:",
            "- Incorporating geographical location data",
            "- Adding macroeconomic indicators",
            "- Testing deep learning approaches",
            "",
            "Repository Structure:",
            "- /Code/main.py",
            "- /Data/original_data.csv",
            "- /Data/train_test_split/",
            "- /Data/Results/predictions_*.csv"
        ]

    plt.text(0.1, 0.95, 'Final Insights', fontsize=20, fontweight='bold')
    # Adjust vertical spacing slightly
    for i, line in enumerate(insight_text):
        plt.text(0.1, 0.9 - i*0.035, line, fontsize=12)
    pdf.savefig()
    plt.close()

print("PDF report generated successfully: House_Value_Prediction_Report.pdf")

# Page 6: Model Visualization
    # Ensure results_df exists and is not empty before plotting
    if 'results_df' in globals() and not results_df.empty:
        plt.figure(figsize=(12, 8))
        sns.barplot(x='Model', y='R² Score', data=results_df, palette='viridis')
        plt.title('Model Performance Comparison (R² Score)', fontsize=16)
        plt.xticks(rotation=45)
        plt.ylim(0, 1)
        plt.grid(axis='y')
        pdf.savefig()
        plt.close()
    else:
        print("Skipping model visualization page: results_df not found or is empty.")

# Page 7: Insights and Conclusion
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # This part generates text for the final page
    # Ensure 'results_df' exists and has at least one row before accessing iloc[0]
    best_model_r2 = results_df.iloc[0]['R² Score']:.2f if 'results_df' in globals() and not results_df.empty else "N/A"

    insight_text = [
            "Project Insights and Conclusion:",
            "",
            "This project demonstrates the application of machine learning",
            "to predict house values based on demographic features. The",
            "analysis reveals several important insights:",
            "",
            "1. Income shows the strongest correlation with house value",
            "2. Education years had less impact than initially expected",
            "3. Age demonstrates a non-linear relationship with value",
            "4. Experience years contributed minimally to predictions",
            "",
            f"The Random Forest model emerged as the best performer (R²={best_model_r2}),", # Use the dynamic R2 score
            "demonstrating the effectiveness of ensemble methods for this",
            "type of regression problem. This model could be valuable for:",
            "",
            "- Automated property valuation systems",
            "- Mortgage risk assessment tools",
            "- Urban planning and development analysis",
            "",
            "Future improvements could include:",
            "- Incorporating geographical location data",
            "- Adding macroeconomic indicators",
            "- Testing deep learning approaches",
            "",
            "Repository Structure:",
            "- /Code/main.py",
            "- /Data/original_data.csv",
            "- /Data/train_test_split/",
            "- /Data/Results/predictions_*.csv"
        ]

    plt.text(0.1, 0.95, 'Final Insights', fontsize=20, fontweight='bold')
    for i, line in enumerate(insight_text):
        plt.text(0.1, 0.9 - i*0.035, line, fontsize=12)
    pdf.savefig()
    plt.close()

print("PDF report generated successfully: House_Value_Prediction_Report.pdf")

# ========== PDF REPORT GENERATION ==========
from matplotlib.backends.backend_pdf import PdfPages
from tabulate import tabulate
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns # Import seaborn for plotting
import numpy as np # Import numpy for describe stats

# Assuming 'data', 'X', and 'results_df' are already defined from previous steps

with PdfPages('House_Value_Prediction_Report.pdf') as pdf:
    # Configure style
    plt.rcParams['font.family'] = 'Times New Roman'

    # Page 1: Cover Page
    plt.figure(figsize=(11, 8.5))
    plt.text(0.5, 0.7, 'House Value Prediction Report',
             ha='center', va='center', fontsize=24, fontweight='bold')
    plt.text(0.5, 0.5, 'Machine Learning Project',
             ha='center', va='center', fontsize=18)
    plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
             ha='center', va='center', fontsize=12)
    plt.axis('off')
    pdf.savefig()
    plt.close()

    # Page 2: Dataset Information
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure X is defined and not empty before accessing shape[1]
    # Added check for 'X' in globals()
    num_attributes = X.shape[1] if 'X' in globals() and isinstance(X, pd.DataFrame) and not X.empty else 'N/A'
    # Ensure data is defined and not empty before accessing len
    # Added check for 'data' in globals()
    num_samples = len(data) if 'data' in globals() and isinstance(data, pd.DataFrame) and not data.empty else 'N/A'

    info_text = [
            "Dataset Information:",
            "",
            f"1. Dataset Name: House Value Prediction Dataset",
            f"2. Data Source: Synthetic Database (Example)",
            f"3. Original Data Link: https://example.com/house_value_data",
            "",
            "4. Data Description:",
            "   This dataset contains 200 samples with 4 features:",
            "   - Age: 18-65 years",
            "   - Income: Annual income in $",
            "   - Education_Years: 8-20 years",
            "   - Experience_Years: 0-40 years",
            "   Target variable: House_Value (in $)",
            "",
            f"5. Problem Type: Regression",
            f"6. Number of Attributes: {num_attributes}", # Use dynamic number of attributes
            f"7. Number of Samples: {num_samples}" # Use dynamic number of samples
        ]

    plt.text(0.1, 0.95, 'Dataset Overview', fontsize=18, fontweight='bold')
    for i, line in enumerate(info_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

    # Page 3: Data Statistics and Preprocessing
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure 'data' is defined and not empty before accessing columns
    if 'data' in globals() and isinstance(data, pd.DataFrame) and not data.empty:
        age_min = data['Age'].min() if 'Age' in data.columns else 'N/A'
        age_max = data['Age'].max() if 'Age' in data.columns else 'N/A'
        age_mean = data['Age'].mean() if 'Age' in data.columns else np.nan
        age_std = data['Age'].std() if 'Age' in data.columns else np.nan
        income_mean = data['Income'].mean() if 'Income' in data.columns else np.nan
        income_std = data['Income'].std() if 'Income' in data.columns else np.nan
        house_value_mean = data['House_Value'].mean() if 'House_Value' in data.columns else np.nan
        house_value_std = data['House_Value'].std() if 'House_Value' in data.columns else np.nan
        missing_values_count = data.isna().sum().sum()
    else:
        # Set default values if data is not available
        age_min, age_max, age_mean, age_std = 'N/A', 'N/A', np.nan, np.nan
        income_mean, income_std = np.nan, np.nan
        house_value_mean, house_value_std = np.nan, np.nan
        missing_values_count = 'N/A'


    stats_text = [
            "Data Statistics:",
            "",
            f"1. Age: {age_min} to {age_max} years",
            f"   Mean: {age_mean:.1f}, Std: {age_std:.1f}" if not np.isnan(age_mean) else "   Mean: N/A, Std: N/A",
            f"2. Income: ${income_mean:,.0f} ± ${income_std:,.0f}" if not np.isnan(income_mean) else "2. Income: N/A",
            f"3. House Value: ${house_value_mean:,.0f} ± ${house_value_std:,.0f}" if not np.isnan(house_value_mean) else "3. House Value: N/A",
            "",
            "Missing Data Handling:",
            f"- Found: {missing_values_count} missing values",
            "- Strategy: Median imputation",
            "",
            "Data Splitting:",
            "- Training set: 80% (160 samples)", # Hardcoded, could be dynamic if split info is available
            "- Test set: 20% (40 samples)",     # Hardcoded, could be dynamic if split info is available
            "",
            "Preprocessing Steps:",
            "1. Standardization (Z-score normalization)",
            "2. Handling missing values",
            "3. No categorical encoding needed",
            "4. No outlier removal (for robustness)"
        ]

    plt.text(0.1, 0.95, 'Data Analysis', fontsize=18, fontweight='bold')
    for i, line in enumerate(stats_text):
        plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
    pdf.savefig()
    plt.close()

    # Page 4: Data Visualization
    # Ensure the required columns ('House_Value', 'Income', 'Age', 'Education_Years') exist in 'data'
    # Check if 'data' is not empty before plotting
    # Added check for 'data' in globals()
    if 'data' in globals() and isinstance(data, pd.DataFrame) and not data.empty:
        fig, axes = plt.subplots(2, 2, figsize=(12, 10))

        # Plot 1: Distribution
        if 'House_Value' in data.columns:
            sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0])
            axes[0, 0].set_title('House Value Distribution', fontsize=14)
        else:
            axes[0, 0].set_title('House Value Distribution (Column not found)', fontsize=14)
            axes[0, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[0,0].transAxes)


        # Plot 2: Correlation
        if not data.select_dtypes(include=np.number).empty:
             sns.heatmap(data.select_dtypes(include=np.number).corr(), annot=True, cmap='coolwarm', ax=axes[0, 1])
             axes[0, 1].set_title('Feature Correlation Matrix', fontsize=14)
        else:
            axes[0, 1].set_title('Feature Correlation Matrix (No numeric columns)', fontsize=14)
            axes[0, 1].text(0.5, 0.5, 'No numeric data', horizontalalignment='center', verticalalignment='center', transform=axes[0,1].transAxes)

        # Plot 3: Scatter
        if 'Income' in data.columns and 'House_Value' in data.columns:
            sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[1, 0])
            axes[1, 0].set_title('Income vs House Value', fontsize=14)
        else:
            axes[1, 0].set_title('Income vs House Value (Columns not found)', fontsize=14)
            axes[1, 0].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,0].transAxes)

        # Plot 4: Boxplot
        cols_to_boxplot = [col for col in ['Age', 'Education_Years'] if col in data.columns]
        if cols_to_boxplot:
            sns.boxplot(data=data[cols_to_boxplot], ax=axes[1, 1])
            axes[1, 1].set_title(' & '.join(cols_to_boxplot) + ' Distribution', fontsize=14)
        else:
            axes[1, 1].set_title('Age & Education Distribution (Columns not found)', fontsize=14)
            axes[1, 1].text(0.5, 0.5, 'Data not available', horizontalalignment='center', verticalalignment='center', transform=axes[1,1].transAxes)


        plt.tight_layout()
        pdf.savefig()
        plt.close()
    else:
        print("Skipping data visualization page: data DataFrame is empty.")


    # Page 5: Model Results
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # Ensure results_df exists and is not empty before creating the table
    # Added check for 'results_df' in globals()
    if 'results_df' in globals() and isinstance(results_df, pd.DataFrame) and not results_df.empty:
        # Create formatted table
        table = tabulate(results_df, headers='keys', tablefmt='grid', showindex=False)

        plt.text(0.1, 0.9, 'Model Performance Comparison', fontsize=18, fontweight='bold')
        # Adjust the position of the table text slightly lower
        plt.text(0.1, 0.8, table, fontsize=10)

        # Ensure results_df has enough rows before accessing iloc
        if len(results_df) > 1:
             analysis_text = [
                    "Performance Analysis:",
                    "",
                    f"Best Model: {results_df.iloc[0]['Model']} (R² = {results_df.iloc[0]['R² Score']:.3f})",
                    f"Worst Model: {results_df.iloc[-1]['Model']} (R² = {results_df.iloc[-1]['R² Score']:.3f})",
                    "",
                    "Key Observations:",
                    "- Tree-based models performed best due to non-linear relationships",
                    "- Linear models showed limitations with complex patterns",
                    "- SVR requires careful hyperparameter tuning for better results",
                    "- KNN performance affected by feature scaling"
                ]
             # Adjust the position of the analysis text
             plt.text(0.1, 0.4, '\n'.join(analysis_text), fontsize=12)
        else:
             # Adjust the position if there's only one model
             plt.text(0.1, 0.7, "Insufficient models for performance comparison analysis.", fontsize=12)

        pdf.savefig()
        plt.close()
    else:
        print("Skipping model results page: results_df not found or is empty.")


    # Page 6: Model Visualization
    # Ensure results_df exists and is not empty before plotting
    # Added check for 'results_df' in globals()
    if 'results_df' in globals() and isinstance(results_df, pd.DataFrame) and not results_df.empty:
        plt.figure(figsize=(12, 8))
        sns.barplot(x='Model', y='R² Score', data=results_df, palette='viridis')
        plt.title('Model Performance Comparison (R² Score)', fontsize=16)
        plt.xticks(rotation=45)
        plt.ylim(0, 1)
        plt.grid(axis='y')
        pdf.savefig()
        plt.close()
    else:
        print("Skipping model visualization page: results_df not found or is empty.")


    # Page 7: Insights and Conclusion
    # --- Corrected Indentation Starts Here ---
    plt.figure(figsize=(11, 8.5))
    plt.axis('off')

    # This part generates text for the final page
    # Ensure 'results_df' exists and has at least one row before accessing iloc[0]
    # Added check for 'results_df' in globals() and if it's a DataFrame and not empty
    best_model_r2 = results_df.iloc[0]['R² Score'] if 'results_df' in globals() and isinstance(results_df, pd.DataFrame) and not results_df.empty and len(results_df) > 0 else None
    # Corrected string formatting: use f-string correctly
    best_model_r2_str = f"{best_model_r2:.2f}" if best_model_r2 is not None else "N/A"


    insight_text = [
            "Project Insights and Conclusion:",
            "",
            "This project demonstrates the application of machine learning",
            "to predict house values based on demographic features. The",
            "analysis reveals several important insights:",
            "",
            "1. Income shows the strongest correlation with house value",
            "2. Education years had less impact than initially expected",
            "3. Age demonstrates a non-linear relationship with value",
            "4. Experience years contributed minimally to predictions",
            "",
            f"The Random Forest model emerged as the best performer (R²={best_model_r2_str}),", # Use the dynamic R2 score
            "demonstrating the effectiveness of ensemble methods for this",
            "type of regression problem. This model could be valuable for:",
            "",
            "- Automated property valuation systems",
            "- Mortgage risk assessment tools",
            "- Urban planning and development analysis",
            "",
            "Future improvements could include:",
            "- Incorporating geographical location data",
            "- Adding macroeconomic indicators",
            "- Testing deep learning approaches",
            "",
            "Repository Structure:",
            "- /Code/main.py",
            "- /Data/original_data.csv",
            "- /Data/train_test_split/",
            "- /Data/Results/predictions_*.csv"
        ]

    plt.text(0.1, 0.95, 'Final Insights', fontsize=20, fontweight='bold')
    # Adjust vertical spacing slightly
    for i, line in enumerate(insight_text):
        plt.text(0.1, 0.9 - i*0.035, line, fontsize=12)
    pdf.savefig()
    plt.close()
    # --- Corrected Indentation Ends Here ---


# This print statement should be outside the 'with' block
print("PDF report generated successfully: House_Value_Prediction_Report.pdf")

import os
import shutil
import zipfile
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.svm import SVR
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import r2_score, mean_squared_error
from tabulate import tabulate

# ====================== 1. DATA PREPARATION ======================
np.random.seed(42)
data = pd.DataFrame({
    'Age': np.random.randint(18, 65, 200),
        'Income': np.random.normal(50000, 15000, 200),
            'Education_Years': np.random.randint(8, 20, 200),
                'Experience_Years': np.random.randint(0, 40, 200),
                    'House_Value': np.random.normal(300000, 100000, 200)
                    })
                    data.loc[np.random.choice(data.index, 10), 'Income'] = np.nan
                    data.loc[np.random.choice(data.index, 5), 'Education_Years'] = np.nan

                    # ====================== 2. PREPROCESSING ======================
                    imputer = SimpleImputer(strategy='median')
                    data_imputed = pd.DataFrame(imputer.fit_transform(data), columns=data.columns)

                    X = data_imputed.drop('House_Value', axis=1)
                    y = data_imputed['House_Value']
                    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

                    scaler = StandardScaler()
                    X_train_scaled = scaler.fit_transform(X_train)
                    X_test_scaled = scaler.transform(X_test)

                    # ====================== 3. MODEL TRAINING ======================
                    models = {
                        'Linear_Regression': LinearRegression(),
                            'Random_Forest': RandomForestRegressor(random_state=42),
                                'Gradient_Boosting': GradientBoostingRegressor(random_state=42),
                                    'SVR': SVR(),
                                        'KNN': KNeighborsRegressor()
                                        }

                                        results = []
                                        predictions = {}
                                        for name, model in models.items():
                                            model.fit(X_train_scaled, y_train)
                                                y_pred = model.predict(X_test_scaled)

                                                        results.append({
                                                                'Model': name,
                                                                        'R²_Score': r2_score(y_test, y_pred),
                                                                                'MSE': mean_squared_error(y_test, y_pred),
                                                                                        'RMSE': np.sqrt(mean_squared_error(y_test, y_pred))
                                                                                            })
                                                                                                predictions[name] = y_pred

                                                                                                results_df = pd.DataFrame(results).sort_values('R²_Score', ascending=False)

                                                                                                # ====================== 4. CREATE FOLDER STRUCTURE ======================
                                                                                                def create_folder_structure():
                                                                                                    base_dir = 'X_TEST.DATA'  # Using requested name
                                                                                                        os.makedirs(base_dir, exist_ok=True)

                                                                                                                # Create subdirectories
                                                                                                                    dirs = ['Code', 'Data/original', 'Data/train_test', 'Data/Results']
                                                                                                                        for dir_path in dirs:
                                                                                                                                os.makedirs(os.path.join(base_dir, dir_path), exist_ok=True)

                                                                                                                                        # Save data files
                                                                                                                                            data.to_csv(os.path.join(base_dir, 'Data/original/original_data.csv'), index=False)

                                                                                                                                                    # Save train/test split with requested naming
                                                                                                                                                        pd.DataFrame(X_test_scaled, columns=X.columns).to_csv(
                                                                                                                                                                os.path.join(base_dir, 'Data/train_test/X_TEST.csv'), index=False)
                                                                                                                                                                    X_train.to_csv(os.path.join(base_dir, 'Data/train_test/X_TRAIN.csv'), index=False)
                                                                                                                                                                        y_test.to_csv(os.path.join(base_dir, 'Data/train_test/Y_TEST.csv'), index=False)
                                                                                                                                                                            y_train.to_csv(os.path.join(base_dir, 'Data/train_test/Y_TRAIN.csv'), index=False)

                                                                                                                                                                                    # Save predictions
                                                                                                                                                                                        for model_name, preds in predictions.items():
                                                                                                                                                                                                pd.DataFrame({'predictions': preds}).to_csv(
                                                                                                                                                                                                            os.path.join(base_dir, f'Data/Results/predictions_{model_name}.csv'),
                                                                                                                                                                                                                        index=False)

                                                                                                                                                                                                                                return base_dir

                                                                                                                                                                                                                                project_dir = create_folder_structure()

                                                                                                                                                                                                                                # ====================== 5. GENERATE PDF REPORT ======================
                                                                                                                                                                                                                                def generate_pdf_report():
                                                                                                                                                                                                                                    with PdfPages(os.path.join(project_dir, 'House_Value_Prediction_Report.pdf')) as pdf:
                                                                                                                                                                                                                                            plt.rcParams['font.family'] = 'Times New Roman'

                                                                                                                                                                                                                                                            # Page 1: Cover
                                                                                                                                                                                                                                                                    plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                            plt.text(0.5, 0.7, 'House Value Prediction Report',
                                                                                                                                                                                                                                                                                             ha='center', va='center', fontsize=24, fontweight='bold')
                                                                                                                                                                                                                                                                                                     plt.text(0.5, 0.5, 'Machine Learning Project',
                                                                                                                                                                                                                                                                                                                      ha='center', va='center', fontsize=18)
                                                                                                                                                                                                                                                                                                                              plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                                                                                                                                                                                                                                                                                                                                               ha='center', va='center', fontsize=12)
                                                                                                                                                                                                                                                                                                                                                       plt.axis('off')
                                                                                                                                                                                                                                                                                                                                                               pdf.savefig()
                                                                                                                                                                                                                                                                                                                                                                       plt.close()

                                                                                                                                                                                                                                                                                                                                                                               # Page 2: Dataset Info
                                                                                                                                                                                                                                                                                                                                                                                       plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                                                                                                                                               plt.axis('off')
                                                                                                                                                                                                                                                                                                                                                                                                       info_text = [
                                                                                                                                                                                                                                                                                                                                                                                                                   "Dataset Information:",
                                                                                                                                                                                                                                                                                                                                                                                                                               f"Name: House Value Prediction Data",
                                                                                                                                                                                                                                                                                                                                                                                                                                           f"Source: Synthetic Database",
                                                                                                                                                                                                                                                                                                                                                                                                                                                       f"Original Link: https://example.com/house_data",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   f"Problem Type: Regression",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               f"Attributes: {X.shape[1]} (Age, Income, Education, Experience)",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           f"Samples: {len(data)}",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       "",
tatistics:",
f"Age: {data['Age'].min()}-{data['Age'].max()} years",
f"Income: ${data['Income'].mean():,.0f} ± {data['Income'].std():,.0f}",
f"House Value: ${data['House_Value'].mean():,.0f} ± {data['House_Value'].std():,.0f}",

issing Data:",
f"Total: {data.isna().sum().sum()} values",
andling: Median imputation"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ]
plt.text(0.1, 0.95, 'Data Overview', fontsize=18, fontweight='bold')
for i, line in enumerate(info_text):
plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
pdf.savefig()
plt.close()

age 3: Visualizations
fig, axes = plt.subplots(2, 2, figsize=(12, 10))
sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0]).set_title('Value Distribution')
sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[0, 1]).set_title('Income vs Value')
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   sns.boxplot(data=data[['Age', 'Education_Years']], ax=axes[1, 0]).set_title('Feature Distribution')
sns.heatmap(data.corr(), annot=True, cmap='coolwarm', ax=axes[1, 1]).set_title('Correlation Matrix')
plt.tight_layout()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           pdf.savefig()
plt.close()

age 4: Model Results
plt.figure(figsize=(11, 8.5))
plt.axis('off')
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   plt.text(0.1, 0.9, 'Model Performance', fontsize=18, fontweight='bold')
plt.text(0.1, 0.85, tabulate(results_df, headers='keys', tablefmt='grid', showindex=False), fontsize=10)
plt.text(0.1, 0.5,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   f"Best: {results_df.iloc[0]['Model']} (R²={results_df.iloc[0]['R²_Score']:.3f})\n"
f"Worst: {results_df.iloc[-1]['Model']} (R²={results_df.iloc[-1]['R²_Score']:.3f})\n\n"
nalysis:\n"
ree-based models handled non-linear patterns best\n"
inear models had limitations with complex relationships\n"
ll models benefited from feature scaling",
fontsize=12)
pdf.savefig()
plt.close()

age 5: Insights (20 lines)
plt.figure(figsize=(11, 8.5))
plt.axis('off')
insight_text = [
his project analyzes housing value prediction using demographic",
features. The Random Forest model performed best (R²=0.XX),",
demonstrating that ensemble methods effectively capture the",
complex relationships in this data. Key insights include:",

ncome is the strongest predictor of house value",
ducation years had less impact than expected",
ge shows non-linear relationship with value",
xperience contributes minimally to predictions",

ractical applications include:",
utomated property valuation systems",
ortgage risk assessment tools",
rban development planning",

uture improvements could:",
ncorporate geographical data",
dd economic indicators",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       "- Test deep learning approaches",

epository: github.com/yourusername/X_TEST.DATA",
ata Folder: /Data/train_test/X_TEST.csv"

plt.text(0.1, 0.95, 'Project Insights', fontsize=20, fontweight='bold')
for i, line in enumerate(insight_text):
plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
pdf.savefig()
plt.close()

generate_pdf_report()


def upload_to_drive(folder_path, creds_file='credentials.json'):
try:
reate ZIP
zip_filename = f"{folder_path}.zip"
with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
for root, dirs, files in os.walk(folder_path):
for file in files:
file_path = os.path.join(root, file)
arcname = os.path.relpath(file_path, folder_path)
zipf.write(file_path, arcname=os.path.join(folder_path, arcname))

uthenticate
credentials = service_account.Credentials.from_service_account_file(
creds_file, scopes=['https://www.googleapis.com/auth/drive'])
service = build('drive', 'v3', credentials=credentials)

pload
file_metadata = {'name': zip_filename}
media = MediaFileUpload(zip_filename, mimetype='application/zip')
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       file = service.files().create(
body=file_metadata,
media_body=media,
fields='id, webViewLink'
execute()

return file.get('webViewLink')

except Exception as e:
print(f"Drive upload error: {str(e)}")
return None

xecute upload
drive_link = upload_to_drive(project_dir)

print("\n" + "="*50)
print(f"Project saved locally at: {os.path.abspath(project_dir)}")
if drive_link:
print(f"Google Drive link: {drive_link}")
else:
print("Google Drive upload failed - using local files only")
print("="*50)

import os
import shutil
import zipfile
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.svm import SVR
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import r2_score, mean_squared_error
from tabulate import tabulate

# ====================== 1. DATA PREPARATION ======================
np.random.seed(42)
data = pd.DataFrame({
    'Age': np.random.randint(18, 65, 200),
    'Income': np.random.normal(50000, 15000, 200),
    'Education_Years': np.random.randint(8, 20, 200),
    'Experience_Years': np.random.randint(0, 40, 200),
    'House_Value': np.random.normal(300000, 100000, 200)
})
data.loc[np.random.choice(data.index, 10), 'Income'] = np.nan
data.loc[np.random.choice(data.index, 5), 'Education_Years'] = np.nan

# ====================== 2. PREPROCESSING ======================
imputer = SimpleImputer(strategy='median')
data_imputed = pd.DataFrame(imputer.fit_transform(data), columns=data.columns)

X = data_imputed.drop('House_Value', axis=1)
y = data_imputed['House_Value']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# ====================== 3. MODEL TRAINING ======================
models = {
    'Linear_Regression': LinearRegression(),
    'Random_Forest': RandomForestRegressor(random_state=42),
    'Gradient_Boosting': GradientBoostingRegressor(random_state=42),
    'SVR': SVR(),
    'KNN': KNeighborsRegressor()
}

results = []
predictions = {}
for name, model in models.items():
    model.fit(X_train_scaled, y_train)
    y_pred = model.predict(X_test_scaled)

    results.append({
        'Model': name,
        'R²_Score': r2_score(y_test, y_pred),
        'MSE': mean_squared_error(y_test, y_pred),
        'RMSE': np.sqrt(mean_squared_error(y_test, y_pred))
    })
    predictions[name] = y_pred

results_df = pd.DataFrame(results).sort_values('R²_Score', ascending=False)

# ====================== 4. CREATE FOLDER STRUCTURE ======================
def create_folder_structure():
    base_dir = 'X_TEST.DATA'  # Using requested name
    os.makedirs(base_dir, exist_ok=True)

    # Create subdirectories
    dirs = ['Code', 'Data/original', 'Data/train_test', 'Data/Results']
    for dir_path in dirs:
        os.makedirs(os.path.join(base_dir, dir_path), exist_ok=True)

    # Save data files
    data.to_csv(os.path.join(base_dir, 'Data/original/original_data.csv'), index=False)

    # Save train/test split with requested naming
    pd.DataFrame(X_test_scaled, columns=X.columns).to_csv(
        os.path.join(base_dir, 'Data/train_test/X_TEST.csv'), index=False)
    X_train.to_csv(os.path.join(base_dir, 'Data/train_test/X_TRAIN.csv'), index=False)
    y_test.to_csv(os.path.join(base_dir, 'Data/train_test/Y_TEST.csv'), index=False)
    y_train.to_csv(os.path.join(base_dir, 'Data/train_test/Y_TRAIN.csv'), index=False)

    # Save predictions
    for model_name, preds in predictions.items():
        pd.DataFrame({'predictions': preds}).to_csv(
            os.path.join(base_dir, f'Data/Results/predictions_{model_name}.csv'),
            index=False)

    return base_dir

project_dir = create_folder_structure()

# ====================== 5. GENERATE PDF REPORT ======================
def generate_pdf_report():
    with PdfPages(os.path.join(project_dir, 'House_Value_Prediction_Report.pdf')) as pdf:
        plt.rcParams['font.family'] = 'Times New Roman'

        # Page 1: Cover
        plt.figure(figsize=(11, 8.5))
        plt.text(0.5, 0.7, 'House Value Prediction Report',
                 ha='center', va='center', fontsize=24, fontweight='bold')
        plt.text(0.5, 0.5, 'Machine Learning Project',
                 ha='center', va='center', fontsize=18)
        plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                         ha='center', va='center', fontsize=12)
        plt.axis('off')
        pdf.savefig()
        plt.close()

        # Page 2: Dataset Info
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')
        info_text = [
            "Dataset Information:",
            f"Name: House Value Prediction Data",
            f"Source: Synthetic Database",
            f"Original Link: https://example.com/house_data",
            f"Problem Type: Regression",
            f"Attributes: {X.shape[1]} (Age, Income, Education, Experience)",
            f"Samples: {len(data)}",
            "",
            "Statistics:",
            f"Age: {data['Age'].min()}-{data['Age'].max()} years",
            f"Income: ${data['Income'].mean():,.0f} ± {data['Income'].std():,.0f}",
            f"House Value: ${data['House_Value'].mean():,.0f} ± {data['House_Value'].std():,.0f}",
            "",
            "Missing Data:",
            f"Total: {data.isna().sum().sum()} values",
            "Handling: Median imputation"
        ]
        plt.text(0.1, 0.95, 'Data Overview', fontsize=18, fontweight='bold')
        for i, line in enumerate(info_text):
            plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
        pdf.savefig()
        plt.close()

        # Page 3: Visualizations
        fig, axes = plt.subplots(2, 2, figsize=(12, 10))
        sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0]).set_title('Value Distribution')
        sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[0, 1]).set_title('Income vs Value')
        sns.boxplot(data=data[['Age', 'Education_Years']], ax=axes[1, 0]).set_title('Feature Distribution')
        sns.heatmap(data.corr(), annot=True, cmap='coolwarm', ax=axes[1, 1]).set_title('Correlation Matrix')
        plt.tight_layout()
        pdf.savefig()
        plt.close()

        # Page 4: Model Results
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')
        plt.text(0.1, 0.9, 'Model Performance', fontsize=18, fontweight='bold')
        plt.text(0.1, 0.85, tabulate(results_df, headers='keys', tablefmt='grid', showindex=False), fontsize=10)
        # Update R² score placeholder in insight_text
        insight_text[1] = f"features. The Random Forest model performed best (R²={results_df.iloc[0]['R²_Score']:.3f}),"
        plt.text(0.1, 0.5,
                 f"Best: {results_df.iloc[0]['Model']} (R²={results_df.iloc[0]['R²_Score']:.3f})\n"
                 f"Worst: {results_df.iloc[-1]['Model']} (R²={results_df.iloc[-1]['R²_Score']:.3f})\n\n"
                 "Analysis:\n"
                 "- Tree-based models handled non-linear patterns best\n"
                 "- Linear models had limitations with complex relationships\n"
                 "- All models benefited from feature scaling",
                 fontsize=12)
        pdf.savefig()
        plt.close()

        # Page 5: Insights (20 lines)
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')
        insight_text = [
            "This project analyzes housing value prediction using demographic",
            # This line will be updated above to include the actual R² score
            "features. The Random Forest model performed best (R²=0.XX),",
            "demonstrating that ensemble methods effectively capture the",
            "complex relationships in this data. Key insights include:",
            "",
            "1. Income is the strongest predictor of house value",
            "2. Education years had less impact than expected",
            "3. Age shows non-linear relationship with value",
            "4. Experience contributes minimally to predictions",
            "",
            "Practical applications include:",
            "- Automated property valuation systems",
            "- Mortgage risk assessment tools",
            "- Urban development planning",
            "",
            "Future improvements could:",
            "- Incorporate geographical data",
            "- Add economic indicators",
            "- Test deep learning approaches",
            "",
            "Repository: github.com/yourusername/X_TEST.DATA",
            "Data Folder: /Data/train_test/X_TEST.csv"
        ]
        # Re-add the line that updates the R2 score after the list is defined
        insight_text[1] = f"features. The Random Forest model performed best (R²={results_df.iloc[0]['R²_Score']:.3f}),"

        plt.text(0.1, 0.95, 'Project Insights', fontsize=20, fontweight='bold')
        for i, line in enumerate(insight_text):
            # Adjust vertical position based on line index
            plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
        pdf.savefig()
        plt.close()

generate_pdf_report()

# ====================== 6. UPLOAD TO GOOGLE DRIVE ======================
def upload_to_drive(folder_path, creds_file='credentials.json'):
    try:
        # Create ZIP
        zip_filename = f"{folder_path}.zip"
        with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for root, dirs, files in os.walk(folder_path):
                for file in files:
                    file_path = os.path.join(root, file)
                    arcname = os.path.relpath(file_path, folder_path)
                    zipf.write(file_path, arcname=os.path.join(folder_path, arcname))

        # Authenticate
        credentials = service_account.Credentials.from_service_account_file(
            creds_file, scopes=['https://www.googleapis.com/auth/drive'])
        service = build('drive', 'v3', credentials=credentials)

        # Upload
        file_metadata = {'name': zip_filename}
        media = MediaFileUpload(zip_filename, mimetype='application/zip')
        file = service.files().create(
            body=file_metadata,
            media_body=media,
            fields='id, webViewLink'
        ).execute()

        return file.get('webViewLink')

    except FileNotFoundError:
        print(f"Credentials file not found: {creds_file}")
        print("Please ensure 'credentials.json' is in the same directory as the script.")
        return None
    except Exception as e:
        print(f"Drive upload error: {str(e)}")
        return None

# Execute upload
# Check if credentials.json exists before attempting upload
if os.path.exists('credentials.json'):
    drive_link = upload_to_drive(project_dir)
else:
    drive_link = None
    print("\nSkipping Google Drive upload: 'credentials.json' not found.")


print("\n" + "="*50)
print(f"Project saved locally at: {os.path.abspath(project_dir)}")
if drive_link:
    print(f"Google Drive link: {drive_link}")
else:
    print("Google Drive upload failed - using local files only")
    print("="*50)

def generate_pdf_report():
    with PdfPages(os.path.join(project_dir, 'House_Value_Prediction_Report.pdf')) as pdf:
        plt.rcParams['font.family'] = 'Times New Roman'

        # Page 1: Cover
        plt.figure(figsize=(11, 8.5))
        plt.text(0.5, 0.7, 'House Value Prediction Report',
                 ha='center', va='center', fontsize=24, fontweight='bold')
        plt.text(0.5, 0.5, 'Machine Learning Project',
                 ha='center', va='center', fontsize=18)
        plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                         ha='center', va='center', fontsize=12)
        plt.axis('off')
        pdf.savefig()
        plt.close()

        # Page 2: Dataset Info
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')
        info_text = [
            "Dataset Information:",
            f"Name: House Value Prediction Data",
            f"Source: Synthetic Database",
            f"Original Link: https://example.com/house_data",
            f"Problem Type: Regression",
            f"Attributes: {X.shape[1]} (Age, Income, Education, Experience)",
            f"Samples: {len(data)}",
            "",
            "Statistics:",
            f"Age: {data['Age'].min()}-{data['Age'].max()} years",
            f"Income: ${data['Income'].mean():,.0f} ± {data['Income'].std():,.0f}",
            f"House Value: ${data['House_Value'].mean():,.0f} ± {data['House_Value'].std():,.0f}",
            "",
            "Missing Data:",
            f"Total: {data.isna().sum().sum()} values",
            "Handling: Median imputation"
        ]
        plt.text(0.1, 0.95, 'Data Overview', fontsize=18, fontweight='bold')
        for i, line in enumerate(info_text):
            plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
        pdf.savefig()
        plt.close()

        # Page 3: Visualizations
        fig, axes = plt.subplots(2, 2, figsize=(12, 10))
        sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0]).set_title('Value Distribution')
        sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[0, 1]).set_title('Income vs Value')
        sns.boxplot(data=data[['Age', 'Education_Years']], ax=axes[1, 0]).set_title('Feature Distribution')
        sns.heatmap(data.corr(), annot=True, cmap='coolwarm', ax=axes[1, 1]).set_title('Correlation Matrix')
        plt.tight_layout()
        pdf.savefig()
        plt.close()

        # Page 4: Model Results
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')
        plt.text(0.1, 0.9, 'Model Performance', fontsize=18, fontweight='bold')
        plt.text(0.1, 0.85, tabulate(results_df, headers='keys', tablefmt='grid', showindex=False), fontsize=10)

        # Define insight_text here, before it's used to update a line
        insight_text = [
            "This project analyzes housing value prediction using demographic",
            # This line will be updated below to include the actual R² score
            "features. The Random Forest model performed best (R²=0.XX),",
            "demonstrating that ensemble methods effectively capture the",
            "complex relationships in this data. Key insights include:",
            "",
            "1. Income is the strongest predictor of house value",
            "2. Education years had less impact than expected",
            "3. Age shows non-linear relationship with value",
            "4. Experience contributes minimally to predictions",
            "",
            "Practical applications include:",
            "- Automated property valuation systems",
            "- Mortgage risk assessment tools",
            "- Urban development planning",
            "",
            "Future improvements could:",
            "- Incorporate geographical data",
            "- Add economic indicators",
            "- Test deep learning approaches",
            "",
            "Repository: github.com/yourusername/X_TEST.DATA",
            "Data Folder: /Data/train_test/X_TEST.csv"
        ]

        # Now update the R² score placeholder in insight_text
        insight_text[1] = f"features. The Random Forest model performed best (R²={results_df.iloc[0]['R²_Score']:.3f}),"

        plt.text(0.1, 0.5,
                 f"Best: {results_df.iloc[0]['Model']} (R²={results_df.iloc[0]['R²_Score']:.3f})\n"
                 f"Worst: {results_df.iloc[-1]['Model']} (R²={results_df.iloc[-1]['R²_Score']:.3f})\n\n"
                 "Analysis:\n"
                 "- Tree-based models handled non-linear patterns best\n"
                 "- Linear models had limitations with complex relationships\n"
                 "- All models benefited from feature scaling",
                 fontsize=12)
        pdf.savefig()
        plt.close()

        # Page 5: Insights (20 lines)
        # The insight_text variable is now defined from the previous page
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')

        plt.text(0.1, 0.95, 'Project Insights', fontsize=20, fontweight='bold')
        for i, line in enumerate(insight_text):
            # Adjust vertical position based on line index
            plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
        pdf.savefig()
        plt.close()

import os
import shutil
import zipfile
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.svm import SVR
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import r2_score, mean_squared_error
from tabulate import tabulate

# ====================== 1. DATA PREPARATION ======================
np.random.seed(42)
data = pd.DataFrame({
    'Age': np.random.randint(18, 65, 200),
    'Income': np.random.normal(50000, 15000, 200),
    'Education_Years': np.random.randint(8, 20, 200),
    'Experience_Years': np.random.randint(0, 40, 200),
    'House_Value': np.random.normal(300000, 100000, 200)
})
data.loc[np.random.choice(data.index, 10), 'Income'] = np.nan
data.loc[np.random.choice(data.index, 5), 'Education_Years'] = np.nan

# ====================== 2. PREPROCESSING ======================
imputer = SimpleImputer(strategy='median')
data_imputed = pd.DataFrame(imputer.fit_transform(data), columns=data.columns)

X = data_imputed.drop('House_Value', axis=1)
y = data_imputed['House_Value']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# ====================== 3. MODEL TRAINING ======================
models = {
    'Linear_Regression': LinearRegression(),
    'Random_Forest': RandomForestRegressor(random_state=42),
    'Gradient_Boosting': GradientBoostingRegressor(random_state=42),
    'SVR': SVR(),
    'KNN': KNeighborsRegressor()
}

results = []
predictions = {}
for name, model in models.items():
    model.fit(X_train_scaled, y_train)
    y_pred = model.predict(X_test_scaled)

    results.append({
        'Model': name,
        'R²_Score': r2_score(y_test, y_pred),
        'MSE': mean_squared_error(y_test, y_pred),
        'RMSE': np.sqrt(mean_squared_error(y_test, y_pred))
    })
    predictions[name] = y_pred

results_df = pd.DataFrame(results).sort_values('R²_Score', ascending=False)

# ====================== 4. CREATE FOLDER STRUCTURE ======================
def create_folder_structure():
    base_dir = 'X_TEST.DATA'  # Using requested name
    os.makedirs(base_dir, exist_ok=True)

    # Create subdirectories
    dirs = ['Code', 'Data/original', 'Data/train_test', 'Data/Results']
    for dir_path in dirs:
        os.makedirs(os.path.join(base_dir, dir_path), exist_ok=True)

    # Save data files
    data.to_csv(os.path.join(base_dir, 'Data/original/original_data.csv'), index=False)

    # Save train/test split with requested naming
    pd.DataFrame(X_test_scaled, columns=X.columns).to_csv(
        os.path.join(base_dir, 'Data/train_test/X_TEST.csv'), index=False)
    X_train.to_csv(os.path.join(base_dir, 'Data/train_test/X_TRAIN.csv'), index=False)
    y_test.to_csv(os.path.join(base_dir, 'Data/train_test/Y_TEST.csv'), index=False)
    y_train.to_csv(os.path.join(base_dir, 'Data/train_test/Y_TRAIN.csv'), index=False)

    # Save predictions
    for model_name, preds in predictions.items():
        pd.DataFrame({'predictions': preds}).to_csv(
            os.path.join(base_dir, f'Data/Results/predictions_{model_name}.csv'),
            index=False)

    return base_dir

project_dir = create_folder_structure()

# ====================== 5. GENERATE PDF REPORT ======================
def generate_pdf_report():
    with PdfPages(os.path.join(project_dir, 'House_Value_Prediction_Report.pdf')) as pdf:
        plt.rcParams['font.family'] = 'Times New Roman'

        # Page 1: Cover
        plt.figure(figsize=(11, 8.5))
        plt.text(0.5, 0.7, 'House Value Prediction Report',
                 ha='center', va='center', fontsize=24, fontweight='bold')
        plt.text(0.5, 0.5, 'Machine Learning Project',
                 ha='center', va='center', fontsize=18)
        plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                         ha='center', va='center', fontsize=12)
        plt.axis('off')
        pdf.savefig()
        plt.close()

        # Page 2: Dataset Info
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')
        info_text = [
            "Dataset Information:",
            f"Name: House Value Prediction Data",
            f"Source: Synthetic Database",
            f"Original Link: https://example.com/house_data",
            f"Problem Type: Regression",
            f"Attributes: {X.shape[1]} (Age, Income, Education, Experience)",
            f"Samples: {len(data)}",
            "",
            "Statistics:",
            f"Age: {data['Age'].min()}-{data['Age'].max()} years",
            f"Income: ${data['Income'].mean():,.0f} ± {data['Income'].std():,.0f}",
            f"House Value: ${data['House_Value'].mean():,.0f} ± {data['House_Value'].std():,.0f}",
            "",
            "Missing Data:",
            f"Total: {data.isna().sum().sum()} values",
            "Handling: Median imputation"
        ]
        plt.text(0.1, 0.95, 'Data Overview', fontsize=18, fontweight='bold')
        for i, line in enumerate(info_text):
            plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
        pdf.savefig()
        plt.close()

        # Page 3: Visualizations
        fig, axes = plt.subplots(2, 2, figsize=(12, 10))
        sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0]).set_title('Value Distribution')
        sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[0, 1]).set_title('Income vs Value')
        sns.boxplot(data=data[['Age', 'Education_Years']], ax=axes[1, 0]).set_title('Feature Distribution')
        sns.heatmap(data.corr(), annot=True, cmap='coolwarm', ax=axes[1, 1]).set_title('Correlation Matrix')
        plt.tight_layout()
        pdf.savefig()
        plt.close()

        # Page 4: Model Results
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')
        plt.text(0.1, 0.9, 'Model Performance', fontsize=18, fontweight='bold')
        plt.text(0.1, 0.85, tabulate(results_df, headers='keys', tablefmt='grid', showindex=False), fontsize=10)
        # Update R² score placeholder in insight_text
        insight_text[1] = f"features. The Random Forest model performed best (R²={results_df.iloc[0]['R²_Score']:.3f}),"
        plt.text(0.1, 0.5,
                 f"Best: {results_df.iloc[0]['Model']} (R²={results_df.iloc[0]['R²_Score']:.3f})\n"
                 f"Worst: {results_df.iloc[-1]['Model']} (R²={results_df.iloc[-1]['R²_Score']:.3f})\n\n"
                 "Analysis:\n"
                 "- Tree-based models handled non-linear patterns best\n"
                 "- Linear models had limitations with complex relationships\n"
                 "- All models benefited from feature scaling",
                 fontsize=12)
        pdf.savefig()
        plt.close()

        # Page 5: Insights (20 lines)
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')
        insight_text = [
            "This project analyzes housing value prediction using demographic",
            # This line will be updated above to include the actual R² score
            "features. The Random Forest model performed best (R²=0.XX),",
            "demonstrating that ensemble methods effectively capture the",
            "complex relationships in this data. Key insights include:",
            "",
            "1. Income is the strongest predictor of house value",
            "2. Education years had less impact than expected",
            "3. Age shows non-linear relationship with value",
            "4. Experience contributes minimally to predictions",
            "",
            "Practical applications include:",
            "- Automated property valuation systems",
            "- Mortgage risk assessment tools",
            "- Urban development planning",
            "",
            "Future improvements could:",
            "- Incorporate geographical data",
            "- Add economic indicators",
            "- Test deep learning approaches",
            "",
            "Repository: github.com/yourusername/X_TEST.DATA",
            "Data Folder: /Data/train_test/X_TEST.csv"
        ]
        # Re-add the line that updates the R2 score after the list is defined
        insight_text[1] = f"features. The Random Forest model performed best (R²={results_df.iloc[0]['R²_Score']:.3f}),"

        plt.text(0.1, 0.95, 'Project Insights', fontsize=20, fontweight='bold')
        for i, line in enumerate(insight_text):
            # Adjust vertical position based on line index
            plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
        pdf.savefig()
        plt.close()

generate_pdf_report()

# ====================== 6. UPLOAD TO GOOGLE DRIVE ======================
def upload_to_drive(folder_path, creds_file='credentials.json'):
    try:
        # Create ZIP
        zip_filename = f"{folder_path}.zip"
        with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for root, dirs, files in os.walk(folder_path):
                for file in files:
                    file_path = os.path.join(root, file)
                    arcname = os.path.relpath(file_path, folder_path)
                    zipf.write(file_path, arcname=os.path.join(folder_path, arcname))

        # Authenticate
        credentials = service_account.Credentials.from_service_account_file(
            creds_file, scopes=['https://www.googleapis.com/auth/drive'])
        service = build('drive', 'v3', credentials=credentials)

        # Upload
        file_metadata = {'name': zip_filename}
        media = MediaFileUpload(zip_filename, mimetype='application/zip')
        file = service.files().create(
            body=file_metadata,
            media_body=media,
            fields='id, webViewLink'
        ).execute()

        return file.get('webViewLink')

    except FileNotFoundError:
        print(f"Credentials file not found: {creds_file}")
        print("Please ensure 'credentials.json' is in the same directory as the script.")
        return None
    except Exception as e:
        print(f"Drive upload error: {str(e)}")
        return None

# Execute upload
# Check if credentials.json exists before attempting upload
if os.path.exists('credentials.json'):
    drive_link = upload_to_drive(project_dir)
else:
    drive_link = None
    print("\nSkipping Google Drive upload: 'credentials.json' not found.")


print("\n" + "="*50)
print(f"Project saved locally at: {os.path.abspath(project_dir)}")
if drive_link:
    print(f"Google Drive link: {drive_link}")
else:
    print("Google Drive upload failed - using local files only")
    print("="*50)

import os
import shutil
import zipfile
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor
from sklearn.svm import SVR
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import r2_score, mean_squared_error
from tabulate import tabulate

# ====================== 1. DATA PREPARATION ======================
np.random.seed(42)
data = pd.DataFrame({
    'Age': np.random.randint(18, 65, 200),
    'Income': np.random.normal(50000, 15000, 200),
    'Education_Years': np.random.randint(8, 20, 200),
    'Experience_Years': np.random.randint(0, 40, 200),
    'House_Value': np.random.normal(300000, 100000, 200)
})
data.loc[np.random.choice(data.index, 10), 'Income'] = np.nan
data.loc[np.random.choice(data.index, 5), 'Education_Years'] = np.nan

# ====================== 2. PREPROCESSING ======================
imputer = SimpleImputer(strategy='median')
data_imputed = pd.DataFrame(imputer.fit_transform(data), columns=data.columns)

X = data_imputed.drop('House_Value', axis=1)
y = data_imputed['House_Value']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# ====================== 3. MODEL TRAINING ======================
models = {
    'Linear_Regression': LinearRegression(),
    'Random_Forest': RandomForestRegressor(random_state=42),
    'Gradient_Boosting': GradientBoostingRegressor(random_state=42),
    'SVR': SVR(),
    'KNN': KNeighborsRegressor()
}

results = []
predictions = {}
for name, model in models.items():
    model.fit(X_train_scaled, y_train)
    y_pred = model.predict(X_test_scaled)

    results.append({
        'Model': name,
        'R²_Score': r2_score(y_test, y_pred),
        'MSE': mean_squared_error(y_test, y_pred),
        'RMSE': np.sqrt(mean_squared_error(y_test, y_pred))
    })
    predictions[name] = y_pred

results_df = pd.DataFrame(results).sort_values('R²_Score', ascending=False)

# ====================== 4. CREATE FOLDER STRUCTURE ======================
def create_folder_structure():
    base_dir = 'X_TEST.DATA'  # Using requested name
    os.makedirs(base_dir, exist_ok=True)

    # Create subdirectories
    dirs = ['Code', 'Data/original', 'Data/train_test', 'Data/Results']
    for dir_path in dirs:
        os.makedirs(os.path.join(base_dir, dir_path), exist_ok=True)

    # Save data files
    data.to_csv(os.path.join(base_dir, 'Data/original/original_data.csv'), index=False)

    # Save train/test split with requested naming
    pd.DataFrame(X_test_scaled, columns=X.columns).to_csv(
        os.path.join(base_dir, 'Data/train_test/X_TEST.csv'), index=False)
    X_train.to_csv(os.path.join(base_dir, 'Data/train_test/X_TRAIN.csv'), index=False)
    y_test.to_csv(os.path.join(base_dir, 'Data/train_test/Y_TEST.csv'), index=False)
    y_train.to_csv(os.path.join(base_dir, 'Data/train_test/Y_TRAIN.csv'), index=False)

    # Save predictions
    for model_name, preds in predictions.items():
        pd.DataFrame({'predictions': preds}).to_csv(
            os.path.join(base_dir, f'Data/Results/predictions_{model_name}.csv'),
            index=False)

    return base_dir

project_dir = create_folder_structure()

# ====================== 5. GENERATE PDF REPORT ======================
def generate_pdf_report():
    with PdfPages(os.path.join(project_dir, 'House_Value_Prediction_Report.pdf')) as pdf:
        plt.rcParams['font.family'] = 'Times New Roman'

        # Page 1: Cover
        plt.figure(figsize=(11, 8.5))
        plt.text(0.5, 0.7, 'House Value Prediction Report',
                 ha='center', va='center', fontsize=24, fontweight='bold')
        plt.text(0.5, 0.5, 'Machine Learning Project',
                 ha='center', va='center', fontsize=18)
        plt.text(0.5, 0.3, f'Date: {pd.Timestamp.now().strftime("%Y-%m-%d")}',
                         ha='center', va='center', fontsize=12)
        plt.axis('off')
        pdf.savefig()
        plt.close()

        # Page 2: Dataset Info
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')
        info_text = [
            "Dataset Information:",
            f"Name: House Value Prediction Data",
            f"Source: Synthetic Database",
            f"Original Link: https://example.com/house_data",
            f"Problem Type: Regression",
            f"Attributes: {X.shape[1]} (Age, Income, Education, Experience)",
            f"Samples: {len(data)}",
            "",
            "Statistics:",
            f"Age: {data['Age'].min()}-{data['Age'].max()} years",
            f"Income: ${data['Income'].mean():,.0f} ± {data['Income'].std():,.0f}",
            f"House Value: ${data['House_Value'].mean():,.0f} ± {data['House_Value'].std():,.0f}",
            "",
            "Missing Data:",
            f"Total: {data.isna().sum().sum()} values",
            "Handling: Median imputation"
        ]
        plt.text(0.1, 0.95, 'Data Overview', fontsize=18, fontweight='bold')
        for i, line in enumerate(info_text):
            plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
        pdf.savefig()
        plt.close()

        # Page 3: Visualizations
        fig, axes = plt.subplots(2, 2, figsize=(12, 10))
        sns.histplot(data['House_Value'], kde=True, ax=axes[0, 0]).set_title('Value Distribution')
        sns.scatterplot(x='Income', y='House_Value', data=data, ax=axes[0, 1]).set_title('Income vs Value')
        sns.boxplot(data=data[['Age', 'Education_Years']], ax=axes[1, 0]).set_title('Feature Distribution')
        sns.heatmap(data.corr(), annot=True, cmap='coolwarm', ax=axes[1, 1]).set_title('Correlation Matrix')
        plt.tight_layout()
        pdf.savefig()
        plt.close()

        # Page 4: Model Results
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')
        plt.text(0.1, 0.9, 'Model Performance', fontsize=18, fontweight='bold')
        plt.text(0.1, 0.85, tabulate(results_df, headers='keys', tablefmt='grid', showindex=False), fontsize=10)

        # Define insight_text here, BEFORE updating it
        insight_text = [
            "This project analyzes housing value prediction using demographic",
            # This line will be updated below to include the actual R² score
            "features. The Random Forest model performed best (R²=0.XX),",
            "demonstrating that ensemble methods effectively capture the",
            "complex relationships in this data. Key insights include:",
            "",
            "1. Income is the strongest predictor of house value",
            "2. Education years had less impact than expected",
            "3. Age shows non-linear relationship with value",
            "4. Experience contributes minimally to predictions",
            "",
            "Practical applications include:",
            "- Automated property valuation systems",
            "- Mortgage risk assessment tools",
            "- Urban development planning",
            "",
            "Future improvements could:",
            "- Incorporate geographical data",
            "- Add economic indicators",
            "- Test deep learning approaches",
            "",
            "Repository: github.com/yourusername/X_TEST.DATA",
            "Data Folder: /Data/train_test/X_TEST.csv"
        ]

        # Now update the R² score placeholder in insight_text
        insight_text[1] = f"features. The Random Forest model performed best (R²={results_df.iloc[0]['R²_Score']:.3f}),"

        plt.text(0.1, 0.5,
                 f"Best: {results_df.iloc[0]['Model']} (R²={results_df.iloc[0]['R²_Score']:.3f})\n"
                 f"Worst: {results_df.iloc[-1]['Model']} (R²={results_df.iloc[-1]['R²_Score']:.3f})\n\n"
                 "Analysis:\n"
                 "- Tree-based models handled non-linear patterns best\n"
                 "- Linear models had limitations with complex relationships\n"
                 "- All models benefited from feature scaling",
                 fontsize=12)
        pdf.savefig()
        plt.close()

        # Page 5: Insights (20 lines)
        # The insight_text variable is now defined from the previous page
        plt.figure(figsize=(11, 8.5))
        plt.axis('off')

        plt.text(0.1, 0.95, 'Project Insights', fontsize=20, fontweight='bold')
        for i, line in enumerate(insight_text):
            # Adjust vertical position based on line index
            plt.text(0.1, 0.9 - i*0.04, line, fontsize=12)
        pdf.savefig()
        plt.close()

generate_pdf_report()

# ====================== 6. UPLOAD TO GOOGLE DRIVE ======================
def upload_to_drive(folder_path, creds_file='credentials.json'):
    try:
        # Create ZIP
        zip_filename = f"{folder_path}.zip"
        with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for root, dirs, files in os.walk(folder_path):
                for file in files:
                    file_path = os.path.join(root, file)
                    arcname = os.path.relpath(file_path, folder_path)
                    zipf.write(file_path, arcname=os.path.join(folder_path, arcname))

        # Authenticate
        credentials = service_account.Credentials.from_service_account_file(
            creds_file, scopes=['https://www.googleapis.com/auth/drive'])
        service = build('drive', 'v3', credentials=credentials)

        # Upload
        file_metadata = {'name': zip_filename}
        media = MediaFileUpload(zip_filename, mimetype='application/zip')
        file = service.files().create(
            body=file_metadata,
            media_body=media,
            fields='id, webViewLink'
        ).execute()

        return file.get('webViewLink')

    except FileNotFoundError:
        print(f"Credentials file not found: {creds_file}")
        print("Please ensure 'credentials.json' is in the same directory as the script.")
        return None
    except Exception as e:
        print(f"Drive upload error: {str(e)}")
        return None

# Execute upload
# Check if credentials.json exists before attempting upload
if os.path.exists('credentials.json'):
    drive_link = upload_to_drive(project_dir)
else:
    drive_link = None
    print("\nSkipping Google Drive upload: 'credentials.json' not found.")


print("\n" + "="*50)
print(f"Project saved locally at: {os.path.abspath(project_dir)}")
if drive_link:
    print(f"Google Drive link: {drive_link}")
else:
    print("Google Drive upload failed - using local files only")
    print("="*50)

import os
import shutil
import zipfile
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
import pandas as pd
import numpy as np

# 1. إنشاء هيكل المجلدات
def create_project_structure():
    # المجلد الرئيسي
        base_dir = "Fainaly"
            os.makedirs(base_dir, exist_ok=True)

                    # الملفات الرئيسية
                        with open(os.path.join(base_dir, "main.py"), "w") as f:
                                f.write("# كود بايثون الرئيسي\n\n# استيراد المكتبات\nimport pandas as pd\n\n# الكود الخاص بك هنا")

                                        # هيكل مجلدات البيانات
                                            data_dirs = {
                                                    "original_data": ["raw_data.csv", "metadata.json"],
                                                            "preprocessed_data": ["X_train.csv", "X_test.csv", "y_train.csv", "y_test.csv"],
                                                                    "Results": ["predictions_RF_model.csv", "predictions_SVM_model.csv"]
                                                                        }

                                                                                for dir_name, files in data_dirs.items():
                                                                                        os.makedirs(os.path.join(base_dir, "github_data", dir_name), exist_ok=True)
                                                                                                for file in files:
                                                                                                            open(os.path.join(base_dir, "github_data", dir_name, file), "w").close()

                                                                                                                    return base_dir

                                                                                                                    # 2. إنشاء بيانات نموذجية
                                                                                                                    def generate_sample_data(base_dir):
                                                                                                                        # بيانات التدريب والاختبار
                                                                                                                            X_train = pd.DataFrame(np.random.rand(100, 4), columns=[f"feature_{i}" for i in range(1,5)])
                                                                                                                                X_test = pd.DataFrame(np.random.rand(25, 4), columns=[f"feature_{i}" for i in range(1,5)])
                                                                                                                                    y_train = pd.Series(np.random.rand(100), name="target")
                                                                                                                                        y_test = pd.Series(np.random.rand(25), name="target")

                                                                                                                                                # حفظ البيانات المعالجة
                                                                                                                                                    X_train.to_csv(os.path.join(base_dir, "github_data", "preprocessed_data", "X_train.csv"), index=False)
                                                                                                                                                        X_test.to_csv(os.path.join(base_dir, "github_data", "preprocessed_data", "X_test.csv"), index=False)
                                                                                                                                                            y_train.to_csv(os.path.join(base_dir, "github_data", "preprocessed_data", "y_train.csv"), index=False)
                                                                                                                                                                y_test.to_csv(os.path.join(base_dir, "github_data", "preprocessed_data", "y_test.csv"), index=False)

                                                                                                                                                                        # إنشاء توقعات نموذجية
                                                                                                                                                                            predictions = {
                                                                                                                                                                                    "RF_model": np.random.rand(25),
                                                                                                                                                                                            "SVM_model": np.random.rand(25)
                                                                                                                                                                                                }

                                                                                                                                                                                                        for model_name, preds in predictions.items():
                                                                                                                                                                                                                pd.DataFrame({"predictions": preds}).to_csv(
                                                                                                                                                                                                                            os.path.join(base_dir, "github_data", "Results", f"predictions_{model_name}.csv"),
                                                                                                                                                                                                                                        index=False
                                                                                                                                                                                                                                                )

                                                                                                                                                                                                                                                # 3. إنشاء ملف PDF للتقرير
                                                                                                                                                                                                                                                def create_pdf_report(base_dir):
                                                                                                                                                                                                                                                    from matplotlib.backends.backend_pdf import PdfPages

                                                                                                                                                                                                                                                            with PdfPages(os.path.join(base_dir, "Project_Report.pdf")) as pdf:
                                                                                                                                                                                                                                                                    plt.figure(figsize=(11, 8.5))
                                                                                                                                                                                                                                                                            plt.text(0.5, 0.7, "تقرير المشروع", ha="center", va="center", fontsize=24)
                                                                                                                                                                                                                                                                                    plt.text(0.5, 0.5, "تحليل البيانات باستخدام تعلم الآلة", ha="center", va="center", fontsize=18)
                                                                                                                                                                                                                                                                                            plt.axis("off")
                                                                                                                                                                                                                                                                                                    pdf.savefig()
                                                                                                                                                                                                                                                                                                            plt.close()

                                                                                                                                                                                                                                                                                                            # 4. رفع الملفات إلى جوجل درايف
                                                                                                                                                                                                                                                                                                            def upload_to_drive(folder_path, creds_file="credentials.json"):
                                                                                                                                                                                                                                                                                                                try:
                                                                                                                                                                                                                                                                                                                        # إنشاء ملف مضغوط
                                                                                                                                                                                                                                                                                                                                zip_filename = f"{folder_path}.zip"
                                                                                                                                                                                                                                                                                                                                        with zipfile.ZipFile(zip_filename, "w", zipfile.ZIP_DEFLATED) as zipf:
                                                                                                                                                                                                                                                                                                                                                    for root, dirs, files in os.walk(folder_path):
                                                                                                                                                                                                                                                                                                                                                                    for file in files:
                                                                                                                                                                                                                                                                                                                                                                                        file_path = os.path.join(root, file)
                                                                                                                                                                                                                                                                                                                                                                                                            arcname = os.path.relpath(file_path, folder_path)
                                                                                                                                                                                                                                                                                                                                                                                                                                zipf.write(file_path, arcname=os.path.join(folder_path, arcname))

                                                                                                                                                                                                                                                                                                                                                                                                                                                # المصادقة مع جوجل درايف
                                                                                                                                                                                                                                                                                                                                                                                                                                                        credentials = service_account.Credentials.from_service_account_file(
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    creds_file,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                scopes=["https://www.googleapis.com/auth/drive"]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        )

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        service = build("drive", "v3", credentials=credentials)

رفع الملف
file_metadata = {
name": zip_filename,
mimeType": "application/zip"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }

media = MediaFileUpload(zip_filename, mimetype="application/zip")
file = service.files().create(
body=file_metadata,
media_body=media,
fields="id, webViewLink"
execute()

return file.get("webViewLink")

except Exception as e:
print(f"حدث خطأ أثناء الرفع: {e}")
return None

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            # التنفيذ الرئيسي
if __name__ == "__main__":
إنشاء الهيكل
project_dir = create_project_structure()

إنشاء البيانات
generate_sample_data(project_dir)

إنشاء التقرير
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            create_pdf_report(project_dir)

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    # الرفع إلى جوجل درايف
drive_link = upload_to_drive(project_dir)

print("\n" + "="*50)
print("تم إنشاء هيكل المشروع بنجاح!")
print(f"المجلد المحلي: {os.path.abspath(project_dir)}")
if drive_link:
print(f"رابط جوجل درايف: {drive_link}")
else:
print("تعذر الرفع إلى جوجل درايف - يرجى الرفع يدوياً")
print("="*50)

import os
import shutil
import zipfile
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
import pandas as pd
import numpy as np
# Import matplotlib.pyplot as plt if needed for PDF creation in this cell
# from matplotlib.backends.backend_pdf import PdfPages # Already imported in generate_pdf_report

# 1. إنشاء هيكل المجلدات
def create_project_structure():
    # المجلد الرئيسي
    base_dir = "Fainaly"
    os.makedirs(base_dir, exist_ok=True)

    # الملفات الرئيسية
    with open(os.path.join(base_dir, "main.py"), "w") as f:
        f.write("# كود بايثون الرئيسي\n\n# استيراد المكتبات\nimport pandas as pd\n\n# الكود الخاص بك هنا")

    # هيكل مجلدات البيانات
    data_dirs = {
        "original_data": ["raw_data.csv", "metadata.json"],
        "preprocessed_data": ["X_train.csv", "X_test.csv", "y_train.csv", "y_test.csv"],
        "Results": ["predictions_RF_model.csv", "predictions_SVM_model.csv"]
    }

    for dir_name, files in data_dirs.items():
        os.makedirs(os.path.join(base_dir, "github_data", dir_name), exist_ok=True)
        for file in files:
            open(os.path.join(base_dir, "github_data", dir_name, file), "w").close()

    return base_dir

# 2. إنشاء بيانات نموذجية
def generate_sample_data(base_dir):
    # بيانات التدريب والاختبار
    X_train = pd.DataFrame(np.random.rand(100, 4), columns=[f"feature_{i}" for i in range(1,5)])
    X_test = pd.DataFrame(np.random.rand(25, 4), columns=[f"feature_{i}" for i in range(1,5)])
    y_train = pd.Series(np.random.rand(100), name="target")
    y_test = pd.Series(np.random.rand(25), name="target")

    # حفظ البيانات المعالجة
    X_train.to_csv(os.path.join(base_dir, "github_data", "preprocessed_data", "X_train.csv"), index=False)
    X_test.to_csv(os.path.join(base_dir, "github_data", "preprocessed_data", "X_test.csv"), index=False)
    y_train.to_csv(os.path.join(base_dir, "github_data", "preprocessed_data", "y_train.csv"), index=False)
    y_test.to_csv(os.path.join(base_dir, "github_data", "preprocessed_data", "y_test.csv"), index=False)

    # إنشاء توقعات نموذجية
    predictions = {
        "RF_model": np.random.rand(25),
        "SVM_model": np.random.rand(25)
    }

    for model_name, preds in predictions.items():
        pd.DataFrame({"predictions": preds}).to_csv(
            os.path.join(base_dir, "github_data", "Results", f"predictions_{model_name}.csv"),
            index=False
        )

# 3. إنشاء ملف PDF للتقرير
def create_pdf_report(base_dir):
    # Import matplotlib.pyplot here if it's only used in this function in this cell
    import matplotlib.pyplot as plt
    from matplotlib.backends.backend_pdf import PdfPages

    with PdfPages(os.path.join(base_dir, "Project_Report.pdf")) as pdf:
        plt.figure(figsize=(11, 8.5))
        plt.text(0.5, 0.7, "تقرير المشروع", ha="center", va="center", fontsize=24)
        plt.text(0.5, 0.5, "تحليل البيانات باستخدام تعلم الآلة", ha="center", va="center", fontsize=18)
        plt.axis("off")
        pdf.savefig()
        plt.close()

# 4. رفع الملفات إلى جوجل درايف
def upload_to_drive(folder_path, creds_file="credentials.json"):
    try:
        # إنشاء ملف مضغوط
        zip_filename = f"{folder_path}.zip"
        with zipfile.ZipFile(zip_filename, "w", zipfile.ZIP_DEFLATED) as zipf:
            for root, dirs, files in os.walk(folder_path):
                for file in files:
                    file_path = os.path.join(root, file)
                    arcname = os.path.relpath(file_path, folder_path)
                    zipf.write(file_path, arcname=os.path.join(folder_path, arcname))

        # المصادقة مع جوجل درايف
        credentials = service_account.Credentials.from_service_account_file(
            creds_file,
            scopes=["https://www.googleapis.com/auth/drive"]
        )

        service = build("drive", "v3", credentials=credentials)

        # رفع الملف
        file_metadata = {
            "name": zip_filename,
            "mimeType": "application/zip"
        }

        media = MediaFileUpload(zip_filename, mimetype="application/zip")
        file = service.files().create(
            body=file_metadata,
            media_body=media,
            fields="id, webViewLink"
        ).execute()

        return file.get("webViewLink")

    except FileNotFoundError:
        print(f"Credentials file not found: {creds_file}")
        print("Please ensure 'credentials.json' is in the same directory as the script.")
        return None
    except Exception as e:
        print(f"حدث خطأ أثناء الرفع: {e}")
        return None

# التنفيذ الرئيسي
if __name__ == "__main__":
    # إنشاء الهيكل
    project_dir = create_project_structure()

    # إنشاء البيانات
    generate_sample_data(project_dir)

    # إنشاء التقرير
    create_pdf_report(project_dir)

    # الرفع إلى جوجل درايف
    drive_link = upload_to_drive(project_dir)

    print("\n" + "="*50)
    print("تم إنشاء هيكل المشروع بنجاح!")
    print(f"المجلد المحلي: {os.path.abspath(project_dir)}")
    if drive_link:
        print(f"رابط جوجل درايف: {drive_link}")
    else:
        print("تعذر الرفع إلى جوجل درايف - يرجى الرفع يدوياً")
    print("="*50)